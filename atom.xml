<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rossi Oddet]]></title>
  <link href="http://roddet.github.com/atom.xml" rel="self"/>
  <link href="http://roddet.github.com/"/>
  <updated>2014-05-21T01:43:46-04:00</updated>
  <id>http://roddet.github.com/</id>
  <author>
    <name><![CDATA[Rossi Oddet]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Soirée Devoxx France 2014 au JUG Nantes]]></title>
    <link href="http://roddet.github.com/2014/05/jugnantes-devoxx-france/"/>
    <updated>2014-05-20T08:41:00-04:00</updated>
    <id>http://roddet.github.com/2014/05/jugnantes-devoxx-france</id>
    <content type="html"><![CDATA[<p>Ce mardi 20 mai, c&#8217;était soirée Devoxx France avec le <a href="http://nantesjug.org/#/">JUG Nantes</a>.</p>

<p>Le contenu :</p>

<ul>
<li>Un tour d&#8217;horizon de <em>Devoxx France 2014</em> avec <a href="http://nantesjug.org/#/speakers/thibaud_raison">Thibaud Raison</a> et <a href="http://nantesjug.org/#/speakers/pierre_cosson">Pierre Cosson</a>.</li>
<li>La session <em>Devoxx France 2014</em> <a href="http://cfp.devoxx.fr/devoxxfr2014/talk/UGD-950/Gradle%20ne%20fait%20pas%20que%20remplacer%20Maven"><em>Gradle ne fait pas que remplacer Maven</em></a> rejouée par <a href="https://twitter.com/CedricChampeau">Cédric Champeau</a>.</li>
</ul>


<h2>Tour d&#8217;horizon de Devoxx France 2014</h2>

<p><a href="http://nantesjug.org/#/speakers/thibaud_raison">Thibaud</a> et <a href="http://nantesjug.org/#/speakers/pierre_cosson">Pierre</a> ont fait un résumé de leurs parcours <em>Devoxx</em>, donné leurs avis sur différentes sessions.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/mai14/retour-devoxx-france.jpg"></p>

<p>Ils ont identifié 4 thèmes principaux : Java 8, Javascript, Docker et Big Data. Les <em>Keynote</em> ne les ont pas vraiment marqué.</p>

<p><a href="http://nantesjug.org/#/speakers/thibaud_raison">Thibaud</a> et <a href="http://nantesjug.org/#/speakers/pierre_cosson">Pierre</a> ont noté quelques sessions.</p>

<p>Est notée 4/4 :</p>

<ul>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/DNY-501/Java%208%20Streams%20&amp;%20Collectors%20:%20patterns,%20performances,%20parall%C3%A9lisation">Java 8 Streams &amp; Collectors : patterns, performances, parallélisation</a></li>
</ul>


<p>Sont notées 3/4 :</p>

<ul>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/DLD-453/JavaScript,%20the%20next%20big%20...%20bytecode">JavaScript, the next big &#8230; bytecode</a></li>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/ZSJ-347/Promesses%20et%20Yield%20:%20les%20Future%3C%3F%3E%20de%20JavaScript">Promesses et Yield : les Future&lt;?> de JavaScript</a></li>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/CDH-803/Construire%20une%20application%20r%C3%A9elle%20de%20jeux%20en%20ligne%20avec%20NoSQL">Construire une application réelle de jeux en ligne avec NoSQL</a></li>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/MBI-023/Mise%20en%20production%20continue%20-%201%20an%20apr%C3%A8s">http://cfp.devoxx.fr/devoxxfr2014/talk/MBI-023/Mise%20en%20production%20continue%20-%201%20an%20apr%C3%A8s</a></li>
</ul>


<p>Sont notées 2/4 :</p>

<ul>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/UGH-991/30%20minutes%20pour%20d%C3%A9velopper%20une%20appli%20Java%20EE%20%3F%20C%27est%20largement%20suffisant%20avec%20Forge%202.0!">30 minutes pour développer une appli Java EE ? C&#8217;est largement suffisant avec Forge 2.0!</a></li>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/DWS-586/50%20nouvelles%20choses%20que%20l%27on%20peut%20faire%20avec%20Java%208">50 nouvelles choses que l&#8217;on peut faire avec Java 8</a></li>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/WFL-752/Lambda%20Architecture%20-%20Choose%20your%20tools%20for%20Real-Time%20Big%20Data">Lambda Architecture - Choose your tools for Real-Time Big Data</a></li>
<li><a href="http://cfp.devoxx.fr/devoxxfr2014/talk/TYU-863/Web%20performances,%20regardons%20les%20r%C3%A9sultats%20de%20pr%C3%A8s">Web performances, regardons les résultats de près</a></li>
</ul>


<p>Le bilan Devoxx ?</p>

<blockquote><p>Après Devoxx France, on est motivé, on repart avec plein d&#8217;idées et des trucs à tester.</p><footer><strong>Thibaud Raison et Pierre Cosson au JUG Nantes</strong></footer></blockquote>


<p>Et l&#8217;année prochaine ?</p>

<p><em>Devoxx France 2015</em> ça sera du 8 au 10 avril au Palais des Congrès. 1800 personnes sont attendues.</p>

<p><a href="http://nantesjug.org/#/speakers/thibaud_raison">Thibaud</a> et <a href="http://nantesjug.org/#/speakers/pierre_cosson">Pierre</a> mettront à disposition leurs slides sur <a href="http://nantesjug.org/#/events/2014_05_20">le site du JUG Nantes</a> très prochainement.</p>

<h2>Un petit mot sur Maven avant d&#8217;aborder la session de Cédric</h2>

<p>Jusqu&#8217;à l&#8217;année dernière, je ne prenais pas très au sérieux les alternatives à Maven.
En effet, Maven est un des <em>super-héros</em> du développeur Java.</p>

<p>Il a encouragé :</p>

<ul>
<li>La modularisation. Les projets sont devenus de plus en plus modulaires.</li>
<li>Une normalisation (organisation des répertoires, cycle de vie d&#8217;un build, exécution des tests, etc.)</li>
<li>Un essor de l&#8217;intégration continue</li>
</ul>


<p>Au regard de tous ces services rendus, beaucoup de développeurs Java sont très attachés à Maven et sont donc beaucoup moins réceptifs aux alternatives.
J&#8217;étais un de ces développeurs.
Ca fait presque 8 ans que j&#8217;utilise Maven et presque autant de temps à en dire du bien.
J&#8217;ai même fait de <a href="http://www.slideshare.net/RossiOddet/maven-par-la-pratique-14995676">la promotion en Afrique lors de JCertif 2012</a>.</p>

<p>Il y a 3 ans, lorsque <a href="https://twitter.com/gboissinot">Grégory Boissinot</a> présentait Gradle à ce même JUG Nantes.
Je n&#8217;étais pas réceptif et en plus le projet manquait de stabilité (modification trop fréquente de l&#8217;API).</p>

<p>Je me disais :</p>

<blockquote><p>C&#8217;est quoi cette chose qui ne veut pas rentrer dans le standard !</p></blockquote>


<p>Je m&#8217;imaginais dans l&#8217;armée et je voyais les personnes qui faisaient autre chose comme des déserteurs.</p>

<p>J&#8217;étais allergique aux alternatives à Maven parce qu&#8217;elles :</p>

<ul>
<li>donnaient de la flexibilité au <em>standard</em> Maven. Je me disais : Flexibilité = Entorse à la Norme = Désordre = Instabilité = Déserteurs :)</li>
<li>pouvaient utiliser des langages dynamiques. J&#8217;estimais perdre en lisibilité et du temps à apprendre un nouveau langage.</li>
<li>avaient une communauté restreinte et donc peu de plugins, réponses StackOverflow, etc.</li>
</ul>


<p>Avec l&#8217;émergence des technologies frontend, des langages fonctionnels, des langages dynamiques, j&#8217;ai eu l&#8217;occasion de voir d&#8217;autres systèmes de <em>Build</em> (<a href="http://www.gradle.org/">Gradle</a>, <a href="http://gruntjs.com/">Grunt</a>, <a href="http://www.scala-sbt.org/">SBT</a>, <a href="http://gant.codehaus.org/">Gant</a>, etc.).
Et <a href="http://maven.apache.org/">Maven</a> me parait, désormais, vieilli face à ses concurrents.</p>

<p>Le projet <a href="http://www.gradle.org/">Gradle</a> a bonne presse en ce moment.
Il a été bien aidé par des projets comme <a href="https://community.jboss.org/wiki/Gradlewhy?_sscc=t">Hibernate qui l&#8217;a adopté</a>.
L&#8217;année dernière, <a href="http://www.infoworld.com/t/development-tools/google-positions-gradle-the-build-system-of-choice-android-218852">Google l&#8217;a choisi comme système de build pour Android Studio</a>.</p>

<p>C&#8217;est donc en mode <em>réceptif</em> que j&#8217;ai participé à la session de <a href="https://twitter.com/CedricChampeau">Cédric</a>.</p>

<h2><em>Gradle ne fait pas que remplacer Maven</em></h2>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/mai14/gradle-devoxx.jpg"></p>

<p>Je vous invite à parcourir les slides de <a href="https://twitter.com/CedricChampeau">Cédric</a> qui se lisent bien.</p>

<script async class="speakerdeck-embed" data-id="846b09f0a93a0131565b426f673016e8" data-ratio="1.77777777777778" src="http://roddet.github.com//speakerdeck.com/assets/embed.js"></script>


<p>Parmi tous les avantages de Gradle par rapport à Maven, deux choses m&#8217;ont interpellé :</p>

<ul>
<li><p>Le Wrapper. Pour un projet donné, vous pouvez générer un wrapper (<code>gradle init</code>) qui permettre à tous les utilisateurs de récupérer la version de Gradle à utiliser pour le projet.
C&#8217;est particulièrement pratique pour l&#8217;intégration continue et aussi pour changer de version de gradle d&#8217;un projet.
Cela permet aussi de faire cohabiter simplement différentes versions de l&#8217;outil de build chez un développeur.</p></li>
<li><p>Pour réutiliser de la configuration de Build, Maven utilise l&#8217;héritage et Gradle utilise la composition.
C&#8217;est sur des points comme celui là que <a href="http://maven.apache.org/">Maven</a> montre sa vieillesse.
Il a été conçu à une époque où l&#8217;héritage était le roi pour mutualiser du code. Les choses ont changé depuis&#8230; mais pas Maven&#8230;</p></li>
</ul>


<p>Une chose est sûre, pour passer de <a href="http://maven.apache.org/">Maven</a> à <a href="http://www.gradle.org/">Gradle</a>, il faut apprendre Gradle.
<a href="http://maven.apache.org/">Maven</a> a ses défauts qui sont connus et maitrisés.
Il n&#8217;y a aujourd&#8217;hui aucune surprise à démarrer un projet avec <a href="http://maven.apache.org/">Maven</a>.
Est-ce que les experts <a href="http://maven.apache.org/">Maven</a> sont prêts à prendre des risques ? Apprendre une nouvelle technologie alors que <a href="http://maven.apache.org/">Maven</a> fonctionne ?</p>

<p>Noter l&#8217;existence du projet <a href="https://github.com/takari/maven-polyglot">Maven Polyglot</a> qui va permettre de faire de la configuration Maven avec plusieurs langages : clojure, ruby, scala, yaml, et même Groovy :)
Est-ce une réponse suffisante ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oracle, Java & Internet des Objets]]></title>
    <link href="http://roddet.github.com/2014/05/oracle-java-internet-des-objets/"/>
    <updated>2014-05-13T08:41:00-04:00</updated>
    <id>http://roddet.github.com/2014/05/oracle-java-internet-des-objets</id>
    <content type="html"><![CDATA[<p>2014 c&#8217;est l&#8217;année d&#8217;<em>Internet Of Things</em> ou l&#8217;Internet des Objets ou encore l&#8217;Internet des Choses.</p>

<p>Tous les médias le disent, regarder <a href="http://www.lefigaro.fr/secteur/high-tech/2014/01/06/01007-20140106ARTFIG00069-l-annee-2014-placee-sous-le-signe-de-l-internet-des-objets.php">ici</a>, <a href="http://www.atlantico.fr/rdv/minute-tech/2014-sera-t-elle-annee-internet-choses-bertrand-duperrin-951986.html">là</a> ou encore <a href="http://blog.econocom.com/blog/2014-lannee-de-linternet-des-objets-grand-public/">là</a>.</p>

<p>C&#8217;est tellement l&#8217;année de l&#8217;Internet des Objets que :</p>

<ul>
<li>les conférences IT ont maintenant des tracks dédiés, <a href="http://cfp.devoxx.fr/devoxxfr2014/talks/hack"><em>Future Devoxx</em></a>,
<a href="http://cfp.devoxx.fr/devoxxfr2014/talks/hack">Un après-midi (Démo NAO, Objets connectés, Démo ORA Smart Glasses) au BreizhCamp</a>, etc.</li>
<li>des conférences dédiées fleurissent un peu partout dans le monde : <a href="http://blog.econocom.com/blog/2014-lannee-de-linternet-des-objets-grand-public/">IoT Conference</a>, <a href="http://www.internetofthingsasia.com/">IoT Asia</a>, <a href="http://iotday.org/">IoT Day</a>, etc.</li>
<li>des objets connectés en tout genre apparaissent. Il en y a tellement que <a href="http://www.amazon.com/b?node=9013937011">Amazon a créé une rubrique dédiée &#8220;Wearable Technology&#8221;</a>.</li>
</ul>


<p><a href="http://www.oracle.com/index.html">Oracle</a> l&#8217;a bien intégré et déploit beaucoup d&#8217;énergie sur ce sujet ces derniers temps comme nous allons le voir.</p>

<p><img class="center" src="http://roddet.github.com/images/logos/FY14Duke14.png"></p>

<h2>Une gamme de produits Java Embedded</h2>

<p>Il y a plusieurs produits pour faire du Java en environnement embarqué :</p>

<ul>
<li><a href="http://www.oracle.com/technetwork/java/embedded/resources/se-embeddocs/index.html">Oracle Java SE Embedded</a> destiné à des appareils de 32MB ou plus.</li>
<li><a href="http://www.oracle.com/us/technologies/java/embedded/mobile-edition/overview/index.html">Oracle Java ME Embedded Client</a> pour des appareils de 8MB ou plus.</li>
<li><a href="http://www.oracle.com/technetwork/java/embedded/resources/me-embeddocs/index.html">Oracle Java ME Embedded</a> pour des appareils de 128 KB ou plus.</li>
<li><a href="http://www.oracle.com/technetwork/java/embedded/resources/java-embedded-suite/index.html">Oracle Java Embedded Suite</a>, c&#8217;est du Oracle Java SE Embedded + Java DB + Glassfish optimisé + JAX-RS (Jersey)</li>
<li><a href="http://docs.oracle.com/cd/E28280_01/doc.1111/e39318/toc.htm">Oracle Event Processing</a>, un serveur qui permet de supporter des applications event-driven qui font beaucoup de streaming de données.
Il n&#8217;y a pas le mot <em>réactif</em> mais ça ressemble dans l&#8217;idée ;)</li>
</ul>


<h2>Des événements Oracle IoT</h2>

<p>Des sessions en ligne sont régulièrement organisées :</p>

<ul>
<li><a href="https://blogs.oracle.com/java/entry/free_webinar_on_java_micro">Une session le 5 mai dernier</a></li>
<li><a href="https://blogs.oracle.com/java/entry/virtual_developer_day_java_2014">Un &#8220;Virtual Developer Day&#8221;</a> les 6 (Amérique), 14 (Europe/Afrique) et 21 mai (Asie).</li>
</ul>


<p>En Afrique, des sessions Java Embedded ont été organisées notamment :</p>

<ul>
<li>En Tunisie, les 18 et 19 avril, pendant <a href="http://jcertif.com/tunisie/2014/05/09/jcertif-tunisie/">JCertif Tunisie 2014</a></li>
<li>Au Congo-Brazzaville, en mars dernier, lors de la <a href="https://plus.google.com/events/c7fcpf5lb2dhclvbd4lesni8hng?cfem=1">Journée IoT Brazzaville</a></li>
<li>D&#8217;autres sessions sont prévues en juillet en Côte d&#8217;Ivoire et au Cameroun lors des prochains événement JCertif.</li>
</ul>


<p>Au Brésil, un <a href="https://blogs.oracle.com/java/entry/internet_of_things_iot_hackathon">Hackaton</a> a été organisé.</p>

<p>Le 17 et 18 mail prochain, <a href="http://www.oracle.com/index.html">Oracle</a> sera présent à l&#8217;événement <a href="http://makerfaire.com/">Make Faire</a> et va présenter un <a href="https://blogs.oracle.com/java/entry/java_shows_off_at_maker">IoT Java Panel</a>.</p>

<h2>Un Challenge IoT</h2>

<p>Un <a href="https://www.java.net/challenge">IoT Developer Challenge</a> organisé par <a href="http://www.oracle.com/index.html">Oracle</a> est en cours actuellement.
Les gagnants pourront aller à <a href="https://www.oracle.com/javaone/index.html">Java One 2014 !</a>.</p>

<p>Vous avez jusqu&#8217;au 30 mai pour participer.</p>

<h2>Un MOOC sur Java Embedded</h2>

<p>Un <a href="http://en.wikipedia.org/wiki/Massive_open_online_course">MOOC</a> sous le thème <em>Develop Java Embedded Applications Using a Raspberry Pi</em> est donné par <a href="http://www.oracle.com/index.html">Oracle</a> plusieurs fois dans l&#8217;année .</p>

<p>Il y en a eu un le 31 mars dernier, le prochain commence le 30 mai.</p>

<p>La formation dure 5 semaines et montre comment utiliser Java Embedded pour :</p>

<ul>
<li>Lire les différentes entrées de la Raspberry Pi</li>
<li>Manipuler des LED via les interfaces GPIO</li>
<li>Récupérer la température et la pression atmosphérique</li>
<li>Stocker et gérer des données</li>
<li>Envoyer des données à un client</li>
</ul>


<p>Vous pouvez vous inscrire <a href="https://apex.oracle.com/pls/apex/f?p=44785:145:0::::P145_EVENT_ID,P145_PREV_PAGE:861,143">ici</a>.</p>

<h2>Allez-vous être un acteur de l&#8217;Internet des Objets ?</h2>

<p>Si vous êtes développeur (quelque soit le langage/plateforme), l&#8217;Internet des Objets vous concerne directement que vous le vouliez ou non.</p>

<p>Le sujet étant jeune, il y a beaucoup d&#8217;opportunités, les technologies méritent d&#8217;être éprouvées.</p>

<p><a href="http://postscapes.com/javascript-and-the-internet-of-things">La communauté Javascript</a> est très active sur le sujet.</p>

<p>Pour les développeurs Java, une communité <a href="https://community.java.net/community/iot">IoT existe</a>. Le <a href="https://terrencebarr.wordpress.com/tag/java-embedded/">Blog de Terrence Barr</a>, est également une source d&#8217;informations intéressante.</p>

<p>Alors, ça vous tente du Java Embarqué ?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devoxx France 2014, ce que je retiens !]]></title>
    <link href="http://roddet.github.com/2014/05/devoxx-france-2014/"/>
    <updated>2014-05-07T21:41:00-04:00</updated>
    <id>http://roddet.github.com/2014/05/devoxx-france-2014</id>
    <content type="html"><![CDATA[<p>Les 17 et 18 avril dernier, j&#8217;étais aux 2 journées de conférence de <a href="http://www.devoxx.fr/">Devoxx France 2014</a>.</p>

<h2>Nous étions nombreux à avoir eu la même idée !</h2>

<p><img class="center" src="http://roddet.github.com/images/devoxxfr14/j1-keynote-ere-numerique.jpg"></p>

<h2>Mon parcours</h2>

<p>J&#8217;ai pu participer aux sessions suivantes :</p>

<ul>
<li>Keynote - L&#8217;Ere du numérique avec <a href="https://twitter.com/@babgi">Gilles Babinet</a> et <a href="https://twitter.com/Kwame42">Kwame Yamgnane</a>.</li>
<li>Keynote - Le métier de développeur avec <a href="https://twitter.com/guy_mm">Guy MAMOU-MANI</a>.</li>
<li>Keynote - Simplon avec <a href="http://cfp.devoxx.fr/devoxxfr2014/speaker/0b184f6351dd6b6aababf8817a477c2cb2e2bb3a/Henri%20Fournet">Henri Fournet</a>.</li>
<li>Realtime Web avec Akka, Kafka, Spark et Mesos (<a href="http://www.slideshare.net/hayssamsaleh1/realtime-web-avec-kafka-spark-et-mesos">slides</a>) avec <a href="https://twitter.com/@hayssams">Hayssam Saleh</a> et <a href="https://twitter.com/@jpbunaz">Jean-Philippe Bunaz</a>.</li>
<li>The reactive Backup talk avec <a href="https://twitter.com/@_JamesWard">James Ward</a>.</li>
<li>Au secours mon code AngularJS est pourri ! (<a href="http://t.co/TxUJwHaWoo">slides</a>) avec <a href="https://twitter.com/ThierryChatel">Thierry Chatel</a>).</li>
<li>Vive les WebSockets Libres avec <a href="https://twitter.com/jfarcand">Jean-François Arcand</a>.</li>
<li>Des applications réactives avec Spring, AngularDart et Websocket (<a href="https://speakerdeck.com/sdeleuze/reactive-applications-with-spring-angulardart-and-websocket">slides</a>) avec <a href="https://twitter.com/@sdeleuze">Sébastien Deleuze</a>.</li>
<li>BitCoin et monnaies cryptographiques (<a href="http://paulgreg.me/bitcoin-cryptocurrencies/">slides</a>) avec <a href="https://twitter.com/@paulgreg">Grégory Paul</a>.</li>
<li>Basses latences, hauts débits : les secrets de la finance pour avoir des systèmes réactifs (<a href="http://www.slideshare.net/ThomasPierrain/faible-latence-haut-debit-devoxxfr-2014-34262360">slides</a>) avec <a href="https://twitter.com/@cyrdup">Cyrille DUPUYDAUBY</a> et <a href="https://twitter.com/@tpierrain">Thomas Pierrain</a>.</li>
<li>Lambda Architecture - Choose your tools for Real-Time Big Data (<a href="http://www.slideshare.net/Dataiku/dataiku-devoxx-lambda-architecture-choose-your-tools">slides</a>) avec <a href="https://twitter.com/@fdouetteau">Florian Douetteau</a>.</li>
<li>Web performances, regardons les résultats de près (<a href="https://github.com/devoxx2014-webperf/the_slides/blob/master/Devoxx%20France%202014%20Web%20Performances.pdf?raw=true">slides</a>) avec <a href="https://twitter.com/@jeffmaury">Jeff MAURY</a>, <a href="https://twitter.com/@NicolasLeroux">Nicolas Leroux</a>, <a href="https://twitter.com/@k33g_org">Philippe Charrière</a>, <a href="http://forax.github.io/">Rémi Forax</a>.</li>
<li>Google Cast Development - Lessons Learned avec <a href="https://twitter.com/@hcl21">Hoi Lam</a>.</li>
<li>JavaScript, the next big &#8230; bytecode (<a href="http://fr.slideshare.net/MathieuBreton1/javascript-thenextbigbytecode">slides</a>) avec <a href="https://twitter.com/@MatBreton">Mathieu Breton</a>.</li>
<li>Groovy en 2014 et au-delà (<a href="https://speakerdeck.com/glaforge/groovy-in-2014-and-beyond-at-devoxx-france">slides</a>) avec <a href="https://twitter.com/glaforge">Guillaume Laforge</a>.</li>
</ul>


<p>Plutôt que de vous ennuyer avec les détails de chaque session, je vais plutôt partager ce que je retiens réellement de Devoxx France 2014.</p>

<p>Commençons par les news.</p>

<h2>Le mouvement CodeForFrance</h2>

<p><a href="https://twitter.com/tariqkrim">Tarik Rim</a> a présenté le mouvement <a href="http://www.codeforfrance.org">Code for France</a> avec son slogan  : &#8220;La France a besoin d&#8217;un update&#8221;.
Ce mouvement est directement inspiré des US qui ont un <a href="http://codeforamerica.org">CODE for AMERICA</a>.
Le principe : les membres du mouvement unissent leurs forces pour mettre aux normes actuelles les différents sites web d&#8217;utilité publique.</p>

<p>Vous pouvez suivre l&#8217;actualité du mouvement soit via <a href="https://twitter.com/codeforfrance">Twitter</a> soit <a href="http://www.codeforfrance.org">en vous inscrivant avec votre compte Github</a>.</p>

<h2>Reactive Streams</h2>

<p><a href="https://twitter.com/@_JamesWard">James Ward</a> a annoncé, durant son talk, le lancement de <a href="http://www.reactive-streams.org">Reactive Streams</a>.
Il s&#8217;agit d&#8217;une initiative visant à standardiser les traitements asynchrones de flux sur la JVM.
Les grands noms de la JVM sont contributeurs du projet : <a href="">Oracle</a>, <a href="">RedHat</a>, <a href="">Twitter</a>, <a href="http://typesafe.com">TypeSafe</a>, <a href="">Pivotal</a>, <a href="">Netflix</a>, etc.
L&#8217;objectif est, à terme, d&#8217;intégrer ces travaux dans une future version du JDK.</p>

<p>Un premier brouillon de la spécification est disponible. Si vous souhaitez vous lancer, vous pouvez parcourir les sources du projet sur <a href="https://github.com/reactive-streams/reactive-streams">Github</a>.</p>

<p>Un article d&#8217;InfoQ est disponible sur le sujet : <a href="http://www.infoq.com/fr/news/2014/05/reactive-streams-akka-streams">Les Reactive Streams avec Akka Streams</a>.</p>

<p>Abordons à présent les tendances technologiques.</p>

<h2>La réactivité c&#8217;est maintenant !</h2>

<p>Devoxx France 2014 a comporté de nombreux talks avec le mot magique &#8220;réactif&#8221; :
<a href="http://cfp.devoxx.fr/devoxxfr2014/talk/SAC-948/Les%20Applications%20R%C3%A9actives%20:%20un%20nouveau%20paradigme%20pour%20relever%20les%20d%C3%A9fis%20de%20l'%C3%A9conomie%20num%C3%A9rique.">Les Applications Réactives : un nouveau paradigme pour relever les défis de l&#8217;économie numérique</a>,
<a href="http://cfp.devoxx.fr/devoxxfr2014/talk/KYH-943/The%20Reactive%20Backup%20talk">Building Reactive Apps</a>,
<a href="http://cfp.devoxx.fr/devoxxfr2014/talk/WDJ-026/Reactive%20Angular">Reactive Angular</a>,
<a href="http://cfp.devoxx.fr/devoxxfr2014/talk/FCN-711/Des%20applications%20r%C3%A9actives%20avec%20Spring%204,%20AngularDart%20et%20Websocket">Des applications réactives avec Spring, AngularDart et Websocket</a>,
<a href="http://www.slideshare.net/ThomasPierrain/faible-latence-haut-debit-devoxxfr-2014-34262360">Basses latences, hauts débits : les secrets de la finance pour avoir des systèmes réactifs</a>, etc.</p>

<p>Donc si vous souhaitez être &#8220;tendance&#8221; aujourd&#8217;hui, soyez &#8220;réactif&#8221; ! Ca y est c&#8217;est le moment !</p>

<h2>Le Big Data, le driver technologique</h2>

<p>Devoxx France 2014 m&#8217;a conforté dans l&#8217;idée que j&#8217;avais du Big Data comme moteur des nouvelles architectures et des nouvelles technologies.</p>

<p>Le Big Data est arrivé avec des techniques qui lui étaient indispensable (NoSQL, Scalabilité horizontale, parallélisme, cloud, etc.) et finalement ces techniques sont en train de gagner peu à peu les projets Small Data ou Big Code.</p>

<p>Prenons l&#8217;exemple du NoSQL.
Je me rappelle encore il y a quelques années, le NoSQL était présenté comme une solution en réponse aux limites des bases de données relationnelles.
Le discours a, depuis, bien évolué et d&#8217;autres atouts ont apparu. L&#8217;accroche de <a href="http://www.mongodb.org">MongoDB</a> c&#8217;est &#8220;Agile et Scalable&#8221; (noter bien le &#8220;Agile&#8221; en premier).
Aujourd&#8217;hui, le NoSQL séduit de plus en plus, je vous invite à visiter la page <a href="http://www.mongodb.org/about/production-deployments/">MongoDB Production Deployments</a> et à scroller jusqu&#8217;à ce que vous en ayez marre :)
Et ce ne sont pas tous des projets avec des données monstrueuses.</p>

<p>Le Big Data encourage l&#8217;application <a href="http://www.reactivemanifesto.org">des principes de programmation réactive</a> et nous voilà tous plonger dedans en ce moment.</p>

<p>Le Big Data possède encore de nombreuses ressources qui sont encore à bonnes distances des projets habituels d&#8217;entreprise.
Si vous souhaitez avoir une vision générale des briques et des outils du domaine, je vous recommande le talk <em>Lambda Architecture - Choose your tools for Real-Time Big Data</em> (<a href="http://www.slideshare.net/Dataiku/dataiku-devoxx-lambda-architecture-choose-your-tools">slides</a>) avec <a href="https://twitter.com/@fdouetteau">Florian Douetteau</a>.</p>

<p>Pour un retour d&#8217;expériences, regarder plutôt du côté de <em>Realtime Web avec Akka, Kafka, Spark et Mesos</em> (<a href="http://www.slideshare.net/hayssamsaleh1/realtime-web-avec-kafka-spark-et-mesos">slides</a>).</p>

<p>Il y a probablement dans ces outils des fondements de ce qui va devenir la norme de demain et tout le monde sait que demain c&#8217;est aujourd&#8217;hui :)</p>

<h2>Frontend/Javascript</h2>

<p>J&#8217;ai vécu Devoxx France 2013 comme un événement qui criait  :</p>

<blockquote><p>Javascript c&#8217;est cool, c&#8217;est prêt pour l&#8217;entreprise ! Vas-y mon ami !</p><footer><strong>Ma perception Frontend Devoxx France 2013</strong></footer></blockquote>


<p>Il y avait plusieurs sessions dans ce sens :
<a href="http://www.devoxx.com/display/FR13/Frontend+Live+Coding+++Tour+d%27horizon+de+l%27outillage+et+des+technos+web+d%27aujourd%27hui">Frontend live Coding</a>,
<a href="http://www.devoxx.com/display/FR13/AngularJS%2C+ou+le+futur+du+developpement+Web">AngularJS, ou le futur du développement web</a>,
<a href="http://www.devoxx.com/display/FR13/Du+Javascript+propre+++Challenge+Accepted">Du Javascript Propre ? Challenge Accepted</a>, etc.</p>

<p>Sur l&#8217;axe Frontend, j&#8217;ai vu Devoxx France 2014 comme un événement qui criait cette fois-ci :</p>

<blockquote><p>Maintenant que vous avez adopté Javascript, vous savez, dans Javascript il y a aussi &#8220;The Bad Parts&#8221;. Jettez un oeil aux alternatives, on ne sait jamais ;)</p><footer><strong>Ma perception Frontend Devoxx France 2014</strong></footer></blockquote>


<p>La session <em>JavaScript, the next big &#8230; bytecode</em> (<a href="http://fr.slideshare.net/MathieuBreton1/javascript-thenextbigbytecode">slides</a>) est très intéressante sur ce sujet.
Vous apprendrez  :</p>

<ul>
<li>qu&#8217;il y a plus de 170 langages/transpileurs qui génèrent du JavaScript.</li>
<li>Les leaders de la transpilation sont : <a href="http://www.typescriptlang.org">TypeScript</a>, <a href="http://coffeescript.org">CoffeeScript</a>, <a href="https://www.dartlang.org">Dart</a>,
<a href="http://asmjs.org">ASM.JS</a></li>
<li><a href="https://www.dartlang.org">Dart</a> est le plus complet, <a href="http://asmjs.org">ASM.JS</a> très prometteur, <a href="http://www.typescriptlang.org">TypeScript</a> utilisable à court terme et <a href="http://coffeescript.org">CoffeeScript</a> utilisable mais attention aux erreurs trop fréquentes de syntaxe.</li>
</ul>


<p>Je note l&#8217;opération séduction de <a href="https://www.dartlang.org">Dart</a> qui met sur la table les atouts suivants :</p>

<ul>
<li>Je suis un langage typé comme Java, tu connais Java ? Viens, je te promets que ça sera facile !</li>
<li>Je suis nativement <a href="https://www.dartlang.org/performance/">plus performant que Javascript</a>.
Je serai un jour dans Chrome, donc tu pourras m&#8217;utiliser directement pour bénéficier de mes performances.</li>
<li>Je vais devenir <a href="http://www.ecma-international.org/memento/TC52.htm">un standard un jour</a>. Je rêve secrètement que Firefox, Safari et Internet Explorer m&#8217;implémente ;)</li>
<li>N&#8217;aies pas peur de moi, je sais <a href="https://www.dartlang.org/tools/dart2js/">transpiler du javascript comme tout le monde</a>.</li>
<li>Hey ! Tu aimes AngularJS ? Moi aussi <a href="https://angulardart.org">je sais faire !</a>.</li>
</ul>


<p>Si vous vous êtes lancé sur des projets AngularJS, les slides de la session <em>Au secours mon code AngularJS est pourri !</em> (<a href="http://t.co/TxUJwHaWoo">slides</a>) va vous intéresser.
Vous y trouverez un recueil de bonnes pratiques applicables immédiatement.</p>

<h2>Les performances</h2>

<p>J&#8217;ai suivi deux talks qui faisaient un focus sur les performances :</p>

<p><em>Web performances, regardons les résultats de près</em> (<a href="https://github.com/devoxx2014-webperf/the_slides/blob/master/Devoxx%20France%202014%20Web%20Performances.pdf?raw=true">slides</a>).</p>

<p>Une application est réalisée avec différentes technologies (Java EE/JAX-RS, NodeJS/Express, Play2/Scala, Undertow, Vertx, Finatra) puis des tests de charge sont réalisés sur chaque implémentation.
Ce que je retiens de ce talk :</p>

<ul>
<li>Il faut faire très attention aux API utilisés.
Pour l&#8217;application NodeJS, utiliser <code>res.send(movies)</code> à la place de <code>res.sendfile(...)</code> rendait l&#8217;application environ 14 fois moins performante.</li>
<li>Lors d&#8217;un test de charge, n&#8217;ayez pas l&#8217;injecteur et l&#8217;application sur la même machine. Les résultats seront probablement très éloignés de la réalité.</li>
<li>Gatling c&#8217;est super ! Ca je le savais déjà ;)</li>
<li>Contrairement à ce que pensaient les participants, Java EE/JAX-RS est très performant et a remporté quelques combats.</li>
<li>Je regrette que les ressources n&#8217;aient pas été monitorées pour avoir une idée des différences de consommation.</li>
</ul>


<p><em>Basses latences, hauts débits : les secrets de la finance pour avoir des systèmes réactifs</em> (<a href="http://www.slideshare.net/ThomasPierrain/faible-latence-haut-debit-devoxxfr-2014-34262360">slides</a>).</p>

<p>Il s&#8217;agit là d&#8217;un talk de très bonne qualité qui présente :</p>

<ul>
<li>L&#8217;essentiel des métiers de la finance</li>
<li>Différentes approches qui ne fonctionnent pas toujours pour supporter du haut débit : mono thread, un thread par élément, un pool de thread, multi tasks / thread pool.</li>
<li>Le <a href="http://dupdob.wordpress.com/2014/04/18/sequencer/">pattern sequencer</a>, la notion de conflation</li>
<li>Une dose de <a href="http://www.reactivemanifesto.org">principes réactifs</a>.</li>
</ul>


<h2>La révolution Docker</h2>

<p>Je n&#8217;ai pas pu participer à la session <em>La révolution Docker</em> (<a href="http://www.slideshare.net/ndeloof/la-revolution-docker">slides</a>).
Cette session était très attendue, la salle était pleine avant le début de la session.</p>

<p><a href="https://www.docker.io/">Docker</a> est donc un outil qu&#8217;il faut regarder de près aujourd&#8217;hui.
Vous pouvez une introduction à Docker sur le blog <a href="http://www.touilleur-express.fr/2014/05/03/docker-un-outil-simple-et-genial/">Le Touilleur Express</a>.</p>

<p>Si vous venez au <a href="www.breizhcamp.org">BreizhCamp 2014</a> prochain, il y aura une session <a href="http://www.breizhcamp.org/programme/">Demarrer avec Docker</a>.</p>

<h2>Java &amp; Co, l&#8217;heure est à la simplification !</h2>

<p>Comme le montre mon parcours, je n&#8217;ai pas participé à beaucoup de sessions sur Java ou Java EE ou Spring ou etc.
Je profite généralement des conférences pour élargir mes horizons.
Etant présent à la conférence et pour avoir parcouru plusieurs fois le programme, j&#8217;ai tout de même un ressenti.</p>

<p>Le moment est venu de faire simple avec Java.
Il est temps de s&#8217;attaquer à la complexité de démarrer un projet Java et surtout de réaliser des applications simples sans sortir l&#8217;artillerie lourde.
Il y a déjà des existants comme <a href="http://www.playframework.com/">Play! Framework</a> et cette tendance se poursuit.</p>

<p>Le projet <a href="http://projects.spring.io/spring-boot/">Spring Boot</a> a cet objectif et se veut être le produit phare du moment dans l&#8217;écosystème Spring.
Voici <a href="https://github.com/joshlong/ws.tagit/blob/master/service/src/main/java/ws/tagit/Application.java">une classe Java</a>,
avec une méthode <em>main()</em> qui démarre un container (tomcat ou jetty),
expose un service REST sécurisé par OAuth et avec le support de CORS,
gère les accès à la base de données.
Le tout en moins de 300 lignes de code (pour Java c&#8217;est une révolution !)
On peut donc dès aujourd&#8217;hui avoir des applications simples, utiles qui tiennent raisonnablement dans un seul fichier !</p>

<p><a href="https://twitter.com/xavierhanin">Xavier Hanin</a> a présenté le framework <a href="http://restx.io/">RESTX</a>.
Ce framework regroupe pleins de bonnes idées pour développement des services REST : le rechargement à chaud, des outils pour tester ses services REST, une configuration avancée par annotation, des jeux de données fournies par le framework, etc.</p>

<p><a href="https://twitter.com/JosePaumard">José Paumard</a> a présenté <em>50 nouvelles choses que l&#8217;on peut faire avec Java 8</em> (<a href="http://www.slideshare.net/jpaumard/50-nouvelles-choses-que-lon-peut-faire-avec-java-8">slides</a>).
Java 8 vient simplifier beaucoup de choses : les dates, les manipulations de collections, traitements parallèles, etc.</p>

<p>Si vous travailler avec Java au quotidien, votre nouveau défi est à présent de faire simple après avoir fait très très compliqué !</p>

<h2>D&#8217;autres ressources ?</h2>

<p>Consulter la page suivante : <a href="http://www.devoxx.fr/2014/05/ils-ont-parle-de-nous/">Ils ont parlé de nous</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JCertif Tunisie 2014, Done !]]></title>
    <link href="http://roddet.github.com/2014/04/jcertif-tunisie-2014/"/>
    <updated>2014-04-23T21:41:00-04:00</updated>
    <id>http://roddet.github.com/2014/04/jcertif-tunisie-2014</id>
    <content type="html"><![CDATA[<p>Le 19 et 20 avril dernier, c&#8217;était JCertif Tunisie 2014 !
Cet événement portait une symbolique forte car c&#8217;est la première fois que JCertif avait lieu en dehors de Brazzaville (République du Congo).
Les attentes étaient évidemment fortes, tant de la part des organisateurs que des participants et des acteurs locaux.</p>

<p>L&#8217;événement a eu lieu dans la ville de <a href="http://fr.wikipedia.org/wiki/Sousse">Sousse</a> à l&#8217;<a href="http://www.eniso.rnu.tn/fr/">Ecole Nationale d&#8217;Ingénieurs de Sousse</a>.
<a href="http://fr.wikipedia.org/wiki/Sousse">Sousse</a> se trouve à moins de 150 km de Tunis, la capitale de la Tunisie.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/carte_sousse.png"></p>

<p>Les deux journées de l&#8217;événement étaient structurées de la façon suivante :</p>

<ul>
<li>Matin : une série de talks sur des sujets variés.</li>
<li>Après-midi : une dizaine de workshops + un espace d&#8217;échange entre partenaires.</li>
</ul>


<h2>Jour 1</h2>

<p><a href="https://twitter.com/bonbhel">Max</a> lance l&#8217;événement avec une présentation de JCertif et de ses activités.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/max_jour_1.png"></p>

<p><a href="https://twitter.com/ChrisbelM">Chrisbel</a> prend ensuite la parole pour parler des initiatives JCertif
Education &amp; JCertif Pro.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/chrisbel_jour_1.png"></p>

<p>La matinée se poursuit avec une présentation de <a href="http://www.thibaultvincent.com/">Thibault Vicent</a> sur &#8220;Les 4 modèles de revenu les plus rentables du web et du mobile&#8221;.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/thibault_jour_1.jpg"></p>

<p>L&#8217;après-midi laissera la place aux Workshops suivants :</p>

<ul>
<li>Initiation à Java avec <a href="http://www.linkedin.com/profile/view?id=48873830&amp;locale=fr_FR&amp;trk=tyah&amp;trkInfo=tarId%3A1398674609090%2Ctas%3AOuijden%20Dhemaid%2Cidx%3A1-1-1">Ouijden Dhemaid</a></li>
<li>Ext JS avec <a href="https://twitter.com/ChrisbelM">Roland Chrisbel</a></li>
<li>JEE Open ORM Alternatives : UPA as a challenger avec <a href="https://www.linkedin.com/profile/view?trk=tyah&amp;trkInfo=tarId%3A1398431808806%2Ctas%3Ataha%2Cidx%3A1-2-2&amp;locale=en_US&amp;id=24099487">Taher Ben Saleh</a></li>
<li>Ubuntu Touch avec <a href="https://www.facebook.com/neo31?fref=ts">Ahmed Segaire</a></li>
<li>Programmation embarquée avec la carte Raspberry Pi avec <a href="http://www.linkedin.com/profile/view?id=136896701&amp;locale=fr_FR&amp;trk=tyah&amp;trkInfo=tarId%3A1398431874633%2Ctas%3Asafa%20achou%2Cidx%3A1-1-1">Safa Achour</a></li>
<li>Android initiation avec <a href="http://www.linkedin.com/profile/view?id=211998391&amp;locale=en_US&amp;trk=tyah2&amp;trkInfo=tarId%3A1397596758936%2Ctas%3Azidi%20alae%2Cidx%3A1-1-1">Alaedinne Zidi</a></li>
<li>Android avancé avec <a href="http://www.linkedin.com/profile/view?id=162164000&amp;locale=en_US&amp;trk=tyah&amp;trkInfo=tarId%3A1398431891305%2Ctas%3Ahich%2Cidx%3A1-1-1">Hichem Laroussi</a></li>
<li>Android avancé avec <a href="http://www.linkedin.com/profile/view?id=105245788&amp;locale=fr_FR&amp;trk=tyah&amp;trkInfo=tarId%3A1398431913510%2Ctas%3Arami%20te%2Cidx%3A1-1-1">Rami Tekaya</a></li>
<li>Web Design avec <a href="http://www.linkedin.com/profile/view?id=153196137&amp;locale=fr_FR&amp;trk=tyah&amp;trkInfo=tarId%3A1398431931331%2Ctas%3ARanda%20Touati%2Cidx%3A1-1-1">Randa Touati</a></li>
<li>HTML5/CSS3 avec <a href="http://www.linkedin.com/profile/view?id=302763914&amp;locale=fr_FR&amp;trk=tyah2&amp;trkInfo=tarId%3A1398431947088%2Ctas%3AMejri%20Yassine%2Cidx%3A1-4-4">Mejri Yassine</a></li>
</ul>


<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/workshop_jour_1.jpg"></p>

<p>Une rencontre entre différents acteurs IT de Tunisie est organisée en marge des Workshops sous le thème de l&#8217;intégration des étudiants dans le milieu professionnel.
Les entités présentes étaient de différentes natures :</p>

<ul>
<li>Entreprises IT et Industriels : <a href="https://www.linkedin.com/company/proxym-it">ProxymIT</a>, <a href="http://www.vermeg.com/">Vermeg</a>, <a href="http://www.tmi.com.tn/">TMI</a>, <a href="http://www.objis.com/">Objis</a>, etc.</li>
<li>Ecoles et Universités (enseignants, dirigeants) : <a href="http://www.eniso.rnu.tn/fr/">ENISo</a>, <a href="http://www.esprit.ens.tn/">EsprIT</a>, <a href="http://www.msb-online.org/">MSB</a>, <a href="http://www.episousse.com/">EPI</a>, etc.</li>
<li>Etudiants (débutants, finissants et stagiaires)</li>
<li>Communautés : <a href="http://clibre.tn/">Association CLibre</a>, <a href="https://fr-fr.facebook.com/jcertif.tn">JCertif Tunisie</a>, JCertif International, etc.</li>
</ul>


<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/conference_debat.jpg"></p>

<p>Chaque acteur a pu exprimer ses problématiques :</p>

<ul>
<li><p>Les entreprises IT et industriels ont exprimé leurs difficultés à intégrer les jeunes diplômés, à trouver des profils qualifiés.
Ils ont également fait émerger un manque de lisibilité dans les cursus/diplômes des écoles tunisiennes.</p></li>
<li><p>Les écoles et universités ont mis en évidence leurs difficultés à suivre les évolutions technologiques et à proposer des projets innovants en adéquation avec le marché.</p></li>
<li><p>Les étudiants ont du mal à trouver des entreprises pour des stages. Leurs projets de fin d&#8217;étude ne sont pas innovants et manquent d&#8217;accompagnement.</p></li>
</ul>


<p>JCertif a proposé une approche permettant d&#8217;allier le milieu éducatif avec le milieu professionel à travers les projets JCertif Education &amp; JCertif Pro.</p>

<p>Je n&#8217;ai pas pu être présent ce premier jour de l&#8217;événement :( Je suis arrivé à Sousse tard dans la soirée du jour 1.</p>

<h2>Jour 2</h2>

<p>Le second jour est le moment pour moi de rentrer en jeu dans l&#8217;événement. J&#8217;ouvre le bal des conférences avec une session sur le &#8220;Web Déconnecté&#8221;.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/rossi_jour_2.jpg"></p>

<p><a href="https://twitter.com/bonbhel">Max</a> prend ensuite la main pour présenter la Google Glass. Après un présentation et un démonstration, les participants ont eu le plaisir de l&#8217;essayer.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/glass_jour_2.jpg"></p>

<p><a href="https://www.facebook.com/media/set/?set=a.625151214242365.1073741837.523922604365227&amp;type=1">Nizar Kerekni</a>, président de l&#8217;<a href="http://clibre.tn/">Association CLibre</a>, va présenter &#8220;La culture des logiciels libres&#8221;.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/libre_jour_2.jpg"></p>

<p>Et enfin, c&#8217;est au tour de <a href="http://www.thibaultvincent.com/">Thibault</a> de faire un focus sur les 5 grands succès du web.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/thibault_jour_2.jpg"></p>

<p>L&#8217;après-midi, les workshops commencés la veille se sont poursuivis et un espace Business 2 Business a permis d&#8217;accueillir les professionnels qui souhaitaient se rencontrer.
J&#8217;ai profité de cette occasion pour échanger avec différents acteurs sur les opportunités de collaboration technologique avec JCertif.
C&#8217;était surtout l&#8217;occasion de nouer des relations avec des personnes brillantes qui veulent faire progresser l&#8217;IT en Tunisie.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/b2b_jour_2.jpg"></p>

<h2>Jour 3</h2>

<p>Fidèle à sa tradition, un événement JCertif a toujours une journée qui ne figure pas dans l&#8217;agenda officiel.
Certains l&#8217;appellent JCertif Break, d&#8217;autres JCertif Excursion, d&#8217;autres encore &#8220;Le Lab&#8221; (un 3e ?).
Il s&#8217;agit pour les organisateurs et les speakers de passer une journée touristique ensemble.</p>

<p>Cela commence par un trajet en car où la dance a rêgné en maître au rythme du <a href="https://www.google.fr/search?q=darbuka&amp;sa=X&amp;espv=2&amp;es_sm=91&amp;tbm=isch&amp;tbo=u&amp;source=univ&amp;ei=yyNcU_WABYiz0QWFnYCIDw&amp;ved=0CCsQsAQ&amp;biw=1280&amp;bih=658">darbuka</a>, que les membres féminins de JCertif Tunisie manient à merveille.</p>

<p>Nous avons pu visiter plusieurs sites touristiques de Tunisie, déjeuner, nouer des amitiés et tout simplement passer des moments ensemble.</p>

<p><img class="center" src="http://roddet.github.com/images/jcTunisie2014/jcertif_excursion_jour_3.JPG"></p>

<p>Je ne donnerai pas trop de détails sur cette journée car il y a beaucoup trop de secrets d&#8217;Etat qui naissent ce jour-là ;)</p>

<h2>Bilan</h2>

<p>JCertif Tunisie 2014 est un événement réussi organisé par la communauté JCertif Tunisie.
J&#8217;ai pu découvrir le dynamisme tunisien dans l&#8217;IT et surtout une générosité exceptionnelle de toutes les personnes que j&#8217;ai rencontrées.</p>

<p>La grande originalité vis à vis de JCertif Congo était l&#8217;organisation d&#8217;échanges entre les différents acteurs de l&#8217;industrie du numérique : les associations, les écoles, les entreprises, etc.
C&#8217;est une inspiration &#8220;tunisienne&#8221; qu&#8217;il faudrait absolument faire profiter à d&#8217;autres pays ;)
J&#8217;ai hate de voir l&#8217;édition 2015 ! Nous avons déjà pleins de nouvelles idées !</p>

<p>Vous pouvez trouver plus de photos sur la <a href="https://fr-fr.facebook.com/jcertif.tn">page Facebook de l&#8217;événement</a>.</p>

<p>Les prochains événements JCertif :</p>

<ul>
<li>JCertif Côté d&#8217;Ivoire : du 10 au 12 juillet 2014</li>
<li>JCertif Cameroun : du 19 au 20 juillet 2014</li>
<li>JCertif Congo : du 8 au 14 septembre 2014</li>
<li>&#8230;+ d&#8217;autres à venir ;)</li>
</ul>


<p>Vous souhaitez faire parti de l&#8217;aventure et être partenaire d&#8217;un
événement JCertif ? Envoyez un mot gentil à : info@jcertif.com.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soirée JUG Nantes : Java 8 -> Lambdas, Streams et Collectors (Partie 2)]]></title>
    <link href="http://roddet.github.com/2013/12/nantesjug-decembre-part2/"/>
    <updated>2013-12-26T09:00:00-05:00</updated>
    <id>http://roddet.github.com/2013/12/nantesjug-decembre-part2</id>
    <content type="html"><![CDATA[<p>La première partie de cet article est accessible <a href="http://blog.roddet.com/2013/12/nantesjug-decembre-part1/">ici</a>.</p>

<p>La deuxième partie de cette soirée du <a href="http://nantesjug.org/">JUG Nantes</a> est consacrée à une présentation de Java 8 animée par <a href="https://twitter.com/JosePaumard">José Paumard</a>.</p>

<p>Avant de rentrer dans le coeur de la présentation de <a href="https://twitter.com/JosePaumard">José</a>, faisons un tour de ce que réserve Java 8.</p>

<h2>Java 8 -> quoi de neuf ?</h2>

<p>Java 8 est une évolution majeure du langage Java.</p>

<p>Les nouveautés peuvent être classées suivant plusieurs catégories pour les plus significatives :</p>

<ul>
<li><strong>Nouveaux Projets</strong> -> les nouvelles fonctionnalités assez structurantes pour être considérées comme des projets à part.</li>
<li><strong>Machine Virtuelle</strong> -> des modifications du fonctionnement de la JVM et des travaux d&#8217;amélioration des performances.</li>
<li><strong>Core</strong> -> nouveautés non structurantes du langage (ajout d&#8217;API, d&#8217;annotations, etc.).</li>
</ul>


<p>La liste complète des nouveautés : <a href="http://openjdk.java.net/projects/jdk8/features">ici</a>.</p>

<p>Voici quelques nouveautés qui ont attiré mon attention.</p>

<h2>Java 8 -> Nouveaux Projets</h2>

<p>Deux projets :</p>

<ul>
<li>Le <a href="http://openjdk.java.net/projects/lambda/">projet Lambda</a> qui ajoute les <em>closures</em> au langage Java. Il s&#8217;agit certainement de la fonctionnalité qui a le plus d&#8217;impact sur le langage. C&#8217;est le sujet principal de cette soirée.</li>
<li>Le <a href="http://openjdk.java.net/projects/nashorn/">projet Nashorn</a> qui offre un moteur d&#8217;exécution Javascript sur la JVM.</li>
</ul>


<h2>Java 8 -> Machine Virtuelle</h2>

<p>L&#8217;évolution la plus remarquable est <a href="http://openjdk.java.net/jeps/122">la suppression de la <em>Permanent Generation</em></a>. Cette zone était utilisée par la JVM pour stocker les définitions des classes, méthodes, etc. Elle était bien distincte de la <em>Heap</em> qui contient les instances des objets créées.</p>

<p>Par défaut, la <em>Permanent Generation</em> a la taille maximale de 64MB. Il est possible de modifier cette valeur avec le paramètre <em>-XX:MaxPermSize</em>.</p>

<p>Si vous avez le plaisir de travailler sur application <em>usine</em> (nombreuses classes, nombreuses librairies), habituelle du milieu professionnel, vous avez peut-être déjà rencontré une erreur qui ressemble à cela :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java.lang.OutOfMemoryError: PermGen space
</span><span class='line'>        at java.lang.ClassLoader.defineClass1(Native Method)
</span><span class='line'>        at java.lang.ClassLoader.defineClass(ClassLoader.java:620)</span></code></pre></td></tr></table></div></figure>


<p>Avec Java 8, dites adieu à cette erreur et au paramétrage lié à la <em>Permanent Generation</em>.</p>

<p>Cette évolution de la machine virtuelle est un des résultats de la convergence entre la machine virtuelle propriétaire d&#8217;Oracle <a href="http://www.oracle.com/technetwork/middleware/jrockit/overview/index-101826.html">JRockit</a> et celle de la communauté : HotSpot.
En effet, <a href="http://www.oracle.com/technetwork/middleware/jrockit/overview/index-101826.html">JRockit</a> est distribué avec le serveur d&#8217;application propriétaire d&#8217;Oracle <a href="http://www.oracle.com/technetwork/middleware/weblogic/overview/index.html">WebLogic</a> et il a la particularité de ne pas avoir de <em>Permanent Generation</em>. Un bon signe pour la communauté ?</p>

<h2>Java 8 -> Core</h2>

<p>Quelques améliorations sont apportées au coeur du JDK.</p>

<h3>Une application JavaFX devient exécutable (<a href="http://openjdk.java.net/jeps/153">JEP 153</a>)</h3>

<p>Avant Java 8, pour rendre une application JavaFX exécutable depuis un JAR, il fallait faire deux choses :</p>

<ul>
<li>Créer une classe avec la méthode <em>public static void main(String[] args)</em> qui contient du code d&#8217;initialisation de l&#8217;application JavaFX.</li>
<li>Référencer cette classe dans l&#8217;attribut <em>Main-Class</em> du <em>Manifest</em> du JAR.</li>
</ul>


<p>Avec Java 8, il est possible de créer un JAR exécutable JavaFX sans passer par une classe avec une méthode <em>main</em>.</p>

<h3>Des annotations sur les types Java (<a href="http://openjdk.java.net/jeps/104">JEP 104</a>)</h3>

<p>Java 8 permet d&#8217;écrire ce genre de chose :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">MaClasse</span> <span class="n">m</span> <span class="o">=</span> <span class="k">new</span> <span class="nd">@Interned</span> <span class="n">MaClasse</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ou encore</span>
</span><span class='line'><span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="o">(</span><span class="nd">@NotNull</span> <span class="n">String</span><span class="o">)</span> <span class="n">element</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ou encore </span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MaClasse</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="kd">implements</span> <span class="nd">@ReadOnly</span> <span class="n">List</span><span class="o">&lt;</span><span class="nd">@ReadOnly</span> <span class="n">T</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// ou encore</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">monitorTemperature</span><span class="o">()</span> <span class="kd">throws</span> <span class="nd">@Critical</span> <span class="n">TemperatureException</span> <span class="o">{...}</span>
</span></code></pre></td></tr></table></div></figure>


<p>La documentation officielle en version béta : <a href="http://docs.oracle.com/javase/tutorial/java/annotations/index.html">ici</a>.</p>

<h3>Répéter des annotations (<a href="http://openjdk.java.net/jeps/120">JEP 120</a>)</h3>

<p>Avec Java 8, il est possible d&#8217;écrire :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Alert</span><span class="o">(</span><span class="n">role</span><span class="o">=</span><span class="s">&quot;Manager&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Alert</span><span class="o">(</span><span class="n">role</span><span class="o">=</span><span class="s">&quot;Administrator&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">UnauthorizedAccessException</span> <span class="kd">extends</span> <span class="n">SecurityException</span> <span class="o">{</span> <span class="o">...</span> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Plus de détails, <a href="http://docs.oracle.com/javase/tutorial/java/annotations/repeating.html">ici</a>.</p>

<h3>Accéder au nom des paramètres au runtime (<a href="http://openjdk.java.net/jeps/118">JEP 118</a>)</h3>

<p>L&#8217;idée ici est de stocker dans le <em>bytecode</em> les noms des paramètres de méthodes ainsi que leurs types. Cette fonctionnalité pourrait apporter un vrai plus aux développeurs de librairies.</p>

<p>Par exemple, l&#8217;annotation <em>@PathParam</em> de JAX-RS pourrait être optionnelle avec un reconnaissance du nom du paramètre ;)</p>

<h3>Une nouvelle API pour les dates et les heures (<a href="http://openjdk.java.net/jeps/150">JEP 150</a>)</h3>

<p>Java 8 vient avec une nouvelle API pour les dates/heures qui se veut plus <em>clean</em>, <em>fluent</em>, <em>immutable</em> et <em>extensible</em>.</p>

<p>Un aperçu d&#8217;utilisation :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">LocalDate</span> <span class="n">aujourdhui</span> <span class="o">=</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">();</span>
</span><span class='line'><span class="n">LocalDate</span> <span class="n">dans2ansMoins4jours</span> <span class="o">=</span> <span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">().</span><span class="na">plusYears</span><span class="o">(</span><span class="mi">2</span><span class="o">).</span><span class="na">minusDays</span><span class="o">(</span><span class="mi">4</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Documentation officielle en version béta : <a href="http://docs.oracle.com/javase/tutorial/datetime/index.html">ici</a>.</p>

<h3>Trie en parallèle des tableaux (<a href="http://openjdk.java.net/jeps/103">JEP 103</a>)</h3>

<p>Des méthodes sont ajoutées à la classe <em>java.util.Arrays</em> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Arrays</span><span class="o">.</span><span class="na">parallelSort</span><span class="o">(...);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Revenons au JUG !</h2>

<p>Les nantais ont répondu présent pour découvrir Java 8 et pour <a href="https://twitter.com/JosePaumard">José</a>, c&#8217;est la session qui clôture son tour de Bretagne&#8230; Ou plutôt de l&#8217;ouest de la France pour les plus susceptibles ;)</p>

<p><a href="https://twitter.com/JosePaumard">José</a> va faire un zoom sur les expressions <em>Lambda</em> et ses impacts sur le JDK 8.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/dec13/nantesjug-jose-paumard.jpg"></p>

<h2>Une introduction aux expressions Lambda</h2>

<p><a href="https://twitter.com/JosePaumard">José</a> va illustrer les expressions <em>Lambda</em> à l&#8217;aide du pattern <em>Map - Filter - Reduce</em>. Il va montrer une implémentation en Java 7 et une équivalence en Java 8 avec les expressions <em>Lambda</em>.</p>

<p>Illustration -> Approche impérative (avant Java 8) vs Approche fonctionnel (SQL)</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/dec13/nantesjug-prog-imp-vs-fonctionnel-by-jose-paumard.gif"></p>

<p>Illustration -> Passage d&#8217;un code Java 7 à un code Java 8 avec une expression <em>Lambda</em>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/dec13/nantesjug-lambdas-by-jose-paumard.gif"></p>

<h2>Syntaxes d&#8217;une expression <em>Lambda</em></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">mapper</span> <span class="o">=</span> <span class="o">(</span><span class="n">Person</span> <span class="n">person</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">mapper</span> <span class="o">=</span> <span class="n">person</span> <span class="o">-&gt;</span> <span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">();</span> <span class="c1">// sans préciser le type</span>
</span><span class='line'>
</span><span class='line'><span class="n">mapper</span> <span class="o">=</span> <span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">;</span> <span class="c1">// méthode non statique</span>
</span><span class='line'>
</span><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="nl">Integer:</span><span class="o">:</span><span class="n">max</span><span class="o">;</span> <span class="c1">// méthode statique</span>
</span><span class='line'>
</span><span class='line'><span class="n">mapper</span> <span class="o">=</span> <span class="o">(</span><span class="n">Person</span> <span class="n">person</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Mapping &quot;</span> <span class="o">+</span> <span class="n">person</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">person</span><span class="o">.</span><span class="na">getAge</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">reducer</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i1</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">i1</span> <span class="o">+</span> <span class="n">i2</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">reducer</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i1</span><span class="o">,</span> <span class="kt">int</span> <span class="n">i2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">i1</span> <span class="o">+</span> <span class="n">i2</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">reducer</span> <span class="o">=</span> <span class="o">(</span><span class="n">i1</span><span class="o">,</span> <span class="n">i2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">i1</span> <span class="o">+</span> <span class="n">i2</span><span class="o">;</span> <span class="c1">// sans préciser les types</span>
</span></code></pre></td></tr></table></div></figure>


<h2>La notion d&#8217;interface fonctionnelle</h2>

<p>Une expression <em>Lambda</em> peut être définie comme une <em>instance</em> d&#8217;une interface dite fonctionnelle. Une interface fonctionnelle est une interface avec une seule méthode abstraite.</p>

<p>L&#8217;annotation <em>@FunctionalInterface</em> peut être utilisée pour désigner une interface fonctionnelle. Elle est optionnelle et comme l&#8217;annotation <em>@Override</em>, elle ne sert qu&#8217;à apporter une sécurité supplémentaire à la compilation. Une interface annotée avec <em>@FunctionalInterface</em> ne compilera pas si elle possède plusieurs méthodes sans implémentation par défaut.</p>

<p>Un exemple d&#8217;utilisation dans le JDK 8.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">function</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@FunctionalInterface</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">IntSupplier</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="nf">getAsInt</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Le nouveau package <em>java.util.function</em></h2>

<p>Il contient des interfaces fonctionnelles usuelles utilisées pour représenter des expressions <em>Lambda</em> en entrée et sortie de méthode.</p>

<p>Les interfaces <em>Supplier</em>, <em>Consumer</em>, <em>BiConsumer</em>, <em>Function</em>, <em>BiFunction</em>, <em>Predicate</em>, <em>BiPredicate</em> seront expliquées pendant la présentation.</p>

<h2>Des méthodes implémentées dans les interfaces</h2>

<p>Avec Java 8, il est possible d&#8217;exprimer une implémentation par défaut à une méthode d&#8217;une interface. C&#8217;est l&#8217;option qui a été choisie pour permettre d&#8217;ajouter des méthodes à des interfaces <em>historiques</em> du JDK sans modifier toutes les classes des implémentations.</p>

<p>Le mot clé <em>default</em> est utilisé pour définir une implémentation par défaut.</p>

<p>Exemple avec l&#8217;interface <em>Collection<E></em> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">Collection</span><span class="o">&lt;</span><span class="n">E</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">default</span> <span class="n">Stream</span><span class="o">&lt;</span><span class="n">E</span><span class="o">&gt;</span> <span class="nf">stream</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">...;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Java 8 autorise aussi les méthodes statiques dans les interfaces.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">MonInterface</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Désormais, le Hello World en Java se fera avec une interface&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>L&#8217;API <em>Stream</em></h2>

<p>Un <em>Stream</em> est défini comme une interface paramétrée construite à partir d&#8217;une source (une collection, un tableau, une source I/O) qui permet d&#8217;appliquer une expression <em>Lambda</em> sur ses éléments.</p>

<p>Comment construire un <em>Stream</em> ?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// A partir d&#39;une collection</span>
</span><span class='line'><span class="n">Collection</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">collection</span> <span class="o">=</span> <span class="o">...;</span>
</span><span class='line'><span class="n">Stream</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">stream1</span> <span class="o">=</span> <span class="n">collection</span><span class="o">.</span><span class="na">stream</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// A partir d&#39;un tableau</span>
</span><span class='line'><span class="n">Stream</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">stream2</span> <span class="o">=</span> <span class="n">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;un&quot;</span><span class="o">,</span> <span class="s">&quot;deux&quot;</span><span class="o">,</span> <span class="s">&quot;trois&quot;</span><span class="o">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// A partir d&#39;une factory de Stream </span>
</span><span class='line'><span class="c1">// Stream.of, Stream.empty, Stream.generate, Stream.iterate, etc.</span>
</span><span class='line'><span class="n">Stream</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">stream3</span> <span class="o">=</span> <span class="n">Stream</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&quot;un&quot;</span><span class="o">,</span> <span class="s">&quot;deux&quot;</span><span class="o">,</span> <span class="s">&quot;trois&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// A partir de quelques méthodes de classes du JDK mises à jour</span>
</span><span class='line'><span class="n">IntStream</span> <span class="n">stream4</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="na">ints</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Un exemple d&#8217;utilisation ?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">()</span>
</span><span class='line'>  <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">p</span> <span class="o">-&gt;</span> <span class="n">p</span><span class="o">.</span><span class="na">getAge</span><span class="o">())</span>
</span><span class='line'>  <span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">a</span> <span class="o">-&gt;</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="mi">20</span><span class="o">)</span>
</span><span class='line'>  <span class="o">.</span><span class="na">reduce</span><span class="o">(</span><span class="mi">0</span><span class="o">,</span> <span class="o">(</span><span class="n">a1</span><span class="o">,</span> <span class="n">a2</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="n">a1</span> <span class="o">+</span> <span class="n">a2</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deux types d&#8217;opérations sont applicables à un <em>Stream</em> : une opération dite <em>intermédiaire</em> et une dite <em>terminale</em>. Seule une opération dite <em>terminale</em> déclenche le traitement modélisé. Dans l&#8217;exemple précédent, <em>map</em> et <em>filter</em> sont des opérations intermédiaires et <em>reduce</em> une opération terminale.</p>

<p>Attention, un <em>Stream</em> ne peut être traité qu&#8217;une seule fois. Une fois une opération <em>terminale</em> exécutée, il est nécessaire de créer un nouveau <em>Stream</em>.</p>

<p>Illustration -> Un <em>Stream</em> est <em>lazy</em> (seule l&#8217;opération terminale déclenche le traitement) !</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/dec13/nantesjug-stream-lazy-by-jose-paumard.gif"></p>

<h2><em>Stream</em> parallèle</h2>

<p>Il permet d&#8217;exécuter du code modélisé dans un <em>Stream</em> en parallèle.</p>

<p>Comment construire un <em>Stream</em> parallèle ?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Appeler parallelStream() au lieu de stream()</span>
</span><span class='line'><span class="n">Stream</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="n">strings</span><span class="o">.</span><span class="na">parallelStream</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Appeler parallel() sur un stream existant</span>
</span><span class='line'><span class="n">Stream</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">s</span> <span class="o">=</span> <span class="n">strings</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">parallel</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Attention, un <em>Stream</em> parallèle ne signifie pas toujours plus performant. Le parallélisme entraine des opérations supplémentaires et ses performances sont dépendantes de la nature des opérations à exécuter. Il n&#8217;y a donc pas de recette magique de performance, la règle <em>mesurer pour optimiser</em> s&#8217;applique toujours.</p>

<h2>Les <em>Optionals</em></h2>

<p>Certaines méthodes des classes du JDK 8 vont renvoyer des instances de la famille <em>Optional</em> : <em>Optional<T></em>, <em>OptionalInt</em>, <em>OptionalLong</em>, <em>OptionalDouble</em>.</p>

<p>Cette structure est utilisée pour modéliser une possible absence de résultat d&#8217;un traitement.</p>

<p>Que peut-on faire avec un <em>Optional</em> dans les mains ?</p>

<p>Un exemple avec <em>OptionalInt</em> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">OptionalInt</span> <span class="n">opt</span> <span class="o">=</span> <span class="o">...;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Tester s&#39;il contient une valeur et récupérer la valeur</span>
</span><span class='line'><span class="k">if</span><span class="o">(</span><span class="n">opt</span><span class="o">.</span><span class="na">isPresent</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">valeur1</span> <span class="o">=</span> <span class="n">opt</span><span class="o">.</span><span class="na">get</span><span class="o">();</span>
</span><span class='line'><span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Lire la valeur ou lancer une exception NoSuchElementException s&#39;il n&#39;y a pas de valeur</span>
</span><span class='line'><span class="kt">int</span> <span class="n">valeur2</span> <span class="o">=</span> <span class="n">opt</span><span class="o">.</span><span class="na">getAsInt</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Lire la valeur ou lancer une exception particulière s&#39;il n&#39;y a pas de valeur</span>
</span><span class='line'><span class="kt">int</span> <span class="n">valeur3</span> <span class="o">=</span> <span class="n">opt</span><span class="o">.</span><span class="na">orElseThrow</span><span class="o">(</span><span class="n">exceptionSupplier</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Lire la valeur si elle existe sinon retourner une valeur par défaut</span>
</span><span class='line'><span class="kt">int</span> <span class="n">valeur4</span> <span class="o">=</span> <span class="n">opt</span><span class="o">.</span><span class="na">orElse</span><span class="o">(</span><span class="mi">12</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Les réductions &amp; La classe Collectors</h2>

<p>L&#8217;API <em>Stream</em> donne accès à plusieurs réductions : <em>reduce()</em>, <em>count()</em>, <em>min()</em>, <em>max()</em>, <em>findFirst()</em>, etc.</p>

<p>La méthode <em>collect</em> applicable à un <em>Stream</em> permet d&#8217;appliquer des réductions complexes à partir d&#8217;un <em>Collector</em>.
Sans rentrer dans les détails de la définition d&#8217;un <em>Collector</em>, la classe <em>Collectors</em> fournit un ensemble d&#8217;instance de <em>Collector</em> qui facilitent le travail du développeur.</p>

<p>Quelques exemples d&#8217;utilisation de la classe <em>Collectors</em>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Transformer un Stream en List</span>
</span><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="n">liste1</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Transformer un Stream en Set</span>
</span><span class='line'><span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">liste2</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toSet</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Transformer un Stream en TreeSet</span>
</span><span class='line'><span class="n">TreeSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">liste3</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toSet</span><span class="o">(</span><span class="nl">TreeSet:</span><span class="o">:</span><span class="k">new</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Concaténer les noms d&#39;une liste de personnes</span>
</span><span class='line'><span class="n">String</span> <span class="n">names1</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getName</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Concaténer les noms séparés par une virgule d&#39;une liste de personnes</span>
</span><span class='line'><span class="n">String</span> <span class="n">names2</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">map</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getName</span><span class="o">).</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">joining</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Compter le nombre de personnes</span>
</span><span class='line'><span class="kt">int</span> <span class="n">nbPersons</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">counting</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Moyenne des ages des personnes</span>
</span><span class='line'><span class="kt">double</span> <span class="n">moyenneAge</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">averagingDouble</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Regroupement des personnes par age</span>
</span><span class='line'><span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">groupingBy</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Regroupement des personnes par age en utilisant un Set</span>
</span><span class='line'><span class="n">Map</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">Set</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">groupingBy</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">,</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toSet</span><span class="o">()));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Répartir les données en 2 ensembles : true -&gt; liste des personnes age &gt; 20 et false -&gt; le reste</span>
</span><span class='line'><span class="n">Map</span><span class="o">&lt;</span><span class="n">Boolean</span><span class="o">,</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="n">persons</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">partitionningBy</span><span class="o">(</span><span class="n">p</span> <span class="o">-&gt;</span> <span class="n">p</span><span class="o">.</span><span class="na">getAge</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">20</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Nouvelle API pour construire des comparateurs</h2>

<p>Avec Java 8, ça devient presqu&#8217;un plaisir de créer une instance de l&#8217;interface <em>Comparator</em> :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Person</span><span class="o">&gt;</span> <span class="n">comp</span> <span class="o">=</span> <span class="n">Comparator</span><span class="o">.</span><span class="na">comparing</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getLastName</span><span class="o">)</span>
</span><span class='line'>                                  <span class="o">.</span><span class="na">thenComparing</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getFirstName</span><span class="o">)</span>
</span><span class='line'>                                  <span class="o">.</span><span class="na">thenComparing</span><span class="o">(</span><span class="nl">Person:</span><span class="o">:</span><span class="n">getAge</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Pourquoi des expressions <em>Lambda</em> ?</h2>

<p><a href="https://twitter.com/JosePaumard">José</a> explique que les expressions <em>Lambda</em> n&#8217;ont pas été introduites dans Java 8 parce que c&#8217;est à la mode ou parce que le code écrit est plus compact.</p>

<p>Les expressions <em>Lambda</em> apporte la possibilité d&#8217;appliquer de nouveaux patterns qui permettent de paralléliser simplement et de façon plus sûr des traitements.</p>

<h2>Les slides</h2>

<p>Vous y trouverez des détails que je n&#8217;ai pas abordé pour rester synthétique :</p>

<ul>
<li>Des méthodes implémentées dans des interfaces entrainent la possibilité d&#8217;avoir un héritage multiple conflictuelle. Quelles sont les règles du compilateur ?</li>
<li>Des explications sur quelques classes du package <em>java.util.function</em></li>
<li>Les différents états d&#8217;un <em>Stream</em> et leurs conséquences</li>
<li>La problématique des valeurs par défaut dans les réductions <em>max</em> et <em>min</em></li>
<li>Une utilisation plus avancée de la classe <em>Collectors</em></li>
<li>Des choses qui ne marchent pas avec le traitement parallèle</li>
</ul>


<p>Alors, installer vous confortablement et prenez votre temps, il y a 330 slides ;)</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/29010060" width="800" height="500" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<h2>Qu&#8217;est-ce que j&#8217;ai pensé de tout ça ?</h2>

<p>Dans l&#8217;ensemble, j&#8217;ai trouvé cette présentation claire, progressive et surtout riche en contenu. Elle présente bien les expressions <em>Lambda</em> et ses impacts sur la future version du JDK.</p>

<h3><em>Lambda</em> Java 8, une révolution ?</h3>

<p>La réponse est probablement oui. C&#8217;est la première fois :</p>

<ul>
<li>qu&#8217;il est possible de déclarer des paramètres sans préciser leurs types (paramètres d&#8217;entrée d&#8217;une expression <em>Lambda</em>).</li>
<li>qu&#8217;une &#8220;méthode&#8221; (particulière certes) peut être passée en paramètre d&#8217;une autre.</li>
<li>que le langage fait une place aussi importante aux concepts de la programmation fonctionnelle.</li>
<li>qu&#8217;il y aura autant de changement dans le vocabulaire d&#8217;un développeur Java. Il parlera désormais avec des mots comme <em>map</em>, <em>filter</em>, <em>reduce</em>, <em>Supplier</em>, <em>Function</em>, <em>BiFunction</em>, <em>Consumer</em>, <em>BiConsumer</em>, etc. Y aura t-il une race d&#8217;intégriste qui va naitre dans la communauté Java comme les <em>Scalafistes</em> de <em>Scala</em> ? ;)</li>
</ul>


<h3><em>Lambda</em> Java 8 et le debug ?</h3>

<p>Je trouve que le langage Java a une qualité : une maintenance <em>possible</em> sur une grosse volumétrie de code. Même sur des applications dites <em>legacy</em> qui ont été développées de la pire des manières, j&#8217;ai toujours pu lancer l&#8217;application en debug, faire du pas à pas partout même dans les classes fournies par les librairies. Le côté impératif de la programmation fait clairement apparaître chaque étape du programme.</p>

<p>Avec Java 8, les applications vont de plus en plus ressembler à des enchainements de méthodes avec des expressions <em>Lambda</em> en paramètres. Ce code séduisant va probablement poser des difficultés au debuggage. Va t-il falloir mettre les expressions <em>Lambda</em> systématiquement sur plusieurs lignes pour permettre de faire du pas à pas ? Comment, pendant un debuggage, simuler l&#8217;exécution d&#8217;une opération sur un <em>Stream</em> sans avoir à en créer un nouveau ? Aurons-nous toujours cette maintenance qui peut être pénible mais toujours possible avec une application qui vieillit avec des expressions <em>Lambda</em> ? Peut-être tout simplement qu&#8217;il y aura moins de besoin d&#8217;utiliser un debugger ? A suivre ;)</p>

<h3>Fini les boucles <em>for</em> pour les listes ?</h3>

<p>Les boucles <em>for</em> servent souvent à itérer sur des listes d&#8217;éléments afin de les transformer (<em>map</em>), les filtrer (<em>filter</em>) et à faire des calculs (<em>reduce</em>). Les développeurs vont-ils privilégier l&#8217;utilisation des expressions <em>Lambda</em> ?</p>

<h3><em>Lambda</em> Java 8 vs les langages alternatifs ?</h3>

<p>Les langages alternatifs (Scala, Groovy, etc.) de la JVM n&#8217;ont pas grand chose à envier aux expressions <em>Lambda</em> de Java 8, ils vont déjà beaucoup plus loin depuis plusieurs années. Ils vont cependant probablement continuer à jalouser la base énorme d&#8217;utilisateurs qui reste fidèle à Java <em>Standard</em> ;)</p>

<blockquote><p>Java is a blue collar language. It&#8217;s not PhD thesis material but a language for a job.</p><footer><strong>James Gosling</strong> <cite>1997</cite></footer></blockquote>


<h3>La date de sortie prévue de Java 8 est le 18/03/2014. Alors, impatient d&#8217;avoir Java 8 dans vos entreprises ?</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soirée JUG Nantes : Java 8 -> Lambdas, Streams et Collectors (Partie 1)]]></title>
    <link href="http://roddet.github.com/2013/12/nantesjug-decembre-part1/"/>
    <updated>2013-12-06T21:41:00-05:00</updated>
    <id>http://roddet.github.com/2013/12/nantesjug-decembre-part1</id>
    <content type="html"><![CDATA[<p>Java 8, difficile de trouver mieux comme thème pour une soirée d&#8217;un JUG.
JUG qui, pour rappel, veut dire <em>Java User Group</em> (Groupe d&#8217;utilisateurs de Java).
Ces derniers temps, les JUGs se sont diversifiées jusqu&#8217;à avoir des soirées qui n&#8217;ont rien (ou peu) à voir avec Java.
Ce n&#8217;est pas la faute aux JUGs, c&#8217;est vrai que les actualités IT <em>sexy</em> viennent souvent d&#8217;ailleurs ;)</p>

<p>Mais ce 4 décembre à 19h à l&#8217;<a href="http://www.epitech.eu/nantes/ecole-informatique-nantes.aspx">EPITECH Nantes</a>, c&#8217;était place à un sujet phare de l&#8217;écosystème Java :</p>

<blockquote><p>La sortie imminente de Java 8 !</p></blockquote>


<p>Avant de parler de Java 8, la soirée commence par un autre sujet :</p>

<blockquote><p>Grails dans les tranchées</p></blockquote>


<p>Ce <em>quickie</em> est animé par <a href="https://twitter.com/djocal">Dominique Jocal</a>, Architecte Logiciel et Responsable de 2 domaines applicatifs chez <a href="http://www.cbp-group.com/">CBP Solutions</a>.</p>

<h2><em>Grails dans les tranchées</em> ? Mais avant&#8230; c&#8217;est quoi Grails ?</h2>

<p><a href="http://grails.org/">Grails</a> est un framework de création d&#8217;applications web s&#8217;exécutant sur la <a href="http://en.wikipedia.org/wiki/Java_virtual_machine">JVM</a>. Le langage de développement est <a href="http://groovy.codehaus.org/">Groovy</a>, un Java <em>sucré</em>.</p>

<p>Il fait partie de la famille des frameworks dits <em>productifs</em> qui ont les caractéristiques suivantes :</p>

<ul>
<li><em><strong>Full Stack</strong></em> -> Ces frameworks viennent avec toutes les briques applicatives nécessaires pour répondre aux problématiques courantes du web (communiquer avec une base de données, écrire des règles métiers, créer des pages web, gérer l&#8217;authentification, etc.).</li>
<li><em><strong>Simple</strong></em> -> tout est fait pour faciliter le travail du développeur. Un mode opératoire simple est fourni pour mettre en place les fonctionnalités récurrentes du web.</li>
<li><em><strong>Web Friendly</strong></em> -> Avec ces frameworks, vous arrêtez de vous battre avec le Web et en particulier le protocole HTTP. Vous saurez simplement exposer des services de type <em>REST</em>, gérer proprement les codes erreurs HTTP, etc.</li>
</ul>


<p>Le précurseur dans ce domaine est <a href="http://rubyonrails.org/">Ruby On Rails</a> créé en 2005 qui a fait la promotion au passage du langage Ruby.</p>

<p>Depuis, plusieurs frameworks sont apparus dans les autres écosystèmes :</p>

<ul>
<li><a href="http://cakephp.org/">CakePhp</a> pour Php.</li>
<li><a href="https://www.djangoproject.com/">Django</a> pour Python.</li>
<li><a href="http://www.playframework.com/">Play! Framework</a> pour Java ou Scala.</li>
<li><a href="http://sailsjs.org/">Sails</a> pour Javascript.</li>
<li>etc.</li>
</ul>


<p><a href="http://grails.org/">Grails</a> complète cette liste de frameworks qui ont pour objectif principale la simplification des applications web.
C&#8217;est un produit open source qui tourne sur la <a href="http://en.wikipedia.org/wiki/Java_virtual_machine">JVM</a>.</p>

<p>Pour ceux qui évoluent dans l&#8217;écosystème Java, pas de surprise avec <a href="http://grails.org/">Grails</a>.
Il est construit à l&#8217;aide de la boite à outils <a href="http://projects.spring.io/spring-framework/">Spring Framework</a>. Il s&#8217;agit d&#8217;ailleurs de la même compagnie derrière : <a href="http://www.gopivotal.com/">Pivotal</a>.</p>

<p><a href="http://grails.org/">Grails</a> possède son propre serveur web et il est possible de générer un package WAR pour un déploiement dans un autre serveur d&#8217;application.</p>

<h2>Grails chez CBP</h2>

<p><a href="https://twitter.com/djocal">Dominique</a> vient avec ce <em>Quickie</em> présenter un retour d&#8217;expérience de l&#8217;utilisation de <a href="http://grails.org/">Grails</a> chez <a href="http://www.cbp-group.com/">CBP Solutions</a>.</p>

<p>C&#8217;est devant une salle pleine qu&#8217;il commence à présenter le contexte <a href="http://www.cbp-group.com/">CBP Solutions</a>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/dec13/nantesjug-dominique-jocal.jpg"></p>

<p><a href="http://www.cbp-group.com/">CBP Solutions</a> c&#8217;est :</p>

<ul>
<li>Des centaines d&#8217;applications <a href="http://en.wikipedia.org/wiki/IBM_RPG">IBM RPG</a></li>
<li>60 applications Java</li>
<li>6 applications <a href="http://grails.org/">Grails</a></li>
</ul>


<blockquote><p>CBP ce n&#8217;est pas du &#8220;Big Data&#8221; mais du &#8220;Big Rules&#8221; !</p><footer><strong>Dominique Jocal</strong></footer></blockquote>


<p>Les enjeux de <a href="http://www.cbp-group.com/">CBP Solutions</a> sont les mêmes que pour la grande majorité des entreprises : il y a plus de codes que de données :) Non j&#8217;exagère c&#8217;est vrai. Seulement tout le monde n&#8217;a pas les mêmes problématiques que Facebook ou Twitter en terme de scalabilité sur le traitement de données. Le grand défi de la plupart des entreprises est de créer facilement des applications et surtout pouvoir effectuer la maintenance du code grandissant avec le temps.</p>

<h2>Le <em>Domain</em> plus de métiers, plus de responsabilité</h2>

<p>Les applications web de gestion consistent la plupart du temps à manipuler des données. Ces données sont souvent stockées dans des bases de données relationnelles. Elles sont alors stockées dans des tables. Afin de récupérer ces données dans l&#8217;univers applicatif et pouvoir aisément les manipuler, les développeurs sont amenés à créer des classes du <em>Domain</em>. Par exemple, si l&#8217;application consiste à manipuler des données d&#8217;une personne, ces données seront stockées dans une table <em>Personne</em> et une classe <em>Personne</em> sera créée pour encapsuler les données d&#8217;une personne (nom, prénom, etc.).</p>

<p>Il y a quelques années, il était <em>très tendance</em> d&#8217;avoir des classes du <em>Domain</em> sans aucune règle métier.
Cela avait du sens, il était question de construire des applications monolithiques qui répondaient à tous les besoins des entreprises.
Il fallait avoir des classes de <em>Domain</em> les plus neutres possibles car elles devaient s&#8217;adapter à tous les contextes des différents endroits de l&#8217;applicatif. Elles étaient utilisées dans différents cas métiers.</p>

<p>De nos jours, la <em>tendance</em> est plutôt de créer de multiples applications de petites tailles.
Cela donne les avantages suivants :</p>

<ul>
<li>Une petite application est plus facile à maintenir. Son périmètre métier est identifié, c&#8217;est plus facile de l&#8217;apprendre, de le comprendre.</li>
<li>Il devient plus simple dans un <em>SI</em> (Système d&#8217;Information) d&#8217;identifier une brique applicative en erreur et l&#8217;origine des erreurs. En effet, les entrées/sorties d&#8217;une application de petite taille sont maitrisées et le développeur est dans des conditions idéales pour reproduire des erreurs dans son environnement de développement.</li>
<li>Chaque application a son cycle de vie. Il n&#8217;est plus indispensable de <em>re-packager</em> l&#8217;ensemble pour une évolution qui concerne un seul module. Plus besoin de redémarrer toutes les applications pour la mise à jour d&#8217;un libellé d&#8217;une application particulière.</li>
</ul>


<p>En construisant des applications de périmètre fonctionnel réduit, le besoin d&#8217;avoir des classes <em>Domain</em> les plus génériques possibles ne se posent plus. Il devient alors naturel de concentrer les besoins métiers dans ces classes.</p>

<p>Quel meilleur endroit pour préciser que le nom d&#8217;une personne est obligatoire que dans la classe <em>Domain</em> <em>Person</em> ?</p>

<p>C&#8217;est dans cette logique que <a href="https://twitter.com/djocal">Dominique</a> explique que le classes du <em>Domain</em> doivent être moins anémiques. Elles vont porter les logiques métiers dont elles sont soumises.</p>

<p><a href="http://grails.org/">Grails</a> apporte un support de validation déclaratif dans les classes de <em>Domain</em>.
Les différentes contraintes de validation des données sont déclarées directement dans ces classes.
<a href="http://grails.org/">Grails</a> fournit aussi un cadre de développement facilitant l&#8217;écriture des tests des classes du <em>Domain</em>.</p>

<h2>La <em>Pizza Team</em></h2>

<p>Le principe de la <em>Pizza Team</em> consiste à créer des équipes de petite taille (idéalement 1 pizza suffit à nourrir l&#8217;équipe) qui sont responsables de l&#8217;ensemble de l&#8217;application (du code à la base de données).</p>

<p>Voici donc à quoi pourrait ressembler votre équipe :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/dec13/pizza-team.jpg"></p>

<p>Chez <a href="http://www.cbp-group.com/">CBP Solutions</a>, ces principes sont appliqués, à la différence qu&#8217;il y a une équipe garante de la cohérence et l&#8217;urbanisation des données.</p>

<p>Les différentes équipes projet qui travaillent sur des applications <a href="http://grails.org/">Grails</a> co-conçoivent la base de données avec les garants des données du <em>SI</em>.</p>

<h2><em>Code first</em> au lieu de <em>Schema first</em></h2>

<p><a href="http://grails.org/">Grails</a> donne la possibilité de générer un schéma de base de données à partir des classes de <em>Domain</em>. Les développeurs ont pu montrer aux administrateurs des bases de données qu&#8217;un schéma généré par <a href="http://grails.org/">Grails</a> est de bonne qualité.</p>

<h2>Et l&#8217;IDE ? Oups, il en faut un pour développer ?</h2>

<p>Les développeurs de <a href="http://www.cbp-group.com/">CBP Solutions</a> sont globalement déçus de <a href="http://grails.org/products/ggts">GGTS</a> : le <em>Groovy/Grails Tool Suite</em>. Il s&#8217;agit d&#8217;un <a href="http://eclipse.org/">Eclipse</a> <em>re-packagé</em> avec des plugins pour Groovy et <a href="http://grails.org/">Grails</a>.</p>

<p>Quelques mésaventures :</p>

<ul>
<li>Il arrive des compilations de code Groovy qui prennent beaucoup de temps pour se terminer en <em>OutOfMemoryError</em>.</li>
<li>Des besoins fréquents de redémarrage de l&#8217;IDE et de l&#8217;application <a href="http://grails.org/">Grails</a></li>
<li>Il est nécessaire d&#8217;avoir des PCs puissants (i7, 8GB de RAM, SSD).</li>
</ul>


<p>Il y a des premiers retours positifs de l&#8217;IDE <a href="http://www.jetbrains.com/idea/">Intellij IDEA</a>.</p>

<h2>Grails -> Un développeur opérationnel tout de suite !</h2>

<p>Chez <a href="http://www.cbp-group.com/">CBP Solutions</a>, avec <a href="http://grails.org/">Grails</a>, un développeur a un environnement de développement opérationnel rapidement en 3 étapes depuis son IDE :</p>

<ul>
<li>Récupération des sources d&#8217;un dépôt <a href="http://subversion.apache.org/">Subversion</a>.</li>
<li>Rafraichissement des dépendances (<code>grails refresh-dependencies</code>)</li>
<li>Lancement de l&#8217;application (<code>grails run-app</code>)</li>
</ul>


<p><a href="http://grails.org/">Grails</a> vient avec un serveur embarqué, pas besoin d&#8217;installer un serveur particulier pour développer.</p>

<p><a href="http://grails.org/">Grails</a> permet simplement de séparer les configurations de production de celles de développement. Par exemple, votre application peut fonctionner en mode développement sur une base de données en mémoire comme <a href="http://www.h2database.com/html/main.html">H2</a> et fonctionner en production avec une base de données <a href="https://mariadb.org/">MariaDB</a>.</p>

<h2>Multi-Page vs Single-Page</h2>

<p><a href="http://grails.org/">Grails</a> offre un cadre de développement avancé pour les applications <em>Multi-Page</em>.</p>

<p>Il est possible de faire du <em>Single-Page</em>. Vous continuer à profiter des leviers de productivités côté <em>back-end</em>. Pour le <em>front-end</em>, cherchez du côté de l&#8217;univers Javascript (<em>Vanilla</em> ou frameworks type AngularJS, EmberJS, etc.).</p>

<p>Chez <a href="http://www.cbp-group.com/">CBP Solutions</a>, les applications sont faites en <em>Multi-Page</em>.</p>

<h2>Les tests c&#8217;est bien !</h2>

<p>Les 6 applications <a href="http://grails.org/">Grails</a> chez <a href="http://www.cbp-group.com/">CBP Solutions</a> sont toutes dans le top 10 des applications ayant la meilleure couverture de code par les tests.</p>

<h2>CBP, la suite&#8230;</h2>

<p><a href="https://twitter.com/djocal">Dominique</a> a énoncé les projets qu&#8217;il avait en tête :</p>

<ul>
<li>Partager les astuces dans un Blog</li>
<li><a href="http://grails.org/">Grails</a>! <a href="http://grails.org/">Grails</a>! <a href="http://grails.org/">Grails</a>! <a href="http://www.cbp-group.com/">CBP Solutions</a> continue avec <a href="http://grails.org/">Grails</a> !</li>
<li>Explorer le parallélisme et mettre en place des tests de code Javascript</li>
</ul>


<h2>En définitif</h2>

<p><a href="https://twitter.com/djocal">Dominique</a> a présenté son retour d&#8217;expérience au sein de <a href="http://www.cbp-group.com/">CBP Solutions</a> de l&#8217;utilisation de <a href="http://grails.org/">Grails</a>. Il est surpris qu&#8217;il n&#8217;y ait pas un <em>tsunami</em> de <a href="http://grails.org/">Grails</a> dans les entreprises qui font de l&#8217;informatique de gestion. Il est pour lui inconcevable, aujourd&#8217;hui de partir sur un assemblage <em>maison</em> de librairies (Spring + Hibernate + etc.). <a href="http://grails.org/">Grails</a> propose un ensemble cohérent, productif, <em>clés en main</em> pour construire des applications web, autant en profiter.</p>

<p>Une question a été posée à <a href="https://twitter.com/djocal">Dominique</a> : est-ce que le côté <em>dynamique</em> de Groovy n&#8217;était pas un problème car moins d&#8217;erreurs sont détectées à la compilation ? (je reformule avec mes mots ;)).
<a href="https://twitter.com/djocal">Dominique</a> va expliquer que ce risque est compensé par la grande couverture de code par les tests permise par <a href="http://grails.org/">Grails</a>.</p>

<p>Les slides ne sont pas encore disponibles, je complèterai cet article dès leurs publications.</p>

<h2>Et la soirée continue !</h2>

<p>La seconde partie de la soirée sera animée par <a href="https://twitter.com/JosePaumard">Jose Paumard</a> avec sa session</p>

<blockquote><p>Java 8 : Lambdas, Streams et Collectors -> le nouveau visage de l&#8217;API Collection</p></blockquote>


<p>A suivre dans un prochain article.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soirée NantesJS : Découverte de GruntJS]]></title>
    <link href="http://roddet.github.com/2013/12/nantesjs-gruntjs/"/>
    <updated>2013-12-04T08:00:00-05:00</updated>
    <id>http://roddet.github.com/2013/12/nantesjs-gruntjs</id>
    <content type="html"><![CDATA[<p><a href="http://gruntjs.com/">Grunt</a> permet de lancer des tâches afin d&#8217;automatiser des traitements récurrents.
Il se configure via l&#8217;écriture d&#8217;un code javascript.
Il existe de nombreux outils permettant d&#8217;automatiser le lancement des tâches : <a href="http://ant.apache.org/">ANT</a>, <a href="http://maven.apache.org/">Maven</a>, <a href="http://www.gradle.org/">Gradle</a>, <a href="http://www.scala-sbt.org/">SBT</a>.
La particularité de <a href="http://gruntjs.com/">Grunt</a> par rapport aux autres outils est qu&#8217;il est conçu principalement pour traiter des tâches récurrentes du web : minification, optimisation des images, génération de sprites, compilation Sass/Less, etc.</p>

<p>La soirée <a href="http://nantesjs.org/">NantesJS</a> du 19 novembre dernier a eu comme objectif une présentation et une prise en main de <a href="http://gruntjs.com/">Grunt</a>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjs/nov13/nantesjs-speakers.jpg"></p>

<p>C&#8217;est devant un public composé de professionnels que <a href="https://twitter.com/t8g">Thomas Moyse</a> (à gauche dans la photo) commence une présentation de <a href="http://gruntjs.com/">Grunt</a>. <a href="https://twitter.com/xavier_seignard">Xavier Seignard</a> (à droite) prendra de temps en temps la parole pour partager son expérience sur l&#8217;utilisation de <a href="http://gruntjs.com/">Grunt</a>.</p>

<p><a href="https://twitter.com/t8g">Thomas</a> va mettre l&#8217;accent sur le nombre important de plugins de Grunt : 1688. Dans <a href="http://gruntjs.com/plugins">la page des plugins Grunt</a>, je compte 1847 plugins au moment de l&#8217;écriture de l&#8217;article. <a href="http://gruntjs.com/">Grunt</a> dispose donc d&#8217;un écosystème riche.</p>

<p>Après la présentation succincte de <a href="http://gruntjs.com/">Grunt</a>, la soirée se transforme en Workshop et nous allons découvrir progressivement cet outil.</p>

<h2>Installer Grunt</h2>

<p><a href="http://gruntjs.com/">Grunt</a> s&#8217;installe via <a href="https://npmjs.org/">NPM</a> (Node Packaged Modules) le gestionnaire de package de <a href="http://nodejs.org/">NodeJS</a>.</p>

<p><a href="http://nodejs.org/download/">Télécharger et installer NodeJS</a>. Veuillez vérifier l&#8217;accès à la commande <code>npm</code> après l&#8217;installation.</p>

<p>Installer le client grunt via la commande :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm install -g grunt-cli</span></code></pre></td></tr></table></div></figure>


<p>A savoir : chaque projet va posséder son installation de <a href="http://gruntjs.com/">Grunt</a> et <code>grunt-cli</code> permet d&#8217;avoir accès à la commande <code>grunt</code> de façon globale quelque soit le projet.</p>

<h2>Création d&#8217;un projet</h2>

<p>Créer un répertoire.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir nantesjs-grunt
</span><span class='line'>cd nantesjs-grunt</span></code></pre></td></tr></table></div></figure>


<p>Initialiser un projet avec <a href="https://npmjs.org/">NPM</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm init</span></code></pre></td></tr></table></div></figure>


<p>Tapez la touche entrée à toutes les questions.
Le fichier <code>package.json</code> est créé avec le contenu suivant :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;nantesjs-grunt&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;version&quot;</span><span class="o">:</span> <span class="s2">&quot;0.0.0&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;description&quot;</span><span class="o">:</span> <span class="s2">&quot;ERROR: No README.md file found!&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;main&quot;</span><span class="o">:</span> <span class="s2">&quot;index.js&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;scripts&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;test&quot;</span><span class="o">:</span> <span class="s2">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s2">&quot;repository&quot;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;author&quot;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;license&quot;</span><span class="o">:</span> <span class="s2">&quot;BSD&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ce fichier représente l&#8217;identité d&#8217;un projet dans l&#8217;univers <a href="http://nodejs.org/">NodeJS</a>.</p>

<p>Installer <a href="http://gruntjs.com/">Grunt</a> pour le projet.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">npm</span> <span class="nx">install</span> <span class="nx">grunt</span> <span class="o">--</span><span class="nx">save</span><span class="o">-</span><span class="nx">dev</span>
</span></code></pre></td></tr></table></div></figure>


<p>Le fichier <code>package.json</code> est mis à jour comme suit :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;nantesjs-grunt&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;version&quot;</span><span class="o">:</span> <span class="s2">&quot;0.0.0&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;description&quot;</span><span class="o">:</span> <span class="s2">&quot;ERROR: No README.md file found!&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;main&quot;</span><span class="o">:</span> <span class="s2">&quot;index.js&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;scripts&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;test&quot;</span><span class="o">:</span> <span class="s2">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s2">&quot;repository&quot;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;author&quot;</span><span class="o">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;license&quot;</span><span class="o">:</span> <span class="s2">&quot;BSD&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;devDependencies&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;grunt&quot;</span><span class="o">:</span> <span class="s2">&quot;~0.4.2&quot;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Un répertoire <code>node_modules</code> est créé avec un répertoire <code>grunt</code> qui contient une installation de <a href="http://gruntjs.com/">Grunt</a> dans sa version 0.4.2.</p>

<h2>Hello World Grunt !</h2>

<p><a href="http://gruntjs.com/">Grunt</a> se configure dans un fichier <code>Gruntfile.js</code> avec du code javasript.</p>

<p>Créer un fichier <code>Gruntfile.js</code>.</p>

<p>Modifiez ce fichier comme suit pour créer un <em>Hello World</em>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;hello&#39;</span><span class="p">,</span> <span class="s1">&#39;Ma tâche à moi&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Hello World Grunt !&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>La fonction <code>registerTask</code> permet la création d&#8217;une tâche avec le nom <em>hello</em>, la description <em>Ma tâche à moi</em> et une fonction qui sera exécutée lorsque cette tâche sera appelée.</p>

<p><code>console.log</code> écrit du texte dans la console.</p>

<p>Pour lancer la tâche <em>hello</em>, exécuter la commande :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">grunt</span> <span class="nx">hello</span>
</span></code></pre></td></tr></table></div></figure>


<p>Le résultat dans la console</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span><span class="nx">grunt</span> <span class="nx">hello</span>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;hello&quot;</span> <span class="nx">task</span>
</span><span class='line'><span class="o">---------------------</span>
</span><span class='line'><span class="nx">Hello</span> <span class="nx">World</span> <span class="nx">Grunt</span> <span class="o">!</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Done</span><span class="p">,</span> <span class="nx">without</span> <span class="nx">errors</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Une tâche par défaut</h2>

<p>Il possible de spécifier une tâche par défaut à <a href="http://gruntjs.com/">Grunt</a>.
Il suffit de lui donner le nom <em>default</em> comme suit :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="s1">&#39;Ma tâche à moi&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Hello World Grunt !&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>La tâche est lancée via la commande suivante sans avoir à préciser le nom d&#8217;une tâche.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">grunt</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connaitre la liste des tâches disponibles</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">grunt</span> <span class="o">--</span><span class="nx">help</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Un alias pour composer des tâches</h2>

<p>Un alias permet de composer plusieurs tâches. Par défaut, les tâches sont exécutées de façon séquentielle.</p>

<p>Un alias est créé à l&#8217;aide d&#8217;une fonction <code>registerTask</code> en précisant un nom d&#8217;alias et un tableau de noms des tâches.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;step1&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Step 1&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;step2&#39;</span><span class="p">,</span> <span class="s1">&#39;ma tâche à moi&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Step 2&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;all&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;step1&#39;</span><span class="p">,</span> <span class="s1">&#39;step2&#39;</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lancer l&#8217;alias <em>all</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span> <span class="nx">grunt</span> <span class="nx">all</span>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;step1&quot;</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------</span>
</span><span class='line'><span class="nx">Step</span> <span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;step2&quot;</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------</span>
</span><span class='line'><span class="nx">Step</span> <span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Done</span><span class="p">,</span> <span class="nx">without</span> <span class="nx">errors</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Le <em>multi task</em></h2>

<p>Le <em>multi task</em> sert à créer des tâches qui peuvent s&#8217;exécuter suivant plusieurs cibles.</p>

<p>Ci-dessous un exemple d&#8217;utilisation de <em>multi task</em>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">multitask1</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">conf1</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">conf2</span><span class="o">:</span> <span class="s1">&#39;hello world&#39;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerMultiTask</span><span class="p">(</span><span class="s1">&#39;multitask1&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;target = &#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;data = &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>La fonction <code>initConfig</code> crée les différentes configurations possibles. Ici la tâche <em>multitask1</em> possède 2 contextes d&#8217;exécution <code>conf1</code>et <code>conf2</code>. Chaque contexte d&#8217;exécution possède son jeu de données.</p>

<p>Dans la fonction d&#8217;exécution de la tâche <em>multitask1</em>, <code>this.target</code> contient le nom du contexte d&#8217;exécution et <code>this.data</code> contient les données associées.</p>

<p>Lancer la tâche <em>multitask1</em> entraine son exécution pour les différents contextes d&#8217;exécution définis.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span><span class="nx">grunt</span> <span class="nx">multitask1</span>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;multitask1:conf1&quot;</span> <span class="p">(</span><span class="nx">multitask1</span><span class="p">)</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------------------------------</span>
</span><span class='line'><span class="nx">target</span> <span class="o">=</span> <span class="nx">conf1</span>
</span><span class='line'><span class="nx">data</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;multitask1:conf2&quot;</span> <span class="p">(</span><span class="nx">multitask1</span><span class="p">)</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------------------------------</span>
</span><span class='line'><span class="nx">target</span> <span class="o">=</span> <span class="nx">conf2</span>
</span><span class='line'><span class="nx">data</span> <span class="o">=</span> <span class="nx">hello</span> <span class="nx">world</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Done</span><span class="p">,</span> <span class="nx">without</span> <span class="nx">errors</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Il est possible d&#8217;exécuter une tâche de type <em>multi task</em> sur une configuration particulière comme suit :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span><span class="nx">grunt</span> <span class="nx">multitask1</span><span class="o">:</span><span class="nx">conf2</span>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;multitask1:conf2&quot;</span> <span class="p">(</span><span class="nx">multitask1</span><span class="p">)</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------------------------------</span>
</span><span class='line'><span class="nx">target</span> <span class="o">=</span> <span class="nx">conf2</span>
</span><span class='line'><span class="nx">data</span> <span class="o">=</span> <span class="nx">hello</span> <span class="nx">world</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Done</span><span class="p">,</span> <span class="nx">without</span> <span class="nx">errors</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Partager de la configuration via l&#8217;API <em>options</em></h2>

<p>L&#8217;API <em>options</em> offre la possibilité de mutualiser de la configuration <a href="http://gruntjs.com/">Grunt</a>. Cette configuration peut être surchargée par un contexte d&#8217;exécution.</p>

<p>Voici un exemple d&#8217;utilisation des <em>options</em> via le partage de configuration <em>key</em> pour les différents contextes d&#8217;exécution.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">multitask1</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">key</span><span class="o">:</span><span class="s2">&quot;v1&quot;</span><span class="p">},</span>
</span><span class='line'>          <span class="nx">conf1</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">conf2</span><span class="o">:</span><span class="s1">&#39;hello world&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">conf3</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>              <span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">key</span><span class="o">:</span><span class="s2">&quot;v2&quot;</span><span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerMultiTask</span><span class="p">(</span><span class="s1">&#39;multitask1&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;target = &#39;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">target</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;data = &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;version = &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">().</span><span class="nx">key</span><span class="p">)</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dans cet exemple, <em>key</em> vaut</p>

<ul>
<li><em>v1</em> pour <em>conf1</em> et <em>conf2</em></li>
<li><em>v2</em> pour <em>conf3</em></li>
</ul>


<p>L&#8217;appel de la fonction <code>this.options().key</code> renvoie la valeur de la donnée <em>key</em> dans le contexte d&#8217;exécution courant.</p>

<p>Le résultat de l&#8217;exécution de <em>multitask1</em> donne :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span><span class="nx">grunt</span> <span class="nx">multitask1</span>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;multitask1:conf1&quot;</span> <span class="p">(</span><span class="nx">multitask1</span><span class="p">)</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------------------------------</span>
</span><span class='line'><span class="nx">target</span> <span class="o">=</span> <span class="nx">conf1</span>
</span><span class='line'><span class="nx">data</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span>
</span><span class='line'><span class="nx">version</span> <span class="o">=</span> <span class="nx">v1</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;multitask1:conf2&quot;</span> <span class="p">(</span><span class="nx">multitask1</span><span class="p">)</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------------------------------</span>
</span><span class='line'><span class="nx">target</span> <span class="o">=</span> <span class="nx">conf2</span>
</span><span class='line'><span class="nx">data</span> <span class="o">=</span> <span class="nx">hello</span> <span class="nx">world</span>
</span><span class='line'><span class="nx">version</span> <span class="o">=</span> <span class="nx">v1</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;multitask1:conf3&quot;</span> <span class="p">(</span><span class="nx">multitask1</span><span class="p">)</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------------------------------</span>
</span><span class='line'><span class="nx">target</span> <span class="o">=</span> <span class="nx">conf3</span>
</span><span class='line'><span class="nx">data</span> <span class="o">=</span> <span class="p">[</span><span class="nx">object</span> <span class="nb">Object</span><span class="p">]</span>
</span><span class='line'><span class="nx">version</span> <span class="o">=</span> <span class="nx">v2</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Done</span><span class="p">,</span> <span class="nx">without</span> <span class="nx">errors</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Les templates</h2>

<p>Il est possible d&#8217;utiliser un template avec <a href="http://gruntjs.com/">Grunt</a> par exemple pour partager une valeur entre plusieurs contextes d&#8217;exécution.</p>

<p>La partie variable d&#8217;un template se déclare via les symboles : <em>&lt;%= XXXX %></em>.</p>

<p>Un exemple d&#8217;utilisation d&#8217;un template.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">multitask1</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">key</span><span class="o">:</span><span class="s1">&#39;&lt;%= version %&gt;&#39;</span><span class="p">},</span>
</span><span class='line'>          <span class="nx">conf1</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">version</span> <span class="o">:</span> <span class="s1">&#39;v15&#39;</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerMultiTask</span><span class="p">(</span><span class="s1">&#39;multitask1&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;version = &quot;</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">().</span><span class="nx">key</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>L&#8217;exécution de la tâche <em>multitask1</em> affiche bien le numéro de version <em>v15</em>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&gt;</span><span class="nx">grunt</span> <span class="nx">multitask1</span>
</span><span class='line'><span class="nx">Running</span> <span class="s2">&quot;multitask1:conf1&quot;</span> <span class="p">(</span><span class="nx">multitask1</span><span class="p">)</span> <span class="nx">task</span>
</span><span class='line'><span class="o">--------------------------------------------</span>
</span><span class='line'><span class="nx">version</span> <span class="o">=</span> <span class="nx">v15</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Done</span><span class="p">,</span> <span class="nx">without</span> <span class="nx">errors</span><span class="p">.</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Plusieurs modes pour déclarer des fichiers</h2>

<p>Les différentes tâches utilisées avec <a href="http://gruntjs.com/">Grunt</a> consistent la plupart du temps à manipuler des fichiers.</p>

<p>Il existe plusieurs modes pour désigner des fichiers avec <a href="http://gruntjs.com/">Grunt</a> : mode <em>compact</em>, mode <em>object</em>, mode <em>array</em> et le mode <em>dynamic</em>.</p>

<p>Afin d&#8217;illustrer ces différents modes, nous allons utiliser le plugin <code>grunt-contrib-copy</code> qui donne la possibilité de copier des fichiers dans un répertoire.</p>

<p>Installer le plugin</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">npm</span> <span class="nx">install</span> <span class="nx">grunt</span><span class="o">-</span><span class="nx">contrib</span><span class="o">-</span><span class="nx">copy</span> <span class="o">--</span><span class="nx">save</span><span class="o">-</span><span class="nx">dev</span>
</span></code></pre></td></tr></table></div></figure>


<p>Le plugin est installé dans le répertoire <code>node_modules</code>. Le fichier <code>package.json</code> est mis à jour avec la ligne <code>"grunt-contrib-copy": "~0.4.1"</code> qui vient compléter la section <code>devDependencies</code>.</p>

<p>Mettre à jour le fichier <code>Gruntfile.js</code> comme suit.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">main</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="o">???</span>  
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-copy&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>La fonction <code>grunt.loadNpmTasks</code> charge le plugin <code>grunt-contrib-copy</code>. Ce plugin expose la tâche <code>copy</code> sous la forme d&#8217;une <em>multi task</em> configurable dans la fonction <code>grunt.initConfig</code>.</p>

<p>La tâche <code>copy</code> peut être exécutée avec la commande :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">grunt</span> <span class="nx">copy</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Mode <em>Compact</em></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">main</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">src</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;*.js&#39;</span><span class="p">,</span> <span class="s1">&#39;*.json&#39;</span><span class="p">],</span>
</span><span class='line'>              <span class="nx">dest</span><span class="o">:</span><span class="s1">&#39;tmp/&#39;</span>  
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-copy&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Deux paramètres <code>src</code> (fichiers à copier) et <code>dest</code> (répertoire de destination) sont définis.</p>

<h2>Mode <em>Object</em></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">main</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">files</span> <span class="o">:</span> <span class="p">{</span><span class="s1">&#39;tmp/&#39;</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;*.js&#39;</span><span class="p">,</span> <span class="s1">&#39;*.json&#39;</span><span class="p">]}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-copy&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Mode <em>Array</em></h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">main</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">files</span> <span class="o">:</span> <span class="p">[</span>
</span><span class='line'>                  <span class="p">{</span>
</span><span class='line'>                      <span class="nx">src</span><span class="o">:</span><span class="p">[</span><span class="s1">&#39;*.js&#39;</span><span class="p">,</span> <span class="s1">&#39;*.json&#39;</span><span class="p">],</span>
</span><span class='line'>                      <span class="nx">dest</span><span class="o">:</span><span class="s1">&#39;tmp/&#39;</span>  
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-copy&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Mode <em>Dynamic</em></h2>

<p>Ce mode permet une configuration plus fine.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">files</span><span class="o">:</span> <span class="p">[{</span>
</span><span class='line'>  <span class="nx">expand</span><span class="o">:</span><span class="kr">boolean</span><span class="p">,</span> <span class="c1">// true =&gt; mode dynamique sinon mode précédent</span>
</span><span class='line'>  <span class="nx">cwd</span><span class="o">:</span><span class="nx">string</span><span class="p">,</span> <span class="c1">// le répertoire de base</span>
</span><span class='line'>  <span class="nx">src</span><span class="o">:</span> <span class="p">[</span><span class="nx">string</span><span class="p">],</span> <span class="c1">// les fichiers sources</span>
</span><span class='line'>  <span class="nx">dest</span><span class="o">:</span> <span class="nx">string</span><span class="p">,</span> <span class="c1">// le répertoire de destination</span>
</span><span class='line'>  <span class="nx">ext</span><span class="o">:</span><span class="nx">string</span><span class="p">,</span> <span class="c1">// ajouter une extension aux fichiers </span>
</span><span class='line'>  <span class="nx">flatten</span><span class="o">:</span><span class="kr">boolean</span><span class="p">,</span> <span class="c1">// ne pas garder l&#39;arborescence et tout mettre au même endroit.</span>
</span><span class='line'>  <span class="nx">rename</span><span class="o">:</span><span class="kd">function</span> <span class="c1">// renommer à la volée</span>
</span><span class='line'><span class="p">}]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Exemple d&#8217;utilisation.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">main</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">[{</span>
</span><span class='line'>                  <span class="nx">expand</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">cwd</span><span class="o">:</span><span class="s1">&#39;node_modules/&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">src</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;**/*.js&#39;</span><span class="p">],</span>
</span><span class='line'>                  <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;temp/&#39;</span>
</span><span class='line'>              <span class="p">}]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">(</span><span class="s1">&#39;grunt-contrib-copy&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Quelques trucs &amp; astuces</h2>

<h3>Les plugins</h3>

<p>Utiliser <a href="http://gruntjs.com/">Grunt</a> consiste surtout à ordonnancer des tâches de plugins existants. Il est rare d&#8217;avoir besoin de créer ses propres tâches. Il est conseillé de privilégier l&#8217;utilisation des plugins dont le nom commence par <code>grunt-contrib</code>. Il s&#8217;agit de plugins maintenus officiellement par l&#8217;équipe <a href="http://gruntjs.com/">Grunt</a>.</p>

<h3>Asynchronisme</h3>

<p>Regarder du côté du projet <a href="https://github.com/caolan/async">async</a> pour ajouter de l&#8217;asynchronisme dans l&#8217;exécution des tâches.</p>

<h3>Fonctions utilitaires de <a href="http://gruntjs.com/">Grunt</a></h3>

<p><a href="http://gruntjs.com/">Grunt</a> vient avec quelques fonctions utilitaires comme : <code>grunt.file.copy</code>, <code>grunt.file.readJSON</code>, <code>grunt.template.today("yyyy-mm-dd")</code>, etc. Ne pas hésiter à les utiliser.</p>

<h3>Construire un site statique</h3>

<p>Que ce soit pour un site web statique ou pour exposer de la documentation, le plugin <a href="https://github.com/TxSSC/grunt-carpenter/">grunt-carpenter</a> permet de générer un site web statique à partir de fichier markdown et HTML.</p>

<h3>Lancer des commandes</h3>

<p>Le plugin <a href="https://github.com/sindresorhus/grunt-shell">grunt-shell</a> donne la possibilité de lancer des commandes dans le shell. Ce qui donne un degré de liberté important pour ordonnancer l&#8217;exécution des scripts ou même d&#8217;autres systèmes de <em>build</em> ;)</p>

<h2>Les slides</h2>

<p>Elles sont publiées <a href="http://slid.es/t8g/gruntjs">ici</a>.</p>

<iframe src="http://roddet.github.com//slid.es/t8g/gruntjs/embed" width="800" height="420" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>


<h2>En somme</h2>

<p>Par la richesse de son écosystème de plugins, <a href="http://gruntjs.com/">Grunt</a> est l&#8217;outil du moment pour effectuer du <em>build</em> côté front-end. Il est plutôt simple d&#8217;utilisation et offre de vraies opportunités de productivité dans le développement web. En donnant la possibilité d&#8217;avoir différents contextes d&#8217;exécution, il est pratique pour séparer les tâches de développement des tâches de constructions du livrable de production.</p>

<p><a href="http://gruntjs.com/">Grunt</a> est très lié à l&#8217;environnement <a href="http://nodejs.org/">NodeJS</a>. Ce qui peut constituer un frein à son adoption pour les personnes évoluant dans d&#8217;autres écosystèmes.
Cette problématique n&#8217;est pas propre à <a href="http://gruntjs.com/">Grunt</a>. Les développeurs Java qui vantent par exemple les mérites de <a href="http://maven.apache.org/">Maven</a> auront également du mal à le faire adopter à des personnes qui n&#8217;ont pas de <a href="http://en.wikipedia.org/wiki/Java_Development_Kit">JDK</a> sur leur machine. Alors soyons ouvert d&#8217;esprit et n&#8217;ayons pas peur des écosystèmes qui peuvent nous être étrangers. Vous aimez <a href="http://jekyllrb.com/">Jekyll</a> ? Installer <a href="http://jekyllrb.com/">Ruby</a>. Vous trouvez <a href="http://www.methods.co.nz/asciidoc/index.html">AsciiDoc</a> sympa ? Installer <a href="http://www.python.org/">Python</a>. Vous aimez l&#8217;emploi ? Installer <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java</a> ;)</p>

<p>Je pense que la gestion des erreurs de configuration de <a href="http://gruntjs.com/">Grunt</a> ou de ses plugins est perfectible. Durant le workshop, il m&#8217;est souvent arrivé d&#8217;écrire une configuration non autorisée sans qu&#8217;il n&#8217;y ait aucune erreur remontée. Par exemple, lorsque vous utiliser les <em>multi task</em>, il faut absolument déclarer au moins un contexte d&#8217;éxécution sinon la tâche déclarée ne sera pas exécutée même si vous l&#8217;appelez explicitement. Heureusement les erreurs de syntaxes sont plutôt bien remontées.</p>

<p><a href="http://gruntjs.com/">Grunt</a> en tant qu&#8217;outil de <em>build</em> se prête bien à l&#8217;intégration continue. Alors il ne faut pas hésiter !</p>

<p>C&#8217;était la première fois que je participais à une soirée du <a href="http://nantesjs.org/">Nantes JS</a>. Les organisateurs et les participants ont été très accueillants, vous aviez une bière dans vos mains en guise de <em>bonsoir</em>. Je vous recommande vivement ces soirées que ce soit pour la bière ou pour votre amour de javascript (oui il y en a qui aime) ;)</p>

<p>La prochaine soirée est prévue au mois de janvier, restez connecter via <a href="https://twitter.com/NantesJS">@NantesJS</a>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjs/nov13/nantesjs-logo.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soirée JUG Nantes : Du SQL au NoSQL en moins d'une heure (Partie 2)]]></title>
    <link href="http://roddet.github.com/2013/11/nantesjug-novembre-part2/"/>
    <updated>2013-11-21T09:30:00-05:00</updated>
    <id>http://roddet.github.com/2013/11/nantesjug-novembre-part2</id>
    <content type="html"><![CDATA[<p>Vous pouvez retrouvez la première partie de cet article <a href="http://blog.roddet.com/2013/11/nantesjug-novembre-part1/">ici</a>.</p>

<p>Le 04 novembre dernier, <a href="https://twitter.com/tgrall">Tugdual Grall</a> et <a href="https://twitter.com/dadoonet">David Pilato</a> ont offert au public nantais une preview d&#8217;une session qu&#8217;ils allaient donner quelques jours plus tard à <a href="http://www.devoxx.be/dv13-david-pilato.html?presId=3281">Devoxx Belgique</a>. Ils vont montrer, sur la base d&#8217;une application exemple, une migration du SQL au monde du NoSQL.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-david-pilato-tugdual-grall.jpg"></p>

<h2>Pourquoi passer du SQL au NoSQL ?</h2>

<p><a href="https://twitter.com/tgrall">Tugdual</a> et <a href="https://twitter.com/dadoonet">David</a> vont commencer la session par présenter <em>LA</em> raison qui pourrait vous convaincre de migrer d&#8217;une base SQL à une base NoSQL : la scalabilité horizontale.</p>

<p>Scalabilité horizontale sont les mots à la mode pour désigner la caractéristique d&#8217;un système capable de supporter une grande charge. Pour augmenter la puissance d&#8217;un système, sa stratégie consiste à multiplier le nombre de machines de petites puissances. Elle se positionne en opposition à la scalabilité verticale qui prône l&#8217;augmentation des capacités d&#8217;une machine pour répondre à des besoins de charge croissants.</p>

<p>La scalabilité horizontale s&#8217;impose de plus en plus comme <em>LA</em> solution pour relever le défi des systèmes performants à fort trafic.</p>

<p>Peut-on effectuer la scalabilité horizontale avec une base de données relationnelle ?</p>

<p>La réponse est oui. Ca s&#8217;appelle mettre en place un <em>cluster de base de données</em>. Tug et David vont demander aux participants combien avaient déjà configuré un <em>cluster</em> de bases de données relationnelles ? Je n&#8217;ai vu qu&#8217;une seule main levée de là où j&#8217;étais assis. Cette opération requiert des compétences assez pointues pour obtenir un système fonctionnel.</p>

<p>Et le NoSQL dans tout ça ?</p>

<p>Tug et David vont promettre que cette opération qui nécessitait la présence d&#8217;un administrateur de bases de données très expérimenté va être accessible aux développeurs. Cette promesse sera accompagnée d&#8217;une démonstration :</p>

<ul>
<li>du passage d&#8217;un modèle dit <em>legacy</em> à un modèle moderne <em>REST</em></li>
<li>du passage d&#8217;un modèle SQL à un modèle NoSQL</li>
<li>de distribution de données sur plusieurs <em>noeuds</em></li>
<li>de la mise en place d&#8217;une recherche <em>full text</em> sur des données distribuées</li>
<li>de visualisation des données distribuées suivant des axes configurables</li>
</ul>


<p>L&#8217;intégralité des sources de la démonstration est accessible dans le dépôt Github <a href="https://github.com/dadoonet/sql2nosql/">sql2nosql</a>. La version des sources correspondante à une étape est accessible via les branches du dépôt.</p>

<p>A partir de ce dépôt, je vais effectuer toutes les étapes sur ma machine.</p>

<p>Allons y !</p>

<h2>Récupération des sources</h2>

<p>Je vais commencer par récupérer le contenu de la branche <em>01-legacy/start</em>.</p>

<p>Pour ceux qui voudraient faire autant et qui ne sont pas familier de Github, voici quelques alternatives :</p>

<ul>
<li><p>Télécharger le Zip des sources de la branche <a href="https://github.com/dadoonet/sql2nosql/archive/01-legacy/start.zip">ici</a>.</p></li>
<li><p>Installer <a href="http://git-scm.com/">Git</a> et exécuter les commandes</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone https://github.com/dadoonet/sql2nosql.git
</span><span class='line'>git checkout 01-legacy/start
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p>Installer le client officiel correspondant à votre OS : <a href="http://windows.github.com/">Windows</a>, <a href="http://mac.github.com/">Mac</a>. Pour linux ? Vous connaissez la chanson, si vous êtes sous linux c&#8217;est que vous ne jurez que par le <em>terminal</em>, faites comme d&#8217;habitude utiliser la ligne de commande ;) Il existe des clients graphiques non officiels mais je n&#8217;ai rien à vous recommander, j&#8217;ai pris l&#8217;habitude de la ligne de commande pour Git même si j&#8217;utilise un client graphique quand il s&#8217;agit de SVN. Il n&#8217;y a pas de raison particulière, question d&#8217;habitude.</p></li>
<li><p>Installer <a href="http://subversion.apache.org/">Subversion</a> et exécuter la commande suivante pour récupérer l&#8217;intégralité des sources. Vous pouvez aussi passer par des clients graphiques comme <a href="http://tortoisesvn.net/">TortoiseSVN</a>. Les sources se trouveront dans le répertoire <em>sql2nosql/branches/01-legacy</em>.</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>svn co https://github.com/dadoonet/sql2nosql
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Utiliser votre IDE préféré <a href="http://eclipse.org/">Eclipse</a>, <a href="https://netbeans.org/">Netbeans</a>, <a href="http://www.jetbrains.com/idea/">Intellij</a>&#8230;</li>
</ul>


<h2>Exécution de l&#8217;application</h2>

<p>L&#8217;architecture de l&#8217;application repose sur <a href="http://maven.apache.org/">Maven</a>. J&#8217;ai utilisé la version 3.1.1 pour écrire cet article.</p>

<p>Pour exécuter l&#8217;application :</p>

<ul>
<li><p>Si vous êtes sous linux ou Mac, lancer le script <code>run.sh</code></p></li>
<li><p>Si vous êtes sous Windows, lancer les commandes :</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>mvn clean install
</span><span class='line'><span class="nb">cd </span>demo-webapp
</span><span class='line'>mvn jetty:run
</span></code></pre></td></tr></table></div></figure>


<p>Si l&#8217;application ne parvient pas à récupérer le plugin Maven pour Jetty.
Créer/compléter la configuration du fichier <code>~/.m2/settings.xml</code> dans la section <code>pluginGroups</code> comme ceci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;settings&gt;</span>
</span><span class='line'>  <span class="nt">&lt;pluginGroups&gt;</span>
</span><span class='line'>    <span class="nt">&lt;pluginGroup&gt;</span>org.eclipse.jetty<span class="nt">&lt;/pluginGroup&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/pluginGroups&gt;</span>
</span><span class='line'><span class="nt">&lt;/settings&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Une fois l&#8217;application démarrée, vous pouvez accéder à la page d&#8217;accueil via l&#8217;adresse : <code>http://localhost:8080</code>. Elle affiche une liste de personnes.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-1.png"></p>

<p>En cliquant sur une personne, vous avez accès aux détails de la personne sélectionnée.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-2.png"></p>

<h2>L&#8217;application <em>legacy</em></h2>

<p>Cette application se veut <em>legacy</em>. Elle est pilotée par 2 Servlet:</p>

<ul>
<li><a href="https://github.com/dadoonet/sql2nosql/blob/01-legacy/start/demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/HomeServlet.java">HomeServlet</a>, gestionnaire de la page d&#8217;accueil.</li>
<li><a href="https://github.com/dadoonet/sql2nosql/blob/01-legacy/start/demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/PersonServlet.java">PersonServlet</a>, pilote de la page de détail d&#8217;une personne.</li>
</ul>


<p>Le mapping URL/servlet configurés dans le fichier <a href="https://github.com/dadoonet/sql2nosql/blob/01-legacy/start/demo-webapp/src/main/webapp/WEB-INF/web.xml">web.xml</a>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-3.png"></p>

<p>Cette application génère l&#8217;intégralité de ses pages côté serveur. Les nouvelles générations d&#8217;applications Web encouragent :</p>

<ul>
<li><p>un Web avec de plus en plus d&#8217;intelligence côté navigateur.</p></li>
<li><p>un Web qui pense &#8220;application web&#8221; avec la même phylosophie qu&#8217;une application mobile. Une application qui s&#8217;installe dans le navigateur.</p></li>
<li><p>un Web qui sépare les univers <em>frontend</em> et <em>backend</em>. Il n&#8217;est plus question de devoir faire un seul choix technologique pour couvrir l&#8217;intégralité de votre besoin. Vous choisissez le meilleur outil pour réaliser votre <em>frontend</em> et vous faites autant pour votre <em>backend</em>. Les deux univers communiquent via HTTP, un protocole particulièrement utile pour faire du web ;)</p></li>
</ul>


<p>En phase avec ces principes, la prochaine étape va consister transformer l&#8217;existant en application <em>backend</em> exposant des services HTTP/REST.</p>

<h2><em>RESTification</em> de l&#8217;application <em>legacy</em></h2>

<p>Pour passer à une architecture REST, commençons par quelque chose de facile : se débarrasser des <em>Servlet</em> de l&#8217;application. Supprimer :</p>

<ul>
<li>Les classes <em>PersonServlet</em> et <em>HomeServlet</em>.</li>
<li>Les fichiers suivants qui ne servent plus à rien <code>demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/ApplicationInitializer.java</code> et <code>demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/PersonService.java</code>.</li>
</ul>


<p>L&#8217;objectif à présent avec être de réaliser des services REST. Voici les services à réaliser :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>GET       /api/1/person/  =&gt; Récupérer toutes les personnes
</span><span class='line'>
</span><span class='line'>GET       /api/1/person/{id}  =&gt; Récupérer une personne avec l&#39;identifiant {id}.
</span><span class='line'>
</span><span class='line'>PUT       /api/1/person/  =&gt; Créer une nouvelle personne
</span><span class='line'>
</span><span class='line'>PUT       /api/1/person/{id}  =&gt; Mettre à jour la personne ayant l&#39;identifiant {id}
</span><span class='line'>
</span><span class='line'>DELETE    /api/1/person/{id}  =&gt; Supprimer la personne ayant l&#39;identifiant {id}
</span><span class='line'>
</span><span class='line'>POST      /api/1/person/_search =&gt; Récupérer des personnes suivant un critière
</span><span class='line'>
</span><span class='line'>POST      /api/1/person/_init =&gt; Initialiser la base de données avec des données exemples
</span></code></pre></td></tr></table></div></figure>


<p>Les puristes du REST pourront ne pas être d&#8217;accord avec cette API (l&#8217;utilisation de POST pour effectuer une recherche par critères ou encore l&#8217;utilisation de PUT au lieu de POST pour créer une nouvelle personne) mais ce n&#8217;est pas le sujet, nous allons nous concentrer sur le NoSQL.</p>

<p>L&#8217;application aura l&#8217;architecture suivante :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-4.png"></p>

<p>La <em>RESTification</em> sera réalisée avec <a href="http://docs.spring.io/spring/docs/4.0.x/spring-framework-reference/html/mvc.html">Spring MVC</a>.</p>

<p>J&#8217;ai mis à jour les fichiers :</p>

<ul>
<li><p><code>pom.xml</code> à la racine du projet comme <a href="https://raw.github.com/dadoonet/sql2nosql/02-restify/begin/pom.xml">ceci</a></p></li>
<li><p><code>demo-webapp/pom.xml</code> comme <a href="https://raw.github.com/dadoonet/sql2nosql/02-restify/begin/demo-webapp/pom.xml">ceci</a></p></li>
<li><p><code>demo-webapp/src/main/webapp/WEB-INF/web.xml</code> pour qu&#8217;il ressemble à celui là : <a href="https://raw.github.com/dadoonet/sql2nosql/02-restify/end/demo-webapp/src/main/webapp/WEB-INF/web.xml">web.xml</a>.</p></li>
</ul>


<p>J&#8217;ai créé le fichier <code>demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/PersonService.java</code> avec le contenu suivant <a href="https://github.com/dadoonet/sql2nosql/blob/02-restify/end/demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/PersonService.java">PersonService.java</a>.</p>

<p>Redémarrage de l&#8217;application comme précédemment.</p>

<p>Test du service de récupération de toutes les personnes en accédant à la page suivante via un navigateur moderne : <code>http://localhost:8080/api/1/person/</code>. J&#8217;obtiens :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-4a.png"></p>

<p>Le résultat <code>[]</code> représente un tableau vide.</p>

<p>Pour initialiser la base de données, il faut utiliser le service</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>POST      /api/1/person/_init
</span></code></pre></td></tr></table></div></figure>


<p>Pour effectuer, une requête avec le verbe HTTP POST, vous avez plusieurs possibilités. Le plus simple en environnement Unix est d&#8217;utiliser la commande <code>curl</code> comme ceci :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>curl -XPOST http://localhost:8080/api/1/person/_init
</span></code></pre></td></tr></table></div></figure>


<p>Sinon vous pouvez installer des extensions pour vos navigateurs comme par exemple <a href="https://chrome.google.com/webstore/detail/simple-rest-client/fhjcajmcbmldlhcimfajhfbgofnpcjmb">Simple REST Client</a> pour Chrome ou encore <a href="https://addons.mozilla.org/en-US/firefox/addon/restclient/">RESTClient</a> pour Firefox.</p>

<p>Une fois les données initialisées, la requête <code>http://localhost:8080/api/1/person/</code> donne le résultat suivant :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-4b.png"></p>

<p>Il s&#8217;agit un flux JSON représentant 100 personnes.</p>

<p>Il est possible de tester les autres services développés avec ce même principe avec <code>curl</code> ou encore le super outil que vous avez installé.</p>

<h2>Couchbase en action</h2>

<p>Maintenant que la partie Web du <em>backend</em> fonctionne, nous allons commencer à quitter le monde SQL en faisant en sorte d&#8217;utiliser une base NoSQL. L&#8217;heureux élu sera <a href="http://www.couchbase.com/">Couchbase</a>.</p>

<p><a href="http://www.couchbase.com/">Couchbase</a> est une base NoSQL orienté document. Il stocke les données sous la forme &#8220;clé-valeur&#8221;. La clé est une chaine de caractères et la valeur est un document JSON sans aucun schéma pré-défini.</p>

<p>L&#8217;architecture de l&#8217;application va être modifiée comme ceci :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-5.png"></p>

<p>J&#8217;ai téléchargé la dernière version (2.2.0) <a href="http://www.couchbase.com/download">Couchbase Community Edition</a>.
Je décompresse l&#8217;archive, l&#8217;installe puis lance <a href="http://www.couchbase.com/">Couchbase</a>.</p>

<p>J&#8217;accède à la console d&#8217;administration : <code>http://127.0.0.1:8091/index.html</code> :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-5a.png"></p>

<p>Et là, sans aucune autre documentation, je me laisse guider en cliquant sur <code>SETUP</code>.</p>

<p>A la page suivante, j&#8217;ai laissé les choix par défaut m&#8217;invitant à créer un nouveau cluster. J&#8217;ai modifié le paramètre <code>Per Server RAM Quota</code> avec la valeur 512 MB au lieu des 3 GB par défaut sur ma machine.</p>

<p>Je laissé les paramètres par défaut et saisis un identifiant/mot de passe administrateur.</p>

<p>Et là, j&#8217;ai l&#8217;écran suivant :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-5b.png"></p>

<p>J&#8217;ai du rouge. En tant que développeur Java, je suis éduqué pour y voir des erreurs. Je me lance alors dans une tentative de décryptage des couleurs de l&#8217;interface d&#8217;administration :</p>

<ul>
<li><p>Pourquoi la phrase <em>Total Allocated (512 MB)</em> est en rouge ? L&#8217;indicateur de progression est vert, la phrase <em>Unused 512 MB</em> est en vert. Je conclue qu&#8217;il s&#8217;agit probablement d&#8217;un rouge marquant la criticité d&#8217;une ressource et non d&#8217;une erreur.</p></li>
<li><p>Les mots <em>Usable Free Space (O B)</em> en rouge m&#8217;inquiète un peu plus. Là encore, j&#8217;essai de me rassurer en me disant que <a href="http://www.couchbase.com/">Couchbase</a> doit probablement réserver de l&#8217;espace disque progressivement et comme je n&#8217;ai encore aucune donnée, aucun espace disque n&#8217;a encore été réservé.</p></li>
<li><p>La 3ème indication en rouge est <em>Servers Down : 1</em>. J&#8217;ai souvent de l&#8217;imagination pour trouver les bons côtés des choses mais là, je n&#8217;ai aucune inspiration qui me vient. Je dois avoir un problème !</p></li>
</ul>


<p>Alors je clique sur ce message <em>Servers Down : 1</em>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-5c.png"></p>

<p>Je décide de laisser en l&#8217;état et de compléter l&#8217;application pour voir si le client Couchbase a des difficultés à se connecter avec ce <em>Server Down : 1</em> ;)</p>

<p>Pour communiquer avec Couchbase depuis l&#8217;application, nous allons utiliser la bibliothèque <a href="http://files.couchbase.com/maven2/couchbase/couchbase-client/">couchbase-client</a> accessible via le repository Maven de Couchbase <a href="http://files.couchbase.com/maven2/">http://files.couchbase.com/maven2/</a>. Il faudrait donc modifier le fichier <code>demo-webapp/pom.xml</code> comme <a href="https://raw.github.com/dadoonet/sql2nosql/03-couchbase-persistence/begin/demo-webapp/pom.xml">ceci</a> pour  ajouter la dépendance vers la librairie <a href="http://files.couchbase.com/maven2/couchbase/couchbase-client/">couchbase-client</a>.</p>

<p>Ce client est simple d&#8217;utilisation, voici un exemple d&#8217;utilisation :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Création de la liste des différents noeuds Couchbase</span>
</span><span class='line'><span class="n">List</span><span class="o">&lt;</span><span class="n">URI</span><span class="o">&gt;</span> <span class="n">nodes</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">URI</span><span class="o">&gt;();</span>
</span><span class='line'><span class="n">nodes</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">URI</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="s">&quot;http://127.0.0.1:8091/pools&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Création du client</span>
</span><span class='line'><span class="n">CouchbaseClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CouchbaseClient</span><span class="o">(</span><span class="n">nodes</span><span class="o">,</span> <span class="s">&quot;default&quot;</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Récupération d&#39;une donnée dont la clé est &quot;MA_CLE&quot;</span>
</span><span class='line'><span class="n">String</span> <span class="n">person</span> <span class="o">=</span> <span class="o">(</span><span class="n">String</span><span class="o">)</span><span class="n">client</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;MA_CLE&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Créer le fichier <code>demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/util/ConnectionManager.java</code> avec <a href="https://raw.github.com/dadoonet/sql2nosql/03-couchbase-persistence/end/demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/util/ConnectionManager.java">ce contenu</a>.</p>

<p>Créer le fichier <code>demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/util/KeyUtil.java</code> avec <a href="https://raw.github.com/dadoonet/sql2nosql/03-couchbase-persistence/end/demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/util/KeyUtil.java">ce contenu</a></p>

<p>Créer le fichier <code>demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/util/ViewUtil.java</code> avec <a href="https://raw.github.com/dadoonet/sql2nosql/03-couchbase-persistence/end/demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/util/ViewUtil.java">ce contenu</a></p>

<p>Compléter le fichier <code>demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/PersonService.java</code> <a href="https://raw.github.com/dadoonet/sql2nosql/03-couchbase-persistence/end/demo-webapp/src/main/java/fr/pilato/demo/sql2nosql/webapp/PersonService.java">ce contenu</a>.</p>

<p>Redémarrer l&#8217;application.</p>

<p>J&#8217;obtiens une jolie stacktrace. Ah voilà quelque chose qui me parle !</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Caused</span> <span class="nl">by:</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">beans</span><span class="o">.</span><span class="na">BeanInstantiationException</span><span class="o">:</span> <span class="n">Could</span> <span class="n">not</span> <span class="n">instantiate</span> <span class="n">bean</span> <span class="kd">class</span> <span class="err">[</span><span class="nc">fr</span><span class="o">.</span><span class="na">pilato</span><span class="o">.</span><span class="na">demo</span><span class="o">.</span><span class="na">sql2nosql</span><span class="o">.</span><span class="na">webapp</span><span class="o">.</span><span class="na">PersonService</span><span class="o">]:</span> <span class="n">Constructor</span> <span class="n">threw</span> <span class="n">exception</span><span class="o">;</span> <span class="n">nested</span> <span class="n">exception</span> <span class="n">is</span> <span class="n">com</span><span class="o">.</span><span class="na">couchbase</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">vbucket</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">ConfigParsingException</span><span class="o">:</span> <span class="n">Number</span> <span class="n">of</span> <span class="n">buckets</span> <span class="n">must</span> <span class="n">be</span> <span class="n">a</span> <span class="n">power</span> <span class="n">of</span> <span class="n">two</span><span class="o">,</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="n">and</span> <span class="o">&lt;=</span> <span class="mi">65536</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">beans</span><span class="o">.</span><span class="na">BeanUtils</span><span class="o">.</span><span class="na">instantiateClass</span><span class="o">(</span><span class="n">BeanUtils</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">163</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">beans</span><span class="o">.</span><span class="na">factory</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">SimpleInstantiationStrategy</span><span class="o">.</span><span class="na">instantiate</span><span class="o">(</span><span class="n">SimpleInstantiationStrategy</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">87</span><span class="o">)</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">beans</span><span class="o">.</span><span class="na">factory</span><span class="o">.</span><span class="na">support</span><span class="o">.</span><span class="na">AbstractAutowireCapableBeanFactory</span><span class="o">.</span><span class="na">instantiateBean</span><span class="o">(</span><span class="n">AbstractAutowireCapableBeanFactory</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">1004</span><span class="o">)</span>
</span><span class='line'>  <span class="o">...</span> <span class="mi">54</span> <span class="n">more</span>
</span><span class='line'><span class="n">Caused</span> <span class="nl">by:</span> <span class="n">com</span><span class="o">.</span><span class="na">couchbase</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">vbucket</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">ConfigParsingException</span><span class="o">:</span> <span class="n">Number</span> <span class="n">of</span> <span class="n">buckets</span> <span class="n">must</span> <span class="n">be</span> <span class="n">a</span> <span class="n">power</span> <span class="n">of</span> <span class="n">two</span><span class="o">,</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="n">and</span> <span class="o">&lt;=</span> <span class="mi">65536</span>
</span><span class='line'>  <span class="n">at</span> <span class="n">com</span><span class="o">.</span><span class="na">couchbase</span><span class="o">.</span><span class="na">client</span><span class="o">.</span><span class="na">vbucket</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">DefaultConfigFactory</span><span class="o">.</span><span class="na">parseEpJSON</span><span class="o">(</span><span class="n">DefaultConfigFactory</span><span class="o">.</span><span class="na">java</span><span class="o">:</span><span class="mi">135</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Euh finalement, ça ne me parle pas tant que ça ;)</p>

<p>Je porte mon attention sur le message d&#8217;erreur <em>Number of buckets must be a power of two, > 0 and &lt;= 65536</em>. Après plusieurs investigations dans différents forums <a href="http://www.couchbase.com/forums/thread/number-buckets-must-be-power-two-0-and-0">là</a>, <a href="http://www.couchbase.com/forums/thread/number-buckets-must-be-power-two">là</a>, ou encore <a href="http://www.couchbase.com/issues/browse/MB-8332">là</a>. Je croise même un message de <a href="tugdual_grall">Tugdual</a> dans ces fils de discussion ;)</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-5d.png"></p>

<p>Après avoir cliqué sur tous les menus et tous les boutons de l&#8217;interface d&#8217;administration, je ne parviens toujours pas à avancer. J&#8217;ai réussi au passage à me débarrasser du message d&#8217;avertissement <em>Fail Over Warning : At least two servers are required to provide replication!</em> en supprimant et recréant un <em>bucket</em>. Je comprends que j&#8217;ai eu ce message d&#8217;erreur car lors de l&#8217;initialisation de Couchbase, la case à cocher <em>Replicate</em> est cochée par défaut. Par contre impossible de me débarrasser de l&#8217;erreur <em>Server Down : 1</em>.</p>

<p>J&#8217;ai essayé une version plus récente du client. Je remarque au passage que le client couchbase-client est disponible en fait dans le Repo Maven Central via la dépendance :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;groupId&gt;</span>com.couchbase.client<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;artifactId&gt;</span>couchbase-client<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>1.2.2<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Quoiqu&#8217;il en soit, cela ne résoud pas le problème !</p>

<p>Je décide alors de recommencer l&#8217;installation. Je n&#8217;ai pas trouvé un moyen de revenir à l&#8217;état initial via l&#8217;interface d&#8217;administration. J&#8217;arrête le serveur, je supprime tous les fichiers générés par Couchbase puis je démarre <a href="http://www.couchbase.com/">Couchbase</a>. Cette fois-ci je choisis 1024 MB pour la RAM, je désactive la réplication et je sélectionne un échantillon de données (<em>beer</em>). Et là, c&#8217;est magique plus de <em>Server Down : 1</em> !</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-5e.png"></p>

<p>Je redémarre l&#8217;application, plus d&#8217;exception !</p>

<p>Rechargement des données</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPOST http://localhost:8080/api/1/person/_init
</span></code></pre></td></tr></table></div></figure>


<p>Les données sont accessibles via l&#8217;url <code>http://localhost:8080/api/1/person/</code>.</p>

<p>Dans l&#8217;interface d&#8217;administration, à l&#8217;onglet <em>View</em>, il y a une vue <em>by_name</em> qui permet de visualiser quelques données. Oui les données ont bien été insérées dans <a href="http://www.couchbase.com/">Couchbase</a>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-5f.png"></p>

<h2>Les écrans avec AngularJS et Twitter Bootstrap</h2>

<p>Nous avons jusqu&#8217;à présent un backend qui renvoie des données au format JSON. Cette étape va consister à recréer les vues que nous avions au départ.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-6.png"></p>

<p>Pour ne pas trop alourdir cet article, je ne vais pas faire un cours sur AngularJS qui n&#8217;est pas le sujet principal de cette session ;)</p>

<p>Vous pouvez directement retrouver les sources dans la branche <code>04-angular/end</code> ou bien les télécharger directement <a href="https://github.com/dadoonet/sql2nosql/archive/04-angular/end.zip">ici</a>.</p>

<p>Redémarrer l&#8217;application.</p>

<p>Les écrans sont de retour.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-6a.png"></p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-6b.png"></p>

<p>Il n&#8217;est pour le moment possible que d&#8217;effectuer des recherches par nom.</p>

<h2>La recherche <em>full text</em></h2>

<p>La recherche <em>full text</em> va être implémentée avec <a href="http://www.elasticsearch.org/">Elasticsearch</a>. L&#8217;idée principale est d&#8217;avoir les données répliquées de <a href="http://www.couchbase.com/">Couchbase</a> à <a href="http://www.elasticsearch.org/">Elasticsearch</a> qui va les indéxer. L&#8217;application <em>front end</em>, pour rechercher les données, va directement intéroger <a href="http://www.elasticsearch.org/">Elasticsearch</a>.</p>

<p>Nous aurons à la fin de cette étape, l&#8217;architecture suivante :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7.png"></p>

<p>Je télécharge <a href="https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.2.zip">Elasticsearch v0.90.2</a> et décompresser l&#8217;archive dans le répertoire de votre choix.</p>

<p>J&#8217;installe le plugin Couchbase pour <a href="http://www.elasticsearch.org/">Elasticsearch</a> (version 1.1.0) via l&#8217;exécutable <code>bin/plugin(.bat)</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/plugin -install transport-couchbase -url http://packages.couchbase.com.s3.amazonaws.com/releases/elastic-search-adapter/1.1.0/elasticsearch-transport-couchbase-1.1.0.zip
</span></code></pre></td></tr></table></div></figure>


<p>Dans le fichier <code>config/elasticsearch.yml</code>, je renseigne les paramètres :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>couchbase.username: Administrator
</span><span class='line'>couchbase.password: Administrator
</span><span class='line'>couchbase.maxConcurrentRequests: 256
</span></code></pre></td></tr></table></div></figure>


<p>Je démarre <a href="http://www.elasticsearch.org/">Elasticsearch</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/elasticsearch -f
</span></code></pre></td></tr></table></div></figure>


<p>Je crée un template <a href="http://www.elasticsearch.org/">Elasticsearch</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPUT http://localhost:9200/_template/couchbase -d <span class="s1">&#39;</span>
</span><span class='line'><span class="s1">{</span>
</span><span class='line'><span class="s1">    &quot;template&quot; : &quot;*&quot;,</span>
</span><span class='line'><span class="s1">    &quot;order&quot; : 10,</span>
</span><span class='line'><span class="s1">    &quot;mappings&quot; : {</span>
</span><span class='line'><span class="s1">        &quot;couchbaseCheckpoint&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;_source&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;includes&quot; : [&quot;doc.*&quot;]</span>
</span><span class='line'><span class="s1">            },</span>
</span><span class='line'><span class="s1">            &quot;dynamic_templates&quot;: [</span>
</span><span class='line'><span class="s1">                {</span>
</span><span class='line'><span class="s1">                    &quot;store_no_index&quot;: {</span>
</span><span class='line'><span class="s1">                        &quot;match&quot;: &quot;*&quot;,</span>
</span><span class='line'><span class="s1">                        &quot;mapping&quot;: {</span>
</span><span class='line'><span class="s1">                            &quot;store&quot; : &quot;no&quot;,</span>
</span><span class='line'><span class="s1">                            &quot;index&quot; : &quot;no&quot;,</span>
</span><span class='line'><span class="s1">                            &quot;include_in_all&quot; : false</span>
</span><span class='line'><span class="s1">                        }</span>
</span><span class='line'><span class="s1">                    }</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">            ]</span>
</span><span class='line'><span class="s1">        },</span>
</span><span class='line'><span class="s1">        &quot;_default_&quot; : {</span>
</span><span class='line'><span class="s1">            &quot;properties&quot; : {</span>
</span><span class='line'><span class="s1">                &quot;meta&quot; : {</span>
</span><span class='line'><span class="s1">                    &quot;type&quot; : &quot;object&quot;,</span>
</span><span class='line'><span class="s1">                    &quot;enabled&quot; : false</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">}</span>
</span><span class='line'><span class="s1">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Je crée un index pour person.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPUT http://localhost:9200/person
</span></code></pre></td></tr></table></div></figure>


<p>Je reviens à l&#8217;interface d&#8217;administration Couchbase : <code>http://127.0.0.1:8091/index.html</code>.</p>

<p>Je clique sur l&#8217;onglet XDCR.</p>

<p>Je crée un cluster de référence avec le bouton <code>Create Cluster Reference</code>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7a.png"></p>

<p>Je crée une réplication avec le bouton <code>Create Replication</code>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7b.png"></p>

<p>Et là dans mon cas, ça n&#8217;a pas fonctionné.</p>

<p>Après quelques recherches, je suis tombé sur <a href="https://github.com/couchbaselabs/elasticsearch-transport-couchbase/issues/3">cette fil de discussion</a> qui conseille l&#8217;utilisation de la version 1.2.0 du plugin pour ma version de <a href="http://www.couchbase.com/">Couchbase</a>.</p>

<p>Je désinstalle de l&#8217;ancienne version du plugin.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/plugin -remove transport-couchbase
</span></code></pre></td></tr></table></div></figure>


<p>J&#8217;installe la version 1.2.0 du plugin.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/plugin -install transport-couchbase -url http://packages.couchbase.com.s3.amazonaws.com/releases/elastic-search-adapter/1.2.0/elasticsearch-transport-couchbase-1.2.0.zip
</span></code></pre></td></tr></table></div></figure>


<p>Je réessaie de créer la réplication et j&#8217;ai toujours la même erreur. Côté <a href="http://www.elasticsearch.org/">Elasticsearch</a>, je peux lire l&#8217;exception suivante dans les logs :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>013-11-23 02:30:02,779<span class="o">][</span>WARN <span class="o">][</span>org.eclipse.jetty.servlet.ServletHandler<span class="o">]</span> Error <span class="k">for</span> /pools/default/buckets
</span><span class='line'>java.lang.NoSuchMethodError: org.elasticsearch.cluster.metadata.MetaData.getIndices<span class="o">()</span>Ljava/util/Map;
</span><span class='line'>  at org.elasticsearch.transport.couchbase.capi.ElasticSearchCouchbaseBehavior.getBucketsInPool<span class="o">(</span>ElasticSearchCouchbaseBehavior.java:82<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Je comprends que ma version d&#8217;<a href="http://www.elasticsearch.org/">Elasticsearch</a> n&#8217;est pas compatible avec la nouvelle version du plugin.</p>

<p>J&#8217;ai trouvé le tableau de compatibilité suivant qui rend clair tous mes problèmes d&#8217;incompatibilité accessible <a href="https://github.com/couchbaselabs/elasticsearch-transport-couchbase">ici</a> :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7c.png"></p>

<p><a href="tugdual_grall">Tugdual</a> et <a href="david_pilato">David</a> ont travaillé sur la ligne Plugin=1.1.0, Couchbase=2.0, ElasticSearch=0.90.2.</p>

<p>Vu que j&#8217;ai une base <a href="http://www.couchbase.com/">Couchbase</a> qui fonctionne et que comme tout développeur j&#8217;aime bien les dernières versions, je vais télécharger <a href="https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.5.zip">ElasticSearch 0.90.5</a> et recommencer l&#8217;installation.</p>

<p>J&#8217;obtiens toujours la même erreur lors de la création de la réplication même avec les dernières versions. Par un geste de désespoir je supprime et recrée le cluster de référence. Et là, la création de la réplication se fait sans problème !</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7d.png"></p>

<p>Mais&#8230; Il y a un petit message que je n&#8217;ai pas envie de voir <em>Last 10 errors</em>. Je clique sur ce message de couleur bleu.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7e.png"></p>

<p>Là je ne sais pas trop quoi penser ;) La réplication ne se passe visiblement pas bien.</p>

<p>Je décide de faire une courte pause, de télécharger la version 2.0.0 de Couchbase et de revenir à la version 0.90.2 d&#8217;<a href="http://www.elasticsearch.org/">Elasticsearch</a>.</p>

<p>Je démarre la version 2.0.0 de <a href="http://www.couchbase.com/">Couchbase</a>, elle rentre en conflit avec ma version 2.2.0 installée précédemment car elles partagent le même répertoire de travail. Je déplace ce répertoire de travail et là plus de problème.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7f.png"></p>

<p>Je réinjecte les données :</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>curl -XPOST http://localhost:8080/api/1/person/_init
</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7g.png"></p>

<p>Les données sont bien répliquées, on est passé de 1001 à 2001 comme prévu.</p>

<p>Le client AngularJS sera modifié pour interroger directement <a href="http://www.elasticsearch.org/">Elasticsearch</a> pour la fonctionnalité de recherche. <a href="http://www.elasticsearch.org/">Elasticsearch</a> expose une API REST pour rechercher des données. Pour rechercher les personnes ayant &#8216;Alix&#8217; dans leur nom ou prénom, il suffit d&#8217;accéder à l&#8217;adresse : <code>http://127.0.0.1:9200/person/_search?q=alix</code>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-7h.png"></p>

<h2>Vos tableaux de bord les doigts dans le nez avec Kibana</h2>

<p><a href="http://www.elasticsearch.org/overview/kibana/">Kibana</a> est une application web qui permet de visualiser les données indexées dans <a href="http://www.elasticsearch.org/">Elasticsearch</a> suivant des critères.</p>

<p>A l&#8217;issue de cette étape, l&#8217;architecture de l&#8217;application va ressembler à ceci :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-8.png"></p>

<p>J&#8217;installe le plugin Kibana pour <a href="http://www.elasticsearch.org/">Elasticsearch</a>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>bin/plugin -install elasticsearch/kibana
</span></code></pre></td></tr></table></div></figure>


<p>En lançant <a href="http://www.elasticsearch.org/overview/kibana/">Kibana</a>, <code>http://localhost:9200/_plugin/kibana/</code>, j&#8217;obtiens ceci :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-8a.png"></p>

<p>Je choisis de ne pas tenter l&#8217;aventure de la mise à jour. Je clique sur le lien <code>src</code> et j&#8217;accède à une page d&#8217;introduction.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-8b.png"></p>

<p>Je clique sur <code>Sample Dashboard</code>.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-8c.png"></p>

<p>Il est possible de filtrer, visualiser les données suivant plusieurs axes d&#8217;analyse. Si vous souhaitez jouer avec <a href="http://www.elasticsearch.org/overview/kibana/">Kibana</a>, il y a une démo en ligne accessible à l&#8217;adresse <a href="http://demo.kibana.org/#/dashboard">http://demo.kibana.org/#/dashboard</a> :</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-demo-8d.png"></p>

<h2>Les slides de Devoxx Belgique 2013</h2>

<script async class="speakerdeck-embed" data-id="95cfa1f02edb0131128806fa6ec08ea7" data-ratio="1.72972972972973" src="http://roddet.github.com//speakerdeck.com/assets/embed.js"></script>


<h2>Et pour conclure ?</h2>

<p>Comme vous l&#8217;avez surement constaté, cette soirée du JUG Nantes a été riche en contenu.</p>

<p>Dans le monde des bases de données NoSQL orientées document, <a href="http://www.couchbase.com/">Couchbase</a> a un concurrent direct <a href="http://www.mongodb.org/">MongoDB</a>. Un participant va poser la question de savoir quelles étaient les différences de fond entre ces deux bases de données. <a href="https://twitter.com/tgrall">Tugdual</a>, évangéliste <a href="http://www.couchbase.com/">Couchbase</a>, va donner les éléments de réponse suivants :</p>

<ul>
<li><p><a href="http://www.couchbase.com/">Couchbase</a> est conçu pour faciliter la distribution des données, la création de nombreux clusters de données via une interface d&#8217;administration. Il est donc plus indiqué pour des systèmes nécessitant de traitement de grand volumes de données distribuées sur plusieurs machine. Créer un cluster avec <a href="http://www.mongodb.org/">MongoDB</a> ne serait pas une tâche aussi simple que dans <a href="http://www.couchbase.com/">Couchbase</a>.</p></li>
<li><p><a href="http://www.mongodb.org/">MongoDB</a> est plus riche et plus facile à requêter que <a href="http://www.couchbase.com/">Couchbase</a>. Il dispose d&#8217;une API très puissante pour extraire des données. C&#8217;est pour cette raison qu&#8217;il est conseillé de coupler <a href="http://www.couchbase.com/">Couchbase</a> à <a href="http://www.elasticsearch.org/">Elasticsearch</a> pour disposer d&#8217;une plus grande puissance d&#8217;extraction/analyse de données.</p></li>
</ul>


<p>Au regard de la complémentarité des deux technologies (<a href="http://www.couchbase.com/">Couchbase</a> &amp; <a href="http://www.elasticsearch.org/">Elasticsearch</a>), on peut se demander <em>A quand le rachat de l&#8217;un par l&#8217;autre ?</em>. <a href="https://twitter.com/dadoonet">David</a> va affirmer, hors séance, que ce n&#8217;était pas à sa connaissance à l&#8217;ordre du jour. Il y voit en <a href="http://www.elasticsearch.org/">Elasticsearch</a> un produit complet au point que certains clients n&#8217;hésiteraient pas à l&#8217;utiliser directement en tant que base de données.</p>

<p>Bien évidemment, si vous souhaitez mettre en oeuvre ces outils, prenez des versions compatibles entre elles et n&#8217;hésitez pas à recommencer quand vous êtes dans une impasse ;)</p>

<p>Je ne sais pas pour vous mais je suis impatient d&#8217;être à la prochaine soirée du JUG Nantes : <a href="http://nantesjug.org/#/events/2013_12_04">Grails dans les tranchés + Java 8</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Soirée JUG Nantes : Du SQL au NoSQL en moins d'une heure (Partie 1)]]></title>
    <link href="http://roddet.github.com/2013/11/nantesjug-novembre-part1/"/>
    <updated>2013-11-10T09:30:00-05:00</updated>
    <id>http://roddet.github.com/2013/11/nantesjug-novembre-part1</id>
    <content type="html"><![CDATA[<p>Le 4 novembre dernier, j&#8217;ai eu l&#8217;opportunité de participer à une soirée organisée par le <a href="http://nantesjug.org/">JUG Nantes</a> sous le thème &#8220;Du SQL au NoSQL en moins d&#8217;une heure&#8221;.</p>

<h2>Une salle pleine !</h2>

<p>La plus grande salle de l&#8217;<a href="http://www.epsi.fr/Campus/Campus-de-Nantes#">EPSI Nantes</a> était un peu petite face à l&#8217;engouement suscité par l&#8217;événement.</p>

<p>C&#8217;est le premier événement JUG Nantes auquel j&#8217;assiste depuis la rentrée. Oui c&#8217;est avec beaucoup de regrêts que je n&#8217;ai pas pu être présent à la première soirée de cette saison 2013-2014 :) Je remarque aussi que le public a changé, il y a beaucoup plus d&#8217;étudiants comparé à la saison précédente. Ceci est probablement lié au fait que l&#8217;<a href="http://www.epsi.fr/Campus/Campus-de-Nantes#">EPSI Nantes</a> accueille l&#8217;événement.</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-salle-pleine.jpg"></p>

<p>Le JUG de Nantes va nous offrir 2 sessions :</p>

<ul>
<li>1 Quickie <em>Amélioration de la qualité du code par restriction du langage</em></li>
<li>1 talk <em>Elastifiez votre application : du SQL au NoSQL en moins d&#8217;une heure</em></li>
</ul>


<h2>Le quickie <em>Amélioration de la qualité du code</em></h2>

<p><a href="https://twitter.com/mercury_wood/">Hugo Wood</a> va nous présenter son retour d&#8217;expérience sur l&#8217;amélioration de la qualité du code. Il a appris le langage Java principalement en autodidacte avec des livres et travaille récemment en société de service où il côtoie beaucoup de <em>legacy</em> (les connaisseurs ne seront probablement pas surpris ;)).</p>

<p><img class="center" src="http://roddet.github.com/images/nantesjug/nov13/nantesjug-nov13-hugo-wood.jpg"></p>

<h2>C&#8217;est quoi la qualité du code ?</h2>

<p>Hugo a commencé par poser les bases de la qualité du code.</p>

<p>Par quoi reconnaît-on un code de bonne qualité ? => Par sa maintenabilité. Et pour avoir un code maintenable, il faut qu&#8217;il soit modulaire et testable.</p>

<h2>Les méthodes privées => cacher la misère ?</h2>

<p>Vous l&#8217;avez surement déjà remarqué, les méthodes privées d&#8217;une classe ont tendance à se multiplier avec le passage d&#8217;un collègue qui vous dit avec fierté que le code n&#8217;était pas lisible et qu&#8217;il a fait du <em>refactoring</em>. Il avait trouvé une méthode publique trop <em>grosse</em>, vous savez ce genre de méthode qui ne se termine pas avec 2 <em>scrolls</em> de votre souris. Il a alors  extrait (merci les IDE) des parties de code de la méthode en plusieurs méthodes privées.</p>

<p>La lisibilité de la méthode s&#8217;est peut-être améliorée mais a t-on vraiment progressé sur la maintenabilité après une telle opération ?</p>

<p>La réponse est Non. En effet, cette opération conduit généralement à 2 catégories de méthodes privées :</p>

<ul>
<li><p>1 méthode qui n&#8217;interagit avec aucun champ de la classe. Que fait-elle alors dans cette classe ? Elle pourrait être <em>static</em> votre code fonctionnerait toujours. Il convient donc de l&#8217;extraire dans une nouvelle classe.</p></li>
<li><p>1 méthode privée qui modifie la valeur d&#8217;un champ de la classe. Cela conduit souvent à perdre le contrôle rationnel de ce  champ. En effet, lorsque vous lirez votre méthode publique à <em>refactorer</em>, vous verrez l&#8217;appel à cette nouvelle méthode. Vous ne vous rendrez pas forcément compte qu&#8217;il modifie un champ et que la suite de votre algorithme dépend fortement de l&#8217;exécution de cette nouvelle méthode. Comme dit Hugo, un <em>parfum de variable globale</em>&#8230; La bonne option est donc d&#8217;extraire ce champ et cette méthode dans une nouvelle classe.</p></li>
</ul>


<p>Etes-vous prêt à arrêter de cacher la misère en vous &#8220;privant&#8221; des méthodes privées ?</p>

<h2>L&#8217;héritage de classe => notre ennemi ?</h2>

<p>Ceux qui travaillent au quotidien avec une grande volumétrie de code, l&#8217;admettront aisément : l&#8217;héritage de classe, quand il est mal utilisé pose quelques difficultés de maintenance :</p>

<ul>
<li>Comment tester une classe fille sans effet de bord de la classe mère ?</li>
<li>Comment tester unitairement une classe abstraite sans ses classes concrètes ?</li>
<li>Utiliser des champs <em>protected</em> d&#8217;une classe mère dans une classe fille, une encapsulation à plusieurs vitesses ?</li>
</ul>


<p>L&#8217;héritage de classe est malheureusement souvent utilisé, à tort, pour factoriser du code. Il est alors facile de se retrouver par exemple avec :</p>

<ul>
<li>Une méthode dont l&#8217;exécution conduit à naviguer à travers plusieurs niveaux de la hiérarchie des classes</li>
<li>Une méthode vide (avec un commentaire <em>// ne rien faire</em>) dans certaines classes pour un traitement à ne pas effectuer dans des cas particuliers</li>
</ul>


<p>Hugo va préconiser l&#8217;utilisation des interfaces et de la composition pour traiter nos besoins courants. Il va l&#8217;illustrer en proposant un <em>refactoring</em> possible de la classe abstraite <em>AbstractCollection</em> du JDK avec une interface et la composition (illustration présente dans ses slides).</p>

<p>Etes-vous prêt à ne plus utiliser l&#8217;héritage de classe ?</p>

<h2>Les slides du Quickie</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/27900604" width="700" height="569" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<p>Vous l&#8217;aurez compris, Hugo encourage une <em>restriction</em> de l&#8217;utilisation du langage Java pour améliorer la qualité de du code. Il argumente que cela permettra aux débutants de commettre moins d&#8217;erreurs de <em>design</em> et aux expérimentés d&#8217;agir avec un meilleur discernement.</p>

<h2>La suite ! La suite ! La suite !</h2>

<p>Après ce quickie, <a href="https://twitter.com/tgrall">Tugdual Grall</a> et <a href="https://twitter.com/dadoonet">David Pilato</a> ont pris le relais pour le talk <em>Elastifiez votre application : du SQL au NoSQL en moins d&#8217;une heure</em>. A travers un exemple de code, ils vont nous montrer comment passer du SQL au NoSQL avec <a href="http://www.couchbase.com/">CouchBase</a> et <a href="http://www.elasticsearch.org/">Elasticsearch</a>.</p>

<p>A suivre dans la 2ème partie de cet article dans les prochains jours&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => Big Data + Scala]]></title>
    <link href="http://roddet.github.com/2013/11/scalaio-2013-bigdata-scala/"/>
    <updated>2013-11-07T09:30:00-05:00</updated>
    <id>http://roddet.github.com/2013/11/scalaio-2013-bigdata-scala</id>
    <content type="html"><![CDATA[<h2>Présentateurs</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-sam-bessalah.jpg">
Sam Bessalah, indépendant intervenant sur des sujets tournant autour du <em>Big Data</em>, <em>Machine Learning</em>&#8230;</p>

<ul>
<li>Twitter : <a href="https://twitter.com/samklr">@samklr</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/sam-bessalah.html">Scala IO</a></li>
<li>La description de <a href="http://scala.io/events/big-data-plus-scala.html">la session ScalaIO</a></li>
</ul>


<br><br>


<h2>Big Data + Analytics</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/big-data-scala-1.jpg">
<em>What is Big Data Analytics ?</em></p>

<p>C&#8217;est par cette question que commence le talk de Sam. La réponse sera :</p>

<blockquote><p>It&#8217;s about doing aggregations and running complex models on large datasets, offline, in real time or both.</p></blockquote>


<p>Pour analyser de gros volumes de données distribuées, il y a donc 3 stratégies :</p>

<ul>
<li><em>offline</em> (mode batch),</li>
<li>en temps réel,</li>
<li>ou les deux en même temps.</li>
</ul>


<p>Sam va tout au long de la session présenter les outils du <em>Big Data</em> et leurs utilisations avec Scala. Il précisera pour chaque outil les stratégies compatibles.</p>

<h2>Hadoop + Scala</h2>

<p><a href="http://hadoop.apache.org/">Hadoop</a> est un système permettant de créer des applications scalables massivement distribuées.
Dans le domaine du Big Data, il est utilisé en mode batch et non en temps réel.</p>

<p>Pour traiter de grands volumes de données distribuées, <a href="http://hadoop.apache.org/">Hadoop</a> possède un module appelé <em>Hadoop MapReduce</em> qui applique le pattern <a href="http://fr.wikipedia.org/wiki/MapReduce"><em>Map Reduce</em></a>.</p>

<p>Sam a pris le temps d&#8217;expliquer le concept de <em>Map Reduce</em> par des schémas et un exemple de code Scala.</p>

<p>Pour définir des <em>jobs Hadoop MapReduce</em> en scala, Sam conseille l&#8217;utilisation de la librairie <a href="https://github.com/twitter/scalding">Scalding</a>.</p>

<h2>Storm + Scala</h2>

<p><a href="http://storm-project.net/">Storm</a>, contrairement à Hadoop, va permettre de traiter massivement les données en temps réel.</p>

<p>Pour utiliser <a href="http://storm-project.net/">Storm</a> avec un DSL Scala, il y a le projet <a href="https://github.com/velvia/ScalaStorm">ScalaStorm</a>.</p>

<h2>SummingBird => Scala</h2>

<p><a href="https://github.com/twitter/summingbird">SummingBird</a> est une librairie Scala qui fournit une abstraction du pattern <em>Map Reduce</em> applicable à <a href="http://hadoop.apache.org/">Hadoop</a> et à <a href="http://storm-project.net/">Storm</a>.</p>

<p>Ainsi, vous définissez vos jobs avec <a href="https://github.com/twitter/summingbird">SummingBird</a> et vous allez pouvoir les exécuter dans <a href="http://hadoop.apache.org/">Hadoop</a> ou <a href="http://storm-project.net/">Storm</a>.</p>

<h2>Apache Spark + Scala</h2>

<p><a href="http://spark.incubator.apache.org/">Apache Spark</a> est une alternative au module <em>Hadoop MapReduce</em> qui permet de faire des traitements distribués.</p>

<p>Il est réputé plus performant que <em>Hadoop MapReduce</em> et reste compatible avec <a href="http://hadoop.apache.org/">Apache Hadoop</a>.</p>

<p>Le concept clé de <a href="http://spark.incubator.apache.org/">Spark</a> est de permettre le traitement simplifié de collections de données distribuées.
Il dispose d&#8217;une API en Scala, Java et Python donnant la possibilité d&#8217;enchainer des actions (count, collect, save, &#8230;) ou encore des transformations (map, filter, groupBy, join, &#8230;).</p>

<p><a href="http://spark.incubator.apache.org/">Spark</a> s&#8217;utilise en mode batch et non en temps réel.</p>

<h2>Apache Spark Streaming + Scala</h2>

<p><a href="http://spark.incubator.apache.org/docs/latest/streaming-programming-guide.html">Apache Spark Streaming</a> étend les possibilités de <a href="http://spark.incubator.apache.org/">Spark</a> en traitant des <em>streams</em> de données en temps réel.</p>

<h2>Les slides de la présentation</h2>

<script async class="speakerdeck-embed" data-id="02c383b01f9901312c660a36078c81b4" data-ratio="1.33333333333333" src="http://roddet.github.com//speakerdeck.com/assets/embed.js"></script>


<h2>Ce que j&#8217;en ai pensé</h2>

<p>Ce talk m&#8217;a permis de découvrir l&#8217;univers du Big Data. Scala y semble bien implanté :</p>

<ul>
<li>Existence de multiples API pour manipuler les systèmes les plus utilisés</li>
<li>Des projets comme <a href="http://spark.incubator.apache.org/">Spark</a> ou <a href="https://github.com/twitter/summingbird">SummingBird</a> sont écrits en scala.</li>
</ul>


<p>La programmation fonctionnelle (<em>FP</em>) semble trouver avec le Big Data un créneau d&#8217;utilisation particulièrement adapté. En effet, effectuer des analyses de données consiste souvent à appliquer un enchainement de transformations à ces données. Et la <em>FP</em>, de part sa nature, est l&#8217;outil idéal pour représenter un enchainement de fonctions :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => Patterns de développement pour une application web réactive et concurrente]]></title>
    <link href="http://roddet.github.com/2013/11/scalaio-2013-patterns-web-reactive/"/>
    <updated>2013-11-06T09:30:00-05:00</updated>
    <id>http://roddet.github.com/2013/11/scalaio-2013-patterns-web-reactive</id>
    <content type="html"><![CDATA[<h2>Présentateurs</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-fabrice-croiseaux.png">
Fabrice Croiseaux, CEO chez InTech Luxembourg. Il anime régulièrement des podcasts <a href="http://www.niptech.com/podcast/category/nipdev/">NipDev</a>.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/fXzo">@fXzo</a></li>
<li>LinkedIn : <a href="http://www.linkedin.com/in/fcroiseaux">http://www.linkedin.com/in/fcroiseaux</a></li>
<li>Github : <a href="https://github.com/fcroiseaux">fcroiseaux</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/fabrice-croiseaux.html">Scala IO</a></li>
</ul>


<br>


<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-antoine-detante.png">
Antoine Detante, Ingénieur chez InTech Luxembourg.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/antoined">@antoined</a></li>
<li>LinkedIn : <a href="http://www.linkedin.com/in/fcroiseaux">http://www.linkedin.com/in/fcroiseaux</a></li>
<li>Github : <a href="https://github.com/adetante">adetante</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/antoine-detante.html">Scala IO</a></li>
</ul>


<br><br>


<p>=> La description de <a href="http://scala.io/events/patterns-de-developpement-pour-une-application-web.html">la session ScalaIO</a></p>

<h2>Le Talk !</h2>

<p>Antoine et Fabrice sont arrivés 2nd au concours <a href="http://typesafe.com/blog/developer-contest-winners-announced">Typesafe’s Developer Contest</a> qui a eu lieu en début d&#8217;année.</p>

<p>Ils ont concouru avec une application <em>Car Race Dashboard</em> construite avec <a href="http://www.playframework.com/">Play! Framework</a> qui offre en temps réel la visualisation d&#8217;un <em>dashboard</em> de course de voitures.</p>

<p>Ce talk a été l&#8217;occasion pour eux de présenter leur travail.</p>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/web-reactive-1.jpg"></p>

<h2>Une application construite avec 3 composants principaux</h2>

<ul>
<li><p><em>Race Simulation</em> => un moteur qui simule le déplacement de voitures</p></li>
<li><p><em>Race Dashboard</em> => Stockage des positions dans une base <a href="http://www.mongodb.org/">Mongo DB</a> + calcul des statistiques en asynchrone + notification des résultats</p></li>
<li><p><em>Web Client</em> => un client web qui affiche en temps réel l&#8217;évolution de la course</p></li>
</ul>


<h2><em>Race Simulation</em></h2>

<h3>Du KML en guise de circuit</h3>

<p>Pour simuler le déplacement d&#8217;une voiture, il faut déterminer une liste de coordonnées possibles.
Cette liste de coordonnées est commune à toutes les voitures lors d&#8217;une course.
Elle dépend évidemment du circuit sélectionné pour la course.</p>

<p>La liste des points est obtenue à partir d&#8217;un fichier <a href="http://en.wikipedia.org/wiki/Keyhole_Markup_Language">KML</a> pour un circuit. A titre d&#8217;exemple, vous pouvez consulter celui du Mans <a href="http://www.comintech.net/kml/LeMans.kml">ici</a>.
Ce fichier <em>XML</em> sera parsé pour récupérer la liste des coordonnées possibles pour une course donnée.</p>

<p>Curieux de voir à quoi ressemble le code Scala qui a en entrée une URL de fichier <a href="http://en.wikipedia.org/wiki/Keyhole_Markup_Language">KML</a> et en sortie une liste de points ?</p>

<figure class='code'><figcaption><span>TrackParser</span><a href='https://github.com/intechgrp/CarRaceDashboard/blob/master/app/simulation/TrackParser.scala'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">def</span> <span class="n">readTrack</span><span class="o">(</span><span class="n">url</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">TrackPoint</span><span class="o">]</span> <span class="k">=</span> <span class="n">readTrack</span><span class="o">(</span><span class="nc">XML</span><span class="o">.</span><span class="n">load</span><span class="o">(</span><span class="n">url</span><span class="o">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="n">readTrack</span><span class="o">(</span><span class="n">data</span><span class="k">:</span> <span class="kt">Elem</span><span class="o">)</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">TrackPoint</span><span class="o">]</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">positions</span> <span class="k">=</span> <span class="o">(</span><span class="k">for</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pos</span> <span class="k">&lt;-</span> <span class="o">(</span><span class="n">data</span> <span class="o">\\</span> <span class="s">&quot;coordinates&quot;</span><span class="o">).</span><span class="n">text</span><span class="o">.</span><span class="n">split</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">pos</span><span class="o">.</span><span class="n">trim</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">yield</span> <span class="n">pos</span><span class="o">.</span><span class="n">trim</span><span class="o">).</span><span class="n">toList</span><span class="o">.</span><span class="n">map</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">pos</span> <span class="k">=&gt;</span>
</span><span class='line'>      <span class="k">val</span> <span class="n">coordinates</span> <span class="k">=</span> <span class="n">pos</span><span class="o">.</span><span class="n">split</span><span class="o">(</span><span class="s">&quot;,&quot;</span><span class="o">)</span>
</span><span class='line'>      <span class="nc">Position</span><span class="o">(</span><span class="n">coordinates</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="n">toDouble</span><span class="o">,</span> <span class="n">coordinates</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="n">toDouble</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">positions</span><span class="o">.</span><span class="n">zipWithIndex</span><span class="o">.</span><span class="n">map</span><span class="o">(</span><span class="n">v</span> <span class="k">=&gt;</span> <span class="nc">TrackPoint</span><span class="o">(</span><span class="n">v</span><span class="o">.</span><span class="n">_2</span><span class="o">,</span> <span class="n">v</span><span class="o">.</span><span class="n">_1</span><span class="o">))</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Des acteurs, des acteurs, des acteurs</h3>

<ul>
<li><p><em>Race Actor</em> => Acteur qui représente la course et qui permet de lancer toutes les voitures via un événement <em>start</em>. Il va aussi se charger de communiquer l&#8217;évolution des voitures au composant <em>Race Dashboard</em>.</p></li>
<li><p><em>Car Actor</em> => Acteur qui simule le déplacement d&#8217;une voiture.
Une fois l&#8217;événement <em>start</em> reçu du <em>Race Actor</em>, il va déplacer à intervalle régulier une voiture suivant la liste des points ordonnés du circuit.</p></li>
</ul>


<p><a href="https://github.com/intechgrp/CarRaceDashboard/blob/master/app/simulation/Race.scala">Code source des acteurs</a></p>

<h2><em>Race Dashboard</em></h2>

<h3><em>Storage Actor</em></h3>

<p>Cet acteur va sauvegarder les vitesses, positions et les distances successives dans la base <a href="http://www.mongodb.org/">Mongo DB</a>.
Le driver <a href="http://reactivemongo.org/">Reactive Mongo</a> y est utilisé.</p>

<p><a href="https://github.com/intechgrp/CarRaceDashboard/blob/master/app/models/StorageActor.scala">Code Source de l&#8217;acteur</a></p>

<h3><em>Stats Actor</em></h3>

<p><em>Stats Actor</em> calcule à partir des données stockées :</p>

<ul>
<li>La vitesse moyenne</li>
<li>La vitesse maximale</li>
<li>Le classement général</li>
</ul>


<p><a href="https://github.com/intechgrp/CarRaceDashboard/blob/master/app/models/StatsActor.scala">Code Source de l&#8217;acteur</a></p>

<h3><em>RTEventListener</em></h3>

<p>Un acteur <em>RTEventListener</em> est instancié pour chaque client Web. Il écoute les messages du composant des acteurs <em>Storage Actor</em> et <em>Stats Actor</em> puis notifie via <a href="http://en.wikipedia.org/wiki/Server-sent_events">SSE</a> le client web.</p>

<h2><em>Web Client</em></h2>

<p>Le client Web est construit avec :</p>

<ul>
<li><a href="http://coffeescript.org/">Coffescript</a> qui s&#8217;intègre naturellement avec <a href="http://www.playframework.com/">Play! Framework</a></li>
<li><a href="http://backbonejs.org/">backbone.js</a> pour une structure MVC</li>
<li><a href="http://getbootstrap.com/">Twitter Bootstrap</a> pour la présentation générale de l&#8217;application</li>
<li><a href="http://kineticjs.com/">Kineticjs</a> pour le dessin du circuit et le déplacement des voitures</li>
</ul>


<h2>A quoi ressemble l&#8217;application ?</h2>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/web-reactive-2.png"></p>

<h2>Les slides de la présentation</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/27621039" width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<h2>Ce que j&#8217;en ai pensé</h2>

<p>Ce talk montre un exemple d&#8217;architecture se reposant complètement sur <a href="http://fr.wikipedia.org/wiki/Mod%C3%A8le_d'acteur">le modèle d&#8217;acteur</a>.
Ce style d&#8217;architecture permet une organisation séparant clairement les responsabilités entre les acteurs et une communication asynchrone entre les différents composants.</p>

<p>Je me suis poser la question de l&#8217;intérêt de l&#8217;instanciation d&#8217;un acteur <em>RTEventListener</em> par client Web. Je pensais trouver 1 acteur unique pour communiquer via <a href="http://en.wikipedia.org/wiki/Server-sent_events">SSE</a> avec tous les clients. Je comprends qu&#8217;en utilisant 1 acteur par client Web, on se donne l&#8217;opportunité de notifier de façon concurrente les clients.</p>

<p>Asynchronisme + séparation des responsabilités + concurrence constituent-ils les fondations d&#8217;une application web réactive ?</p>

<p>Vous souhaitez en savoir plus sur ce style d&#8217;architecture ? Consulter le code sur <a href="https://github.com/intechgrp/CarRaceDashboard/">Github</a> et surtout inscrivez-vous au cours gratuit <a href="https://www.coursera.org/course/reactive"><em>Principles of Reactive Programming</em></a> de Coursera.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => Our journey from UML/MDD to Scala macros]]></title>
    <link href="http://roddet.github.com/2013/11/scalaio-2013-uml-scala/"/>
    <updated>2013-11-05T09:30:00-05:00</updated>
    <id>http://roddet.github.com/2013/11/scalaio-2013-uml-scala</id>
    <content type="html"><![CDATA[<h2>Présentateur</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-hayssam-saleh.png">
Hayssam Saleh, CTO chez Ebiznext.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/hayssams">@hayssams</a></li>
<li>LinkedIn : <a href="http://fr.linkedin.com/in/hayssams">http://fr.linkedin.com/in/hayssams</a></li>
<li>Github : <a href="https://github.com/hayssams">hayssams</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/hayssam-saleh.html">Scala IO</a></li>
<li>La description de <a href="http://scala.io/events/our-journey-from-umlmdd-to-scala-macros.html">sa session ScalaIO</a></li>
</ul>


<br><br>


<h2>Le Talk !</h2>

<p>Ce talk nous présente un retour d&#8217;expérience concernant une migration UML vers des macros scala pour modéliser une application.</p>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/uml-scala-1.jpg"></p>

<h2>Les inconvénients d&#8217;une modélisation basée sur UML</h2>

<ul>
<li><p>Un cycle de vie peu efficace composé d&#8217;un enchainement de transformations : UML -> XMI -> Code -> ByteCode. Il fallait près de 4h pour avoir le livrable correspondant à une modification du modèle. L&#8217;étape la plus chronophage (78% du temps) était <em>XMI -> Code</em>.</p></li>
<li><p>Pas de solution <em>exploitable dans un vrai projet</em> pour effectuer des merges de modèles UML. Ce qui entrainait la mise en place d&#8217;un <em>lock</em> (1 modification à la fois) pour éviter d&#8217;avoir à effectuer des merges.</p></li>
<li><p>Le manque de représentation standard de certaines caractéristiques du modèle (Les génériques Java par exemple)</p></li>
</ul>


<h2>Un DSL comme alternative</h2>

<p>Hayssam et son équipe ont proposé alors de s&#8217;orienter vers l&#8217;utilisation d&#8217;un DSL qui doit avoir les caractéristiques suivantes :</p>

<ul>
<li>Compréhensible du <em>product owner</em></li>
<li>Compilable du développeur</li>
</ul>


<h2>Des macros Slick</h2>

<p>Les macros Scala utilisées sont basées sur <a href="http://slick.typesafe.com/">Slick</a>, un framework de persistance. Hayssam va nous présenter un exemple de <em>modélisation</em> avec une macro Slick et comment se traduisent les définitions des :</p>

<ul>
<li>Entités => <em>case classes</em></li>
<li>Relations 0..1 => <em>Option</em></li>
<li>Relations 1..1 => Composition d&#8217;entités</li>
<li>Relations n..n => <em>List</em></li>
<li>Contraintes => via l&#8217;utilisation de mots clés du DSL</li>
</ul>


<h2>Un export UML</h2>

<p>Les macros <a href="http://slick.typesafe.com/">Slick</a> vont permettre de générer des diagrammes UML via l&#8217;exécution d&#8217;une ligne de code.</p>

<h2>La magie faite à la compilation, pas d&#8217;injection au runtime</h2>

<p>Les macros <a href="http://slick.typesafe.com/">Slick</a> vont impacter le code à la compilation, le bytecode généré contient déjà toutes les transformations. Cela permet de profiter de toute la puissance du compilateur et donc du typage fort de Scala.</p>

<p>Pas de magie au runtime => à l&#8217;exécution, seul le code compilé est exécuté.</p>

<p><a href="http://slick.typesafe.com/">Slick</a> permet aussi de contruire des requêtes qui vont profiter d&#8217;un typage fort facilitant la détection d&#8217;erreurs à la compilation.</p>

<h2>Les slides de la présentation</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/27545078" width="650" height="534" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<h2>Ce que j&#8217;en ai pensé</h2>

<p>Je suis arrivé un peu par hasard dans cette session. C&#8217;était en fin de journée et je m&#8217;étais en fait trompé de salle :) Cela dit, je suis content d&#8217;y avoir assisté.</p>

<p>Il est intéressant d&#8217;avoir des retours d&#8217;expérience d&#8217;utilisation de DSL dans le monde de l&#8217;entreprise. La modélisation qui constitue souvent naturellement la richesse documentaire des applications est ici faite sans induire la double maintenance habituelle (modèle + code). Nous échappons ici à la génération de codes que nous détestons la plupart du temps en tant que développeur.</p>

<p>Ce qui m&#8217;a manqué dans cette présentation, ce sont les impacts sur le plan humain et organisationnel de cette migration. J&#8217;imagine que des personnes qui étaient <em>habituées</em> à modéliser via des <em>boites</em> ont dû, au moins au début, manifester une certaine hostilité face à ce changement :) J&#8217;aurai voulu savoir s&#8217;il y avait eu une stratégie particulière pour créer de l&#8217;adhésion autour de ce nouveau paradigme.</p>

<p>Pour en savoir plus, le dépôt Github <a href="https://github.com/ebiznext/slick-macros">https://github.com/ebiznext/slick-macros</a> contient les exemples du Talk et ce <a href="https://github.com/ebiznext/slick-macros/wiki">Wiki</a> documente la solution proposée.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => PHPz for the rest of us]]></title>
    <link href="http://roddet.github.com/2013/11/scalaio-2013-phpz/"/>
    <updated>2013-11-04T09:30:00-05:00</updated>
    <id>http://roddet.github.com/2013/11/scalaio-2013-phpz</id>
    <content type="html"><![CDATA[<h2>Présentateur</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-clement-delafargue.jpeg">
Clément Delafargue, Consultant chez Penazen Consulting.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/clementd">@clementd</a></li>
<li>LinkedIn : <a href="http://www.linkedin.com/in/cdelafargue">http://www.linkedin.com/in/cdelafargue</a></li>
<li>Blog : <a href="http://blog.clement.delafargue.name/">http://blog.clement.delafargue.name</a></li>
<li>Github : <a href="https://github.com/divarvel">divarnel</a></li>
</ul>


<br><br><br><br><br>


<h2>Comment faire des délicieux bouritos en Php ?</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/phpz-1.jpg" width="300"></p>

<p><a href="http://scala.io/">Scala IO</a>, c&#8217;était aussi des sessions courtes qui n&#8217;étaient pas dans le planning. Elles étaient appelées &#8220;Lightning talk&#8221; et avait lieu durant la pause de midi.</p>

<p>Dans le lot de ces présentations, il y avait ce talk sur <em>Phpz</em>. Un talk suréaliste qui a apporté une belle ambiance à l&#8217;événement.</p>

<p>Juste avant de démarrer le talk, Clément nous préviens que cette présentation n&#8217;est pas du tout sérieuse et qu&#8217;il va nous montrer comment faire de délicieux bouritos en Php.</p>

<p>Le ton du talk était lancé ! Nous aurons droit à 3 étapes :</p>

<ul>
<li>Les avantages de la programmation fonctionnelle</li>
<li>Les caractéristiques de Php</li>
<li>Phpz pour faire des délicieux bouritos</li>
</ul>


<h2>Les avantages de la programmation fonctionnelle</h2>

<ul>
<li>La pureté</li>
<li>Pas d&#8217;effet de bord</li>
<li><em>Equational Reasoning</em></li>
</ul>


<h2>Les caractéristiques de Php</h2>

<ul>
<li>Du code en prod via FTP</li>
<li>Pas de système de type</li>
<li>Déploiement facile et robuste</li>
<li>Bon écosystème</li>
</ul>


<h2>Phpz pour faire des délicieux bouritos</h2>

<p>Inspiré de <a href="https://github.com/scalaz/scalaz">Scalaz</a>, Phpz <em>apporte</em> la puissance de la programmation fonctionnelle à Php. Clément nous a partagé les difficultés qu&#8217;il a rencontrées pour mettre en place des <em>typeclass</em> en Php.</p>

<p>Selon Clément, la version actuelle pourrait rendre votre application jusqu&#8217;à 40 fois moins performante mais il ne perd pas espoir que cet aspect s&#8217;améliore dans les prochaines versions. Il attend vos <em>pull request</em> avec impatience.</p>

<p>Il y a <a href="https://twitter.com/gcouprie">Geoffroy Couprie</a> qui a poussé l&#8217;amusement un peu plus loin en créant <a href="http://geal.github.io/pod/">POD</a> un langage basé sur Phpz.</p>

<h2>Les slides de la présentation</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/27780581?rel=0" width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<h2>Ce que j&#8217;en ai pensé</h2>

<p>J&#8217;ai trouvé cette présentation très drôle, j&#8217;ai rigolé pendant toute la présentation. Si vous vous demandez pourquoi, c&#8217;est que vous n&#8217;avez pas parcouru les slides :)</p>

<p>Au regard du titre de la présentation, je pensais que nous avions à faire à quelqu&#8217;un qui aime Php (ils sont de plus en plus rares à l&#8217;avouer dans mon entourage) mais en fait tout au long de la présentation nous nous sommes rapidement rendu compte que c&#8217;était bien évidemment ironique. On sent bien que Clément est un <em>fan</em> de la programmation fonctionnelle et qu&#8217;il n&#8217;apprécie pas beaucoup Php.</p>

<p>Difficile à dire qui a l&#8217;esprit le plus tordu, Clément avec Phpz ou Geoffroy qui l&#8217;utilise pour en faire un langage&#8230; je vous laisse juger :)</p>

<p>Voici un conseil de Clément que j&#8217;ai retrouvé sur son <a href="http://blog.clement.delafargue.name/posts/2013-04-01-delicious-burritos-in-php-with-phpz.html">blog</a> qui résume bien l&#8217;ambiance de ce talk :</p>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/phpz-drupal.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => Spray : REST on Akka]]></title>
    <link href="http://roddet.github.com/2013/10/scalaio-2013-spray-rest-on-akka/"/>
    <updated>2013-10-30T09:30:00-04:00</updated>
    <id>http://roddet.github.com/2013/10/scalaio-2013-spray-rest-on-akka</id>
    <content type="html"><![CDATA[<h2>Présentateur</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-mathias-doenitz.png">
Mathias Doenitz, lead developpeur de <a href="http://spray.io/">spray.io</a>, commiteur sur le projet <a href="http://akka.io/">Akka</a>.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/sirthias">@sirthias</a></li>
<li>G+ : <a href="https://plus.google.com/117715287005040955399">Mathias Doenitz</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/mathias-doenitz.html">Scala IO</a></li>
<li>La description de <a href="http://scala.io/events/spray-rest-on-akka.html">sa session ScalaIO</a></li>
</ul>


<br><br><br>


<h2>Le Talk</h2>

<p>Ce talk a eu comme objectif la présentation de Spray, une couche HTTP pour les acteurs d&#8217;<a href="http://akka.io/">Akka</a> à destination des développeurs Scala.</p>

<p><img src="http://roddet.github.com/images/scalaio2013/mathias-doenitz-spray-io.jpg"></p>

<h2>En Java nous avons déjà ce qu&#8217;il faut pour faire du HTTP</h2>

<p>Pour communiquer à travers HTTP, nous disposons de multiples librairies et frameworks dans l&#8217;écosystème de la JVM (Servlets, Restlet, Spring MVC, JAXRS, &#8230;). Scala étant basé sur la JVM, nous pouvons bien entendu &#8220;réutiliser&#8221; certains de ces outils.</p>

<p>Mais&#8230;</p>

<h2>Les outils Java => un enfer pour le développeur Scala</h2>

<p>Le développeur Scala est frustré car il y retrouve tous les défauts du monde Java qu&#8217;il a justement fui en faisant du Scala.</p>

<p>Quels sont ces défauts que nous retrouvons généralement dans nos librairies/frameworks ?</p>

<ul>
<li><p><em>Un conteneur Servlet</em> avec sa session qui limite la scalabilité horizontale</p></li>
<li><p><em>XML, XML, XML,&#8230;</em> Java étant un langage pas assez expressif pour être utilisé en DSL de façon convenable. Les configurations des outils Java reposent souvent sur d&#8217;autres formats XML, properties, &#8230; là où les autres langages peuvent aisément s&#8217;utiliser en configuration. On pensera à <a href="http://groovy.codehaus.org/">Groovy</a> avec la configuration d&#8217;un build <a href="http://www.gradle.org/">Gradle</a> ou encore à Scala avec la configuration <a href="http://www.scala-sbt.org/">SBT</a>. C&#8217;est dommage de se retrouver avec des fichiers XML à configurer lorsqu&#8217;on travaille avec un langage pour lequel il possible de créer un DSL qui compile !</p></li>
<li><p><em>Des API et objets du modèle &#8220;mutables&#8221;</em>. En développant en <em>Scala Style</em>, vous vous débrouillez pour réaliser une application en prenant soin d&#8217;éviter d&#8217;utiliser des objets <em>mutables</em> et vous voilà <em>condamné</em> à utiliser une API qui ne respecte pas vos principes et qui peut vous entrainer des comportements difficiles à prévoir.</p></li>
<li><p><em>Les collections Java</em>. Scala fournit une API <em>riche</em> pour manipuler des collections. Il est dommage de s&#8217;en priver.</p></li>
<li><p><em>Un typage limité</em>. Impossible de détecter des problèmes de configuration à la <em>compile</em>, trop de surprises au <em>runtime</em>.</p></li>
</ul>


<h2>Que souhaite le développeur Scala ?</h2>

<ul>
<li>Retrouver ses <em>case class</em></li>
<li>Communiquer en asynchrone via des messages (<em>Merci Akka</em>)</li>
<li>Utiliser des <em>closures</em>, on est en 2013 quand même ! :)</li>
<li>Consolider plusieurs requêtes asynchrones grâce aux <em>Futures</em></li>
<li>Manipuler <em>naturellement</em> ses collections avec une API avancée</li>
</ul>


<p>=> En somme, pouvoir pleinement profiter de Scala !</p>

<h2>Et voilà Spray !</h2>

<p>Spray a pour objectif de réaliser les souhaits du développeur Scala en se reposant complètement sur Scala et Akka.</p>

<p>Spray est construit de façon modulaire pour nous donner la possibilité de n&#8217;utiliser que les parties qui nous intéressent. Il y a de nombreux modules : <a href="http://spray.io/documentation/spray-caching/#spray-caching">spray-caching</a>, <a href="http://spray.io/documentation/spray-can/#spray-can">spray-can</a>, <a href="http://spray.io/documentation/spray-client/#spray-client">spray-client</a>, <a href="http://spray.io/documentation/spray-http/#spray-http">spray-http</a>, <a href="http://spray.io/documentation/spray-httpx/#spray-httpx">spray-httpx</a>, <a href="http://spray.io/documentation/spray-io/#spray-io">spray-io</a>, <a href="http://spray.io/documentation/spray-servlet/#spray-servlet">spray-servlet</a>, <a href="http://spray.io/documentation/spray-routing/#spray-routing">spray-routing</a>, <a href="http://spray.io/documentation/spray-testkit/#spray-testkit">spray-testkit</a>, <a href="http://spray.io/documentation/spray-util/#spray-util">spray-util</a>, <a href="https://github.com/spray/spray-json">spray-json</a>.</p>

<p>Mathias a poursuivi son talk en présentant quelques modules de Spray :</p>

<ul>
<li><p><a href="http://spray.io/documentation/spray-http/#spray-http">spray-http</a> => structures de données HTTP basées sur les <em>case class</em>. Ce module permet entre autres de créer des objets <em>Requête</em>, <em>Réponse</em>. Le paramétrage HTTP est lui aussi typé, des <em>case class</em> pour <em>Accept-Charset</em>, <em>Accept-Encoding</em> etc&#8230;</p></li>
<li><p><a href="http://spray.io/documentation/spray-can/#spray-can">spray-can</a> => API HTTP serveur et cliente de bas niveau construit sur <a href="http://doc.akka.io/docs/akka/2.1.0/scala/io.html">Akka IO</a>.</p></li>
<li><p><a href="http://spray.io/documentation/spray-routing/#spray-routing">spray-routing</a> => ce module fournit un DSL avec des très nombreuses directives pour décrire :</p>

<ul>
<li>le routage des requêtes</li>
<li>(Un)marshalling d&#8217;objets</li>
<li>la mise en cache des ressources statiques</li>
<li>la gestion des erreurs</li>
<li>&#8230;</li>
</ul>
</li>
</ul>


<h2>A savoir !</h2>

<ul>
<li>Spray est encore en cours de développement. A sa version finale, il changera de nom et s&#8217;appelera <em>akka-http</em>.</li>
<li><a href="http://www.playframework.com/">Play Framework</a> va progressivement abandonner <a href="http://netty.io/">Netty</a> pour <em>akka-http</em>.</li>
</ul>


<h2>Les slides de la présentation</h2>

<iframe src="http://spray.io/scala.io/" width="800" height="500" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen> </iframe>


<p>Lien direct : <a href="http://spray.io/scala.io/">http://spray.io/scala.io/</a></p>

<h2>Ce que j&#8217;en ai pensé</h2>

<p>Une bonne présentation d&#8217;un outil plein de promesses pour les développeurs Scala. Nous avons là une librairie qui va probablement devenir la référence dans l&#8217;écosystème de <a href="http://typesafe.com/">TypeSafe</a>.</p>

<p>L&#8217;abandon progressif de <a href="http://netty.io/">Netty</a> au profit de <em>akka-http</em> dans le projet <a href="http://www.playframework.com/">Play Framework</a> montre une nouvelle fois la volonté de <a href="http://typesafe.com/">TypeSafe</a> de créer un écosystème d&#8217;outils <em>fortement typés</em> pour Scala et ne garder de Java que la JVM :)</p>

<p>On peut <em>légitimement</em> se poser la question de la durée du support du langage Java dans les projets comme <a href="http://www.playframework.com/">Play Framework</a> et <a href="http://akka.io/">Akka</a> lorsque Scala aura <em>son</em> écosystème suffisamment développé.</p>

<p>Si vous souhaitez en savoir plus, je vous recommande les liens suivants :</p>

<ul>
<li><a href="http://spray.io/introduction/what-is-spray/#philosophy">La philosophie de Spray</a>, pourquoi il n&#8217;est pas conçu comme un framework</li>
<li><a href="http://spray.io/introduction/other-resources/">Des vidéos, slides, podcasts de l&#8217;équipe Spray</a></li>
<li>Et bien sûr, la documentation officielle à travers <a href="http://spray.io/introduction/">l&#8217;introduction</a> et <a href="http://spray.io/documentation/">la référence</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => Pimp my GC - du Scala supersonique]]></title>
    <link href="http://roddet.github.com/2013/10/scalaio-2013-pimp-my-gc-scala-supersonique/"/>
    <updated>2013-10-29T09:30:00-04:00</updated>
    <id>http://roddet.github.com/2013/10/scalaio-2013-pimp-my-gc-scala-supersonique</id>
    <content type="html"><![CDATA[<h2>Présentateur</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-pierre-laporte.png">
Pierre Laporte, consultant Java/Scala chez Xebia France.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/pingtimeout">@pingtimeout</a></li>
<li>Blog : <a href="http://www.pingtimeout.fr">http://www.pingtimeout.fr</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/pierre-laporte.html">Scala IO</a></li>
<li>La description de <a href="http://scala.io/events/pimp-my-gc-du-scala-supersonique.html">sa session ScalaIO</a></li>
</ul>


<br><br><br>


<h2>Une photo souvenir</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/pierre-laporte-pimp-my-gc-1.jpg"></p>

<h2>Il n&#8217;existe pas de tuning JVM miracle !</h2>

<p>La session commence par une mise en garde => Ne copier/coller pas des recettes de tuning JVM sur internet, il n&#8217;y a pas de solution universelle. Les solutions exposées sur le web sont spécifiques aux problèmes rencontrés par les auteurs et ne sont surtout pas applicables à toutes les applications.</p>

<p>Un conseil de Pierre :</p>

<blockquote><p>Si vous ne comprennez pas un flag, ne l&#8217;utilisez pas !</p><footer><strong>Pierre Laporte</strong></footer></blockquote>


<h2>L&#8217;hypothèse générationnelle, c&#8217;est vrai !</h2>

<p>Il s&#8217;agit d&#8217;une théorie énonçant que la plupart des objets meurent jeunes. Pierre va le mettre en évidence en comparant deux applications : 1 écrite en Java et 1 écrite en Scala. Ces 2 applications ont des consommations mémoires très différentes, en moyenne 48GB/j pour une et de l&#8217;ordre de 3 TB/j pour l&#8217;autre.</p>

<p>Laquelle des applications consomment 3 TB/j ? Java ou Scala ?</p>

<p>=> La réponse est dans ce cas Java&#8230; Bien évidemment, il s&#8217;agit de 2 applications complètement différentes et il n&#8217;est pas du tout question ici de dire que les applications Java consomment plus de mémoire que les applications Scala :)</p>

<p>Ce qu&#8217;il faut retenir, c&#8217;est que malgré cet écart de consommation mémoire, l&#8217;hypothèse générationnelle se vérifie pour les 2 applications, simplement à des échelles différentes.</p>

<h2>Deux zones mémoires pour la <em>Garbage Collector (GC)</em> avant G1</h2>

<ul>
<li><em>Young Generation</em> pour les objets jeunes</li>
<li><em>Old Generation</em> pour les vieux objets</li>
</ul>


<p><em>Comment est déterminé l&#8217;age d&#8217;un objet ?</em> => Au nombre de cycles du <em>Garbage Collector</em> auxquels a survécu un objet.</p>

<h2>Le temps de <em>GC</em> est proportionnel au nombre d&#8217;objets vivants !</h2>

<p>Pierre nous a présenté ses expériences qui vont mettre en évidence quelque chose de très intéressant sur nos programmes tournant sur la JVM.</p>

<h2>Expérience N°1</h2>

<ul>
<li>Faire tourner un programme qui crée de nombreux objets qui meurent vites</li>
<li>50 GB de mémoire</li>
<li>Un paramétrage de la <em>Young Generation</em> à 49.9 GB</li>
</ul>


<p>Nous avons là un paramétrage idéal du GC qui permet d&#8217;absorber la majorité des objets jeunes créés dans la <em>Young Generation</em>.</p>

<p><em>Le GC a mis 6 ms pour nettoyer 38GB de mémoire</em></p>

<h2>Expérience N°2</h2>

<ul>
<li>Faire tourner un programme qui crée de nombreux objets qui meurent vites</li>
<li>50 GB de mémoire</li>
<li>Un paramétrage de la <em>Young Generation</em> à 10 MB</li>
</ul>


<p>Nous avons là un paramétrage défavorable du <em>GC</em> qui va faire passer nos objets très rapidement dans la <em>Old Generation</em> faute de place dans la <em>Young Generation</em>.</p>

<p><em>Le GC mettra 322 ms pour nettoyer 52GB de mémoire</em></p>

<h2>Expérience N°3+</h2>

<p>Pierre refait les expériences précédentes avec un programme qui générent beaucoup d&#8217;objets qui vivent longtemps et là les performances du <em>GC</em> se sont révélées catastrophiques.</p>

<h2>L&#8217;immutabilité et le GC</h2>

<p>Avec les résultats des expériences précédentes, on craint moins les conséquences du concept d&#8217;immutabilité des langages fonctionnels comme Scala. Le <em>GC</em> nettoie aisément un grand nombre d&#8217;objets non référencés.</p>

<p>On peut quand même retenir comme conséquence de l&#8217;immutabilité, l&#8217;augmentation de la fréquence de passage du <em>GC</em>. Pierre nous propose dans ses slides, un tuning pour contrôler cette fréquence si jamais elle se révèle génante pour votre application.</p>

<h2>Comment tuner le <em>G1 (Garbage First) Garbage Collector</em> ?</h2>

<p>G1 est le nouvel algorithme poussé par Oracle depuis le JDK 7. La particularité avec cet algorithme est qu&#8217;il se paramètre &#8220;presque&#8221; tout seul.</p>

<p>Pierre nous propose d&#8217;observer les règles suivantes pour son tuning :</p>

<ul>
<li>Mettre la même valeur pour Xms et Xmx</li>
<li>Supprimez toutes nos optimisations antérieures (-Xmn, -XX:TenuringThreshold, &#8230;)</li>
<li>Définir des intervalles de temps pour le <em>GC</em> (-XX:MaxGCPauseMillis et -XX:GCPauseIntervalMillis)</li>
<li>Activer les logs GC</li>
</ul>


<h2>Les slides de la présentation</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/27543319?rel=0" width="600" height="500" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<h2>Ce que j&#8217;en ai pensé</h2>

<p>Nous avons eu droit à une présentation de qualité, bien rythmée. Pierre a fait preuve de pédagogie pour expliquer de façon claire le fonctionnement des différents algorithmes du <em>Garbage Collector</em> de la JVM.</p>

<p>Je me suis souvent inconsciemment inquiété des nombreux objets à durée de vie courte (de l&#8217;ordre de la méthode) que nous créons à travers nos programmes. Cette présentation me donne un nouveau regard sur ces objets :)</p>

<p>Présentation à revoir en vidéo pour ceux qui souhaitent avoir des éléments de compréhension du fonctionnement de la JVM d&#8217;Oracle.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => De Maven à SBT]]></title>
    <link href="http://roddet.github.com/2013/10/scalaio-2013-maven-sbt/"/>
    <updated>2013-10-28T09:30:00-04:00</updated>
    <id>http://roddet.github.com/2013/10/scalaio-2013-maven-sbt</id>
    <content type="html"><![CDATA[<h2>Présentateur</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-stephane-manciot.jpg">
Stéphane Manciot, Architecte chez ebiznext.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/smanciot">@smanciot</a></li>
<li>LinkedIn : <a href="http://www.linkedin.com/in/smanciot">http://www.linkedin.com/in/smanciot</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/stephane-manciot.html">Scala IO</a></li>
<li>La description de <a href="http://scala.io/events/de-maven-a-sbt.html">sa session ScalaIO</a></li>
</ul>


<br><br><br>


<h2>Une photo comme si vous y étiez !</h2>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/stephane-manciot-maven-sbt-1.jpg"></p>

<h2>Le Talk</h2>

<p>Stéphane nous a défini ce qui serait pour lui un outil de build idéal, c&#8217;est à dire un outil qui <em>facilite la vie des développeurs</em>. Ce talk fait suite à une migration de Maven à SBT d&#8217;un projet entièrement écrit en Java. Oui pas de code Scala dans le projet !</p>

<p>Deux idées principales dans ce <em>talk</em> :</p>

<h3>Partie 1 => SBT c&#8217;est mieux que Maven</h3>

<p>SBT et Maven seront comparés sur les thèmes suivants :</p>

<ul>
<li>Plugins Maven vs tâches SBT</li>
<li>Phases Maven vs Gestion des dépendances des tâches SBT</li>
<li>Performances</li>
<li>Gestion multiprojets</li>
<li>Cross compilation pour les projets Scala</li>
<li>Gestion des dépendances</li>
</ul>


<h3>Partie 2 => On peut faire du SBT en Entreprise</h3>

<p>Voici les préconisations de Stéphane :</p>

<ul>
<li>Configurer 2 catégories de dépôt en entreprise : Ivy et Maven.</li>
<li>Une solution pour publier les versions <em>snapshots</em> et <em>releases</em> (voir le code SBT dans les slides)</li>
<li>Une publication dans Sonar avec le plugin <a href="https://github.com/ebiznext/sbt-sonar">sbt-sonar</a> avec une couverture du code via le plugin <a href="https://bitbucket.org/jmhofer/jacoco4sbt">jacoco4sbt</a></li>
</ul>


<h2>Les slides de la présentation</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/27564746" width="600" height="500" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen> </iframe>


<h2>Ce que j&#8217;en ai pensé</h2>

<p>Une présentation intéressante qui met en évidence les différences de philosophie entre Maven et SBT. Pour ceux qui utilisent Maven au quotidien, elle montre les défauts de Maven qui ne sont pas toujours visibles lorsqu&#8217;on ne connait pas d&#8217;autres outils de build.</p>

<p>On pourra néanmoins regretter le manque d&#8217;objectivité lors de la comparaison Maven vs SBT. En effet, aucun défaut de SBT n&#8217;est cité dans les slides et à mon avis il y en a quand même :) J&#8217;ai le sentiment que la migration de Maven vers SBT de quelques projets Java chez ebiznext a surtout été motivé par la volonté d&#8217;harmoniser le système de build avec les projets scala de l&#8217;entreprise. Comme le confirmera la séance de questions/réponses, Gradle n&#8217;a par exemple pas été envisagé comme remplaçant éventuel de Maven.</p>

<p>Un dépôt Git est disponible pour illustrer ce talk <a href="https://github.com/ebiznext/maven2sbt">maven2sbt</a>.</p>

<p>J&#8217;ai lancé les 2 builds (Maven et SBT). Le build SBT est Ok, j&#8217;ai eu une erreur avec build Maven (Maven 3.1.1 et commande <em>mvn clean install</em>).</p>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/stephane-manciot-maven-sbt-2.png"></p>

<p><em>Mise à jour du 29/10/2013</em></p>

<p><em>Le build Maven fonctionne bien si l&#8217;on effectue &#8220;mvn clean&#8221; suivi de &#8220;mvn install&#8221;</em></p>

<p>Quoi qu&#8217;il en soit, c&#8217;est une très bonne initiative surtout que ce build traite des problématiques de génération de code, de compilation de code groovy, etc&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scala IO 2013 => Failure : The Good Parts]]></title>
    <link href="http://roddet.github.com/2013/10/scalaio-2013-failure-the-good-parts/"/>
    <updated>2013-10-27T09:30:00-04:00</updated>
    <id>http://roddet.github.com/2013/10/scalaio-2013-failure-the-good-parts</id>
    <content type="html"><![CDATA[<h2>Présentateur</h2>

<p><img class="left" src="http://roddet.github.com/images/scalaio2013/speaker-viktor-klang.jpeg">
Viktor Klang, Directeur de l&#8217;ingénierie chez <a href="http://typesafe.com/">Typesafe</a>.</p>

<ul>
<li>Twitter : <a href="https://twitter.com/viktorklang">@viktorklang</a></li>
<li>Tumblr : <a href="http://klangism.tumblr.com/">klangism</a></li>
<li>Sa bio sur <a href="http://scala.io/speakers/viktor-klang.html">Scala IO</a></li>
<li>La description de <a href="http://scala.io/events/launch-conference.html">sa session</a></li>
</ul>


<br><br><br>


<h2>La keynote du jour 1 de <em>Scala IO</em></h2>

<p>Cette session a constituée la Keynote du premier jour de l&#8217;événement.</p>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/viktor_klang_failure_good_part.jpg"></p>

<h2>Failure - The Bad Parts</h2>

<p>Viktor a commencé par nous présenter les mauvais côté d&#8217;un plantage d&#8217;un système. Il l&#8217;a illustré avec l&#8217;exemple du projet Ariane 5 dont l&#8217;objectif principal était de créer un lanceur de satéllites géostationnaires.
Le 4 juin 1996, ce projet qui représentait 10 ans de recherches, 7 milliards de dollars investis, s&#8217;est tristement fait remarqué lors d&#8217;un test d&#8217;un système de lancement &#8220;nouvelle génération&#8221; qui va entrainer la destruction d&#8217;une fusée quelques secondes après son décollage. On doit cet échec à une erreur de programmation qui va coûter près de 370 millions de dollars ce jour là.</p>

<p>Un plantage logiciel en production peut donc avoir des conséquences desastreuses tant pour l&#8217;entreprise et peut-être même pour les développeurs de la solution :)</p>

<h2>Pour quelles raisons un système plante ?</h2>

<ul>
<li>Surchage du système (trop d&#8217;utilisateurs, système sous dimensionné, &#8230;)</li>
<li>Plantage logiciel</li>
<li>Plantage matériel (CPU, RAM, HDD, &#8230;)</li>
<li>etc&#8230;</li>
</ul>


<p>Les causes possibles de plantage sont nombreux et de différentes natures. Les plantages font partis de la vie d&#8217;un système autant les prévoir.</p>

<h2>Validation vs Failure</h2>

<p>Viktor a mis l&#8217;accent sur les différences entre les tests que nous pouvons faire pour valider un système et un plantage.</p>

<p>Les différences mises en avant :</p>

<ul>
<li>La validation d&#8217;un logiciel est intentionnelle tandis qu&#8217;un plantage est involontaire</li>
<li>On attend d&#8217;une validation des résultats alors qu&#8217;on attend d&#8217;un plantage une reprise du système</li>
</ul>


<h2>Que savons-nous vraiment des erreurs possibles de notre système ?</h2>

<p>4 catégories :</p>

<ul>
<li><em>Known-Knows</em></li>
<li><em>Known-Unknows</em></li>
<li><em>Unknown-Knowns</em></li>
<li><em>Unknown-Unknows</em></li>
</ul>


<h2>Tester ou vérifier son système ?</h2>

<p>Les tests sont utiles pour la catégorie <em>known-knowns</em>.</p>

<p>Les vérifications du système sont utiles pour les catégories : <em>Unkown-Unknowns</em>, <em>Known-Unknowns</em> et <em>Unknown-Unknowns</em>.</p>

<p>Conclusion ? => Faites les 2 !</p>

<h2>Attention à la <em>Defensive Programming</em> !</h2>

<p>La peur d&#8217;une erreur inattendue de notre système pousse certains développeur à de la <em>defensive programming</em> qui conduit à :</p>

<ul>
<li>une confusion dans la gestion des responsabilités</li>
<li>des blocs <em>try&#8230;catch</em> abusifs pour essayer de prévoir tous les cas d&#8217;erreurs possibles</li>
</ul>


<h2>Comment gérer ses risques d&#8217;erreur avec le :) ?</h2>

<ul>
<li><em>Distribution</em> => Ne pas mettre tous ses oeufs dans le même panier.</li>
<li><em>Replication &amp; Failover</em> => Maintenez plusieurs exemplaires de votre contenu.</li>
<li><em>CircuitBreakers</em> => Mettre en place des moyens pour éviter de maintenir la pression sur les parties du système en erreur. Par exemple, si une base de données ne répond plus, il ne sert à rien de continuer à l&#8217;intérogger continuellement tant que le problème n&#8217;est pas résolu.</li>
<li><em>Supervisor</em> => Votre système doit vous notifier lorsqu&#8217;il y a des erreurs.</li>
<li><em>Bulkheading</em> => Cloisonner votre système.</li>
<li><em>Compartmentalization</em> => Compartimenter votre système pour éviter des effets en cascade sur tout votre système lorsqu&#8217;un composant est en erreur.</li>
<li><em>Graceful degradation</em> => prévoir des modes de fonctionnement alternatifs en cas de plantage.</li>
</ul>


<h2>Faites des microservices !</h2>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/failure_good_part_2.jpg"></p>

<h2>Quelques citations du talk</h2>

<p>Viktor a illustré ses propos avec de nombreuses citations, voici celles que j&#8217;ai notées :</p>

<blockquote><p>An expert is a man who has made all the mistakes which can be made, in a narrow field.</p><footer><strong>Niels Bohr</strong></footer></blockquote>




<blockquote><p>Program testing can be used to show the presence of bugs, but never to show their absence !</p><footer><strong>Edsger Dijkstra</strong></footer></blockquote>




<blockquote><p>A distributed system is one in which the failure of a computer you didn&#8217;t even know existed can render your own computer unusable.</p><footer><strong>Leslie Lamport</strong></footer></blockquote>




<blockquote><p>An escalator can never break: it can only become stairs. You should never see an Escalator Temporarily Out Of Order sign, just Escalator Temporarily Stairs. Sorry for the convenience.</p><footer><strong>Mitch Hedberg</strong></footer></blockquote>


<h2>Résumé du talk par Viktor</h2>

<p><img class="center" src="http://roddet.github.com/images/scalaio2013/failure_good_part_1.jpg"></p>

<h2>Ce que j&#8217;en ai pensé</h2>

<p>On a eu droit à un Viktor en forme qui maitrisait le flux de sa présentation, une session très intéressante sur la gestion des erreurs d&#8217;un système.</p>

<p>Ses slides ont du contenu intéressant, je n&#8217;ai pas pu trouver des traces de leur publication à ce jour. Vu que Viktor refait cette présentation en format <a href="http://typesafe.com/blog/tune-in-for-viktor-klangs-webinar"><em>Webinar</em> le 30 octobre prochain</a>, je pense qu&#8217;il les publiera après.</p>

<p>Cette session a été filmée, nous aurons probablement la possibilité de la revoir en ligne dans les prochaines semaines.</p>

<p>[<em>Edit 06/11/2013 Ci-dessous la vidéo du Webinar du 30 octobre</em>]</p>

<iframe width="640" height="360" src="http://roddet.github.com//www.youtube.com/embed/_XMRYkuaob4?feature=player_detailpage" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JCertif 2013, un événement, une nouvelle dimension]]></title>
    <link href="http://roddet.github.com/2013/10/jcertif-2013-retour/"/>
    <updated>2013-10-13T09:30:00-04:00</updated>
    <id>http://roddet.github.com/2013/10/jcertif-2013-retour</id>
    <content type="html"><![CDATA[<p>L&#8217;événement JCertif 2013 a été lancé ce lundi 09 septembre à Brazzaville (Congo) avec le déroulement suivant :</p>

<ul>
<li>Jour 1 - JCertif Community : journée dédiée au lancement de l&#8217;événement et à l&#8217;échange entre les communautés.</li>
<li>Jour 2 à Jour 4 - JCertif University : des cursus de formation de 3 jours</li>
<li>Jour 5 Google Days Developer</li>
<li>Jour 6 Google Days Business + Remise des prix aux gagnants de AAC (Africa Android Challenge) + JCertif Conference</li>
<li>Jour 7 - JCertif Conference</li>
</ul>


<h2>Jour 1 (JCertif Community) - Un challenge pour les organisateurs !</h2>

<ul>
<li>Nous avons eu cette année notre stand JCertif, il était temps ! C&#8217;est vrai que l&#8217;on s&#8217;y est pris à plusieurs pour le monter et ça n&#8217;a pas été aussi facile qu&#8217;on le pensait :) Bon, on assume !</li>
</ul>


<p><img src="http://roddet.github.com/images/jc2013/community_4.jpg" alt="Le stand JCertif" /></p>

<ul>
<li>C&#8217;était la première fois que nous organisions l&#8217;événement dans les grands locaux de la Bibliothèque Nationale. Il n&#8217;était pas facile de s&#8217;y retrouver :)</li>
</ul>


<p><img src="http://roddet.github.com/images/jc2013/community_3.jpg" alt="Locaux immenses de la bibliothèque Nationnale" /></p>

<ul>
<li>Nous n&#8217;étions pas &#8220;habitué&#8221; et outillé pour recevoir autant de monde ! Nous avons eu ce jour là plus de 1800 personnes soit 3 fois plus que l&#8217;édition 2012 sur cette même journée. Nous étions partagé, il est vrai entre la joie d&#8217;avoir autant de monde sur un événement aussi difficile à préparer et l&#8217;inquiétude de leur offrir une prestation de qualité.</li>
</ul>


<p>Comme on se le répète toujours au sein de JCertif :</p>

<blockquote><p>Ce n&#8217;est pas parce que c&#8217;est du gratuit que la qualité doit être sacrifiée !</p></blockquote>


<p><img src="http://roddet.github.com/images/jc2013/community_1.jpg" alt="Un monde fou qui arrive" /></p>

<p>Nous avons rempli les salles, les unes après les autres, avec toujours autant de monde à l&#8217;entrée :)</p>

<ul>
<li>C&#8217;était la première fois que nous recevions un ministre d&#8217;Etat à l&#8217;événement. Il s&#8217;agit de Mr. Thierry Moungala (Ministre des Postes et Télécommunications). Un ministre qui se déplace au Congo, ça ne passe jamais inaperçu et ça peut entrainer des mouvements de foule inattendus :)</li>
</ul>


<p><img src="http://roddet.github.com/images/jc2013/community_2.jpg" alt="Visite du ministre Thierry Moungala" /></p>

<ul>
<li>Toutes les salles étaient remplies et nous n&#8217;avions pas prévu d&#8217;animateurs pour autant de salles pour la matinée d&#8217;ouverture. Pour ceux qui ne pouvait pas suivre la Keynote, nous avons &#8220;occupé&#8221; les salles pour faire des mini-keynotes pour ceux qui n&#8217;avaient pas la possibilité d&#8217;assister à la Keynote. J&#8217;étais de ceux là !</li>
</ul>


<h2>Jour 1 (JCertif Community) - Un salon de discussion grandeur nature</h2>

<p>L&#8217;après-midi de cette journée était consacré à des discussions sur différents sujets. Par exemple :</p>

<ul>
<li>&#8220;Les femmes et les technologies&#8221; animée par <a href="https://plus.google.com/u/0/115905049403882293809/posts">Audrey Ehouman</a>, une &#8220;Google Student Ambassador&#8221; qui nous venait de Côte d&#8217;Ivoire et <a href="https://twitter.com/akinidanielle">Danielle Akini</a> du Cameroun.</li>
</ul>


<p><img src="http://roddet.github.com/images/jc2013/community_5.jpg" alt="Les femmes et les technologies" /></p>

<ul>
<li>&#8220;Startup Technologies&#8221; animée par <a href="http://www.linkedin.com/in/honorenzambu/en">Honoré Nzambu</a></li>
<li>&#8220;Metiers du Web Design&#8221; avec <a href="http://www.linkedin.com/pub/christian-manthe/67/b95/b0">Christian Manthe</a></li>
<li>&#8220;Adopt-JSR et Oracle Technology Network&#8221; par <a href="">Max Bonbhel</a></li>
</ul>


<p>Ces discussions ont été aussi l&#8217;opportunité de faire de la pédagogie sur le programme de l&#8217;événement. En effet, le lendemain, c&#8217;était déjà JCertif University, c&#8217;est à dire 11 salles simultanées de formation continue sur 3 jours.</p>

<h2>Jour 2 à Jour 4 (JCertif University) - Une soif de formation jamais vue !</h2>

<p>11+ tracks simultanées données pendant 3 jours par des guerriers de la formation de masse :</p>

<ul>
<li><a href="http://www.linkedin.com/in/honorenzambu/en">Honoré Nzambu</a> - Introduction à Java</li>
<li><a href="http://fr.viadeo.com/fr/profile/douglas.mbiandou">Douglas M&#8217;Biandou</a> - les 5 atouts clés de Java</li>
<li><a href="http://www.linkedin.com/pub/christian-manthe/67/b95/b0">Christian Manthe</a> - l&#8217;initiation à la création graphique avec Photoshop</li>
<li><a href="http://kwaye-g.blogspot.ca">Gabriel Kant KWAYE</a> - Google App Engine et HTML5</li>
<li><a href="http://www.linkedin.com/pub/davy-silou/56/405/303">Davy Silou</a> - Mise en oeuvre d&#8217;un réseau informatique en entreprise</li>
<li><a href="http://www.linkedin.com/pub/audran-youlou-zhazha/18/2b8/44a">Audran Youlou Zhazha</a> - Spring Batch</li>
<li><a href="https://twitter.com/Nelson_Cishugi">Nelson Cishugi</a> - Web Design</li>
<li><a href="http://fr.viadeo.com/fr/profile/jaouher.kasraoui">Jaouher Kasraoui</a> - SQL Server 2012</li>
<li>Sebastien Rocher (R&amp;B Tech) - Assemblez un réseau à partir de ZERO</li>
<li><a href="http://www.linkedin.com/pub/firas-gabsi/58/343/530">Firas Gabsi</a> - Cursus Java EE sur RaspberryPi</li>
<li><a href="http://www.linkedin.com/pub/dodo-ngoyi/72/bb3/107">Dodo Ngoyi</a> - Introduction à Photoshop</li>
<li>Dieudonné Kayembe - Introduction à Android</li>
<li>Etc&#8230;</li>
</ul>


<p>Nous n&#8217;avions pas accès à toutes les salles de la Bibliothèque Nationale, nous avons dû palier au manque de salle par ceci :</p>

<p><img src="http://roddet.github.com/images/jc2013/university_1.jpg" alt="JCertif University" /></p>

<p>Ou encore</p>

<p><img src="http://roddet.github.com/images/jc2013/university_2.jpg" alt="JCertif University" /></p>

<p>Ou encore sous des escaliers.</p>

<p><img src="http://roddet.github.com/images/jc2013/university_esc.jpg" alt="JCertif University" /></p>

<p>Une volonté d&#8217;apprendre hors du commun !</p>

<p>Ce qui fait la magie de cet événement, c&#8217;est que nous ne sommes pas capable de dire qui des formateurs ou des participants étaient les plus motivés. Une soif de partage des connaissances de la part des formateurs bénévoles, une faim sans précédent de connaissance pour les participants, les aléas logistiques passaient inaperçus face de tels passionnés.</p>

<p>Quant à moi, j&#8217;ai gardé espoir d&#8217;animer une university mais cette année les défis organisationels étaient trop grands, c&#8217;était simplement impossible pour moi.</p>

<h2>Jour 5 (GDays Developer) - Technos Google mais pas que et une surprise pour Rossi :)</h2>

<p>Le Jour 4, nous apprenons qu&#8217;un présentateur ne sera pas présent pour assurer un track Web (Chrome Developer Tools + AngularJS) le jour 5. J&#8217;avais prévu assister à une partie de cette session, finalement je vais assurer l&#8217;intérim !</p>

<p>Au menu me concernant :</p>

<h3>Débat autour du web moderne pour l&#8217;Afrique</h3>

<p>J&#8217;ai commencé par présenter les slides suivants :</p>

<script async class="speakerdeck-embed" data-id="2cbaa74015bf013197c20aec338a7267" data-ratio="1.77777777777778" src="http://roddet.github.com//speakerdeck.com/assets/embed.js"></script>


<p>Nous avons passé une bonne partie de la matinée à discuter &#8220;Web moderne pour l&#8217;Afrique&#8221;.</p>

<h3>Chrome Developer Tools In Action</h3>

<p>Je développe depuis quelques années avec les outils pour développeur de Chrome. Au point même qu&#8217;aujourd&#8217;hui j&#8217;ai du mal à utiliser mon ancien ami &#8220;Firebug&#8221;. C&#8217;était l&#8217;occasion ici de présenter différents trucs &amp; astuces et les différents usages possibles en dehors d&#8217;une activité de développement habituelle.</p>

<h3>Workshop AngularJS made in Nantes by <a href="https://twitter.com/richard_antoine">Antoine Richard</a></h3>

<p>J&#8217;avais, il y a quelques mois, assisté à une brillante prestation d&#8217;Antoine lors d&#8217;un Workshop AngularJS. Le retour de ce workshop <a href="http://blog.roddet.com/2013/04/stereolux-workshop-html5/">ici</a>. J&#8217;ai réutilisé le même support pour présenter AngularJS. Et oui Antoine, tes travaux ont parcouru plus de 6000 km !</p>

<p><img src="http://roddet.github.com/images/jc2013/university_3.jpg" alt="JCertif University" /></p>

<h2>Jour 6 (GDays Business) - L&#8217;ouverture de la conférence</h2>

<p><img class="left" src="http://roddet.github.com/images/jc2013/conference_aac_1.jpg">
Le samedi 14 septembre, changement de décors, c&#8217;est l&#8217;ouverture de la conférence et cette partie de l&#8217;événement a lieu à l&#8217;Institut Français de Brazzaville.</p>

<p>Après une présentation de JCertif et un mot des différents partenaires de l&#8217;événement, nous avons assisté à la remise des prix du concours <a href="http://androidchallenge.org/">AAC (Africa Android Challenge)</a> organisé chaque année par JCertif.
Le gagnant cette année est <a href="http://fr.linkedin.com/pub/tidiane-sy/1a/9b2/44a">Tidiane Sy</a> qui a fait spécialement le déplacement jusqu&#8217;à Brazzaville pour recevoir son prix. Il a remporté le concours grâce à son application <a href="https://play.google.com/store/apps/details?id=com.baamtu.android.andandor">Andandor</a>, une application Android qui permet d&#8217;accéder au CRM <a href="https://www.openerp.com/">OpenERP</a>.</p>

<p>La remise de prix a été assurée par Mr. Bruno Itoua, Ministre de la recherche et de l&#8217;innovation Technologiques.</p>

<p>L&#8217;événement a poursuivi son cours avec des sessions variées comme :</p>

<ul>
<li>&#8220;Comment profiter de la puissance d&#8217;Internet&#8221; avec <a href="https://twitter.com/thibaultvincent">Thibault Vincent</a>,</li>
<li>&#8220;Google Apps for Business&#8221; avec <a href="https://plus.google.com/110897604292774924710">Noé Diakubama</a></li>
<li>ou encore &#8220;Google Maps Engine&#8221; par <a href="https://plus.google.com/101607562378592091898/posts">Cyprien Tankeu</a>.</li>
</ul>


<h2>Jour 7 (Conference) - JCertif Lab à l&#8217;honneur</h2>

<p>Après une ouverture de session réalisée par <a href="https://twitter.com/bonbhel">Max Bonbhel</a>, j&#8217;ai pris la parole pour présenter JCertif Lab, ses objectifs, ses projets, &#8230;</p>

<p>Les slides sont disponibles <a href="http://jcertiflab.github.io/jcertiflab-slides/">ici</a>.</p>

<p><img src="http://roddet.github.com/images/jc2013/conference_jcertiflab_2.jpg" alt="JCertif Lab" /></p>

<p>J&#8217;ai donné ensuite la parole à <a href="http://tn.linkedin.com/pub/firas-gabsi/58/343/530">Firas Gabsi</a>, le lead du projet JCertif Smart House qui a pour objectif d&#8217;offrir une solution open source de commande d&#8217;équipement à distance.</p>

<p><img src="http://roddet.github.com/images/jc2013/conference_jcertiflab_3.jpg" alt="JCertif Lab" /></p>

<p>Voici une petite vidéo de la démonstration du projet relayée sur la chaine youtube officiel de java. Firas qui demande à un participant de venir tester l&#8217;application Android en live pour commander une lampe.</p>

<p>Lien direct : <a href="http://www.youtube.com/watch?v=zO0DJS6yQR0">ici</a></p>

<iframe width="640" height="360" src="http://roddet.github.com//www.youtube.com/embed/zO0DJS6yQR0?feature=player_detailpage" frameborder="0" allowfullscreen></iframe>


<p>Un panel de discussion ouvert été organisé avec 3 représentants des opérateurs téléphoniques du Congo (<a href="http://www.africa.airtel.com/wps/wcm/connect/africaairtel/congob/">Airtel</a>, <a href="http://www.mtncongo.net/">MTN</a> et <a href="http://www.waridtel.cg/">Warid</a>). On s&#8217;attendait au pire, étant donné la compétition féroce qu&#8217;il y a entre ces opérateurs, le débat fut cordiale et respectueux.</p>

<p>J&#8217;ai ensuite assisté aux sessions suivantes :</p>

<ul>
<li><p>La &#8220;Data&#8221;, l&#8217;or noir du numérique par <a href="http://fr.linkedin.com/pub/thierry-bomandouki/4/386/2b6">Thierry Bomandouki</a>. Une session très intéressante qui faisait prendre conscience de l&#8217;importance des données et de l&#8217;usage de nos données par les grandes entreprises comme Facebook, Google &#8230; J&#8217;ai bien aimé le style de présentation de Thierry, un excellent Speaker qui a su nous captiver et nous faire rêver avec plus de paroles que de slides !</p></li>
<li><p>&#8220;Community powered innovation using Red Hat technologies&#8221; par <a href="http://uk.linkedin.com/in/nabeelsaad">Nabeel Saad</a>, Architecte chez Redhat. Il a fait un très bon résumé des produits Redhat allant du développement au déploiement d&#8217;applications. A chaque étape, il a distingué les produits open source et leurs équivalents version &#8220;Entreprise&#8221;. Hors événement, ce fut une formidable rencontre pour moi qui évolue dans l&#8217;écosystème Java EE. C&#8217;était très intéressant d&#8217;échanger avec lui sur des produits comme <a href="https://www.openshift.com/">OpenShift</a>, <a href="http://www.jboss.org/drools/">Drools</a>, etc&#8230;</p></li>
<li><p>Responsive Web Design et Ergonomie par <a href="https://twitter.com/Nelson_Cishugi">Cishugi Nelson</a>. Un raffraichissement sur les notions d&#8217;ergonomie, de design adaptatif par un professionnel du Design Web. Nelson est l&#8217;un des rares africains (peut-être le premier ?) à être certifié Adobe.</p></li>
</ul>


<h2>Jour 8 - Oui il y a eu un jour 8 qui n&#8217;était pas dans l&#8217;agenda !</h2>

<p>Difficile de trouver un nom officiel à cette journée. Certains diront qu&#8217;il s&#8217;agit de &#8220;JCertif Excursion 2013&#8221;, d&#8217;autres de &#8220;JCertif Bonus 2013&#8221;, d&#8217;autres de &#8220;JCertif Lab Bis&#8221;&#8230; Les organisateurs n&#8217;ont pas encore tranchés :)</p>

<p>Mais ce jour qui n&#8217;est pas dans l&#8217;agenda est devenu une tradition à JCertif. Après l&#8217;événement, les organisateurs et les présentateurs sont invités à une aventure à des endroits touristiques du Congo.</p>

<p>Ca commence par un voyage en car dans une ambiance folle.</p>

<p><img src="http://roddet.github.com/images/jc2013/excursion_1.jpg" alt="JCertif Lab" /></p>

<p>Un trajet pour rejoindre une île dans des conditions uniques en son genre :)</p>

<p><img src="http://roddet.github.com/images/jc2013/excursion_2.jpg" alt="JCertif Lab" /></p>

<p>Bon je vous raconte tout cela mais je n&#8217;y étais pas en fait :)</p>

<p>Oui, pendant ce temps, j&#8217;étais dans les locaux de notre partenaire <a href="http://www.waridtel.cg/">Warid Congo</a> pour la planification et la mise en place de l&#8217;architecture d&#8217;un projet dans le cadre du partenariat Warid Lab &amp; JCertif Lab. Nous avons l&#8217;ambition de faire monter en compétence 4 jeunes congolais pour qu&#8217;ils puissent créer une startup avec le lancement d&#8217;un produit innovant. A suivre&#8230;</p>

<h2>JCertif 2013 en quelques chiffres</h2>

<p>JCertif 2013, c&#8217;est :</p>

<ul>
<li>7 jours(+1?) en continue, un véritable Marathon !</li>
<li>1800+ participants</li>
<li>105 femmes</li>
<li>120 sessions</li>
<li>30 présentateurs (en incluant les représentants des partenaires)</li>
<li>10 communautés africaines (GDG Douala, GDG Yaounde, GDG Brazza, GDG Kinshasa, Burkina Faso JUG, Togo JUG, RDC-JUG, Kin-JUG, Douala JUG, CongoJUG, Google Student Ambassador)</li>
<li>2 ministres de la République du Congo qui font le déplacement</li>
<li>20 exposants (partenaires)</li>
</ul>


<h2>Plus de photos ?</h2>

<ul>
<li>JCertif Conference : <a href="https://plus.google.com/photos/101033732619256173933/albums/5925894537709454225">https://plus.google.com/photos/101033732619256173933/albums/5925894537709454225</a></li>
<li>JCertif University : <a href="https://plus.google.com/photos/101033732619256173933/albums/5925907860998340961">https://plus.google.com/photos/101033732619256173933/albums/5925907860998340961</a></li>
<li>JCertif Excursion : <a href="https://plus.google.com/photos/101033732619256173933/albums/592590922027848177">https://plus.google.com/photos/101033732619256173933/albums/5925909220278481777</a></li>
</ul>


<h2>Nos ambitions</h2>

<p>Organiser plusieurs événements JCertif en Afrique en 2014 :</p>

<ul>
<li>JCertif DR Congo Lubumbashi en Mars</li>
<li>JCertif DR Congo Kinshasa en Avril</li>
<li>JCertif Côte d&#8217;ivoire Abidjan en Juin</li>
<li>JCertif Cameroon en Juillet</li>
<li>JCertif Brazzaville en Septembre</li>
<li>JCertif TChad en Septembre</li>
</ul>


<p>Projet fou ? Oui c&#8217;est le cas ! Rendez-vous en 2014 pour savoir si nous avons survécu à nos ambitions !</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JCertif Express 2013 # Lancement Java EE 7]]></title>
    <link href="http://roddet.github.com/2013/07/jcertif-express-javaee7/"/>
    <updated>2013-07-06T18:00:00-04:00</updated>
    <id>http://roddet.github.com/2013/07/jcertif-express-javaee7</id>
    <content type="html"><![CDATA[<p>Oracle organise une tournée de lancement officiel de Java EE 7 en Afrique et ça commence aujourd&#8217;hui en côte d&#8217;ivoire !</p>

<p>Les pays suivants sont concernés : Egypte, Sénégal, Maroc, Burkina Faso, Afrique du Sud, Kenya, Congo-Kinshasa, Congo-Brazzaville, Algérie, Ghana, Uganda, Côte d&#8217;ivoire, Cameroun.</p>

<p>Oracle choisit, encore une fois, JCertif pour communiquer avec l&#8217;Afrique. Dans 4 pays, vont être organisés des événements appelé JCertif Express qui vont promovoir Java EE 7 :</p>

<ul>
<li><a href="https://plus.google.com/u/0/events/c51lkb8jikfu1t6bpea6939903k">6 juillet : Côte d&#8217;ivoire</a></li>
<li>11 juillet : Congo-Kinshasa</li>
<li><a href="https://plus.google.com/u/0/events/cjtqn9jt9m73sl4891qmtkp3m6o">16 juillet : Cameroun - Yaoundé</a></li>
<li><a href="https://plus.google.com/events/cijb923vkpms1ae6rko3fvd5s9s">14 juillet : Cameroun - Douala</a></li>
<li><a href="https://www.facebook.com/media/set/?set=a.480869275338752.1073741825.309434862482195&amp;type=3">18 juillet : Congo-Brazzaville</a></li>
</ul>


<p><img class="center" src="http://roddet.github.com/images/jcertif_express/jcertif_express.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[BreizhCamp 2013 # J'y étais]]></title>
    <link href="http://roddet.github.com/2013/06/breizhcamp-j-y-etais/"/>
    <updated>2013-06-14T20:00:00-04:00</updated>
    <id>http://roddet.github.com/2013/06/breizhcamp-j-y-etais</id>
    <content type="html"><![CDATA[<p>Les 13 et 14 juin derniers, j&#8217;ai eu l&#8217;occasion de participer pour la première fois à l&#8217;événement <a href="http://www.breizhcamp.org/">BreizhCamp</a> qui a lieu chaque année à Rennes.</p>

<p>Pendant 2 jours, se sont enchainés différents formats (Conférence, Université, Hands-on, Tools In Action, Quickies) de présentation sur des sujets variés.</p>

<h2>Rencontre avec NAO</h2>

<p>Il y avait un participant pas comme les autres sur le stand de <a href="http://www.sqli.com/">SQLI</a> : le robot NAO.</p>

<p><img class="center" src="http://roddet.github.com/images/breizhcamp13/parcours/nao_stand_sqli.jpg"></p>

<p>C&#8217;était la première fois que je le voyais &#8220;en vrai&#8221;. On pouvait l&#8217;entendre nous souhaiter la bienvenue au BreizhCamp ou encore le voir exécuter des chorégraphies (Thriller, Gangnam Style, &#8230;)</p>

<p><img class="center" src="http://roddet.github.com/images/breizhcamp13/parcours/nao_stand_sqli_thriller.jpg"></p>

<p>C&#8217;était impressionnant de voir ses capacités en terme de liberté de mouvements ou encore d&#8217;interaction via le son ou encore l&#8217;image.</p>

<h2>Le logo BreizhCamp</h2>

<p>Nous avons pu découvrir l&#8217;origine du logo du BreizhCamp (voir image ci-dessous).</p>

<p><img class="center" src="http://roddet.github.com/images/breizhcamp13/parcours/logo-breizh.jpg"></p>

<h2>Le a.k.a BreizhCamp Style</h2>

<p>Nous avons tous dansé (au moins en esprit) la version revisitée du Gangnam Style.</p>

<p><img class="center" src="http://roddet.github.com/images/breizhcamp13/parcours/breizhcamp-style.jpg"></p>

<h2>Les sessions</h2>

<p>J&#8217;ai pu participer aux sessions suivantes (les liens vous mènent aux articles liés du blog) :</p>

<h3>Jour 1</h3>

<ul>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-javascript-sol-au-plafond/">Javascript du sol au plafond</a> avec Xavier Seignard et Sébastien Prunier</li>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-angularjs-directives/">Angularjs - démystification des directives</a> avec Antoine Richard</li>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-dans-scas-la/">C&#8217;est le moment de s&#8217;lancer dans s&#8217;cas là !</a> avec Ludwine Probst et Jonathan Winandy</li>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-gatling/">Stressez vos applications web avec Gatling</a> en tant qu&#8217;animateur.</li>
</ul>


<h3>Jour 2</h3>

<ul>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-winter-is-coming/">Winter is coming (Keynote)</a> avec Didier Gérard et Aurélien Pelletier</li>
<li>SASS, Compass et Blueprint, ou les css à la cool par Mathias Standaert</li>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-web-components/">Web Components, l&#8217;avenir des développeurs web</a> par Julien Vey</li>
<li>Un jeu iOS/Android sans HTML, Objective-C, Java ? par Florian Ramière</li>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-python-nao/">Utilisation de python sur le robot humanoïde NAO</a> par Franck Calzada et NAO</li>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-android-bootstrap/">Android BootStrap : Rex sur les librairies android</a> par Jean-François Garreau</li>
<li><a href="http://blog.roddet.com/2013/06/breizhcamp-papy-fait-du-scala/">Papy fait du Scala</a> avec Damien Lecan</li>
<li>Bien configurer Scala SBT en entreprise avec Damien Lecan</li>
</ul>


<h2>Un petit bilan</h2>

<p>Le BreizhCamp, c&#8217;est 2 jours concentrés de technologies. J&#8217;ai évidemment appris beaucoup de choses. Quand je prends un peu de recul et que je regarde les sessions auxquelles j&#8217;ai assisté, je constate qu&#8217;il n&#8217;y a aucune qui parle de Java EE (ma spécialité normalement&#8230;:)). En regardant <a href="http://www.breizhcamp.org/programme/">le programme du BreizhCamp</a>, on se rend compte que Java EE n&#8217;est pas beaucoup représenté (à peine un Hands-on). On pourrait penser qu&#8217;avec la sortie de Java EE 7 qui a eu lieu la veille, on serait inondé de sessions sur le sujet, et non !
Ce n&#8217;est pas une spécificité du BreizhCamp, Devoxx France 2013 m&#8217;a aussi donné ce sentiment global. A croire qu&#8217;à force d&#8217;évoluer lentement sans de véritables innovations, la plateforme Java EE donne l&#8217;impression de vieillir et de provoquer ainsi un certain désintérêt de ses disciples&#8230;</p>

<p>Les conférences permettent aussi d&#8217;afficher les technologies &#8220;à la mode&#8221;. On peut sans conteste dire que la technologie qui a été omniprésente au BreizhCamp est <a href="http://angularjs.org/">AngularJS</a>. Dans la plupart des présentations d&#8217;une technologie Web, une référence à <a href="http://angularjs.org/">AngularJS</a> était citée. On pouvait même croire que ce mot était utilisé pour apporter du crédit à certains propos (oui j&#8217;exagère un peu :)). C&#8217;est tout de même surprenant d&#8217;avoir un produit qui fait autant l&#8217;unanimité et semble ne pas avoir de concurrents&#8230; J&#8217;aime la concurrence, je pense que c&#8217;est ce qui fait progresser des produits et j&#8217;espère avoir des concurrents qui vont se démarquer rapidement&#8230; On entend de loin <a href="http://emberjs.com/">Emberjs</a> mais on l&#8217;entend encore de trop loin&#8230;</p>

<p><a href="http://www.aldebaran-robotics.com/en/">NAO</a> nous a également permis de nous ouvrir l&#8217;esprit en pensant à autre chose qu&#8217;à des applications web. Oui c&#8217;est vrai nous faisons toujours la même chose même si nous varions la déco avec AngularJS (oui moi aussi j&#8217;en parle :)), du NodeJS, du Java ou du Scala. <a href="http://www.aldebaran-robotics.com/en/">NAO</a> nous projette dans le futur et comme dit Franck Calzada &#8220;Avec NAO, à nous d&#8217;imaginer les usages !&#8221;.</p>

<p>Bravo aux organisateurs pour ce bel événement et rendez-vous l&#8217;année prochaine, au BreizhCamp 2014 !</p>
]]></content>
  </entry>
  
</feed>
